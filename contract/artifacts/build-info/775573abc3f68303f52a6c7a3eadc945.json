{"id":"775573abc3f68303f52a6c7a3eadc945","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/interfaces/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/introspection/IERC165.sol\";\n"},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\nimport \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"},"@openzeppelin/contracts/interfaces/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../token/ERC721/IERC721.sol\";\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            _balances[from] -= 1;\n            _balances[to] += 1;\n        }\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _tokenApprovals[tokenId] = to;\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC721.sol\";\nimport \"../../../interfaces/IERC4906.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Optional mapping for token URIs\n    mapping(uint256 => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\n        if (bytes(_tokenURI).length > 0) {\n            return string(abi.encodePacked(base, _tokenURI));\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        require(_exists(tokenId), \"ERC721URIStorage: URI set of nonexistent token\");\n        _tokenURIs[tokenId] = _tokenURI;\n\n        emit MetadataUpdate(tokenId);\n    }\n\n    /**\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\n     * the storage mapping.\n     */\n    function _burn(uint256 tokenId) internal virtual override {\n        super._burn(tokenId);\n\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\n            delete _tokenURIs[tokenId];\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/RSKNFT.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.19;\r\n\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\r\n\r\n\r\ncontract RSKNFT is ERC721URIStorage , ReentrancyGuard {\r\n\r\n     /// @notice implement the Counter libarary for counting tokenId\r\n    using Counters for Counters.Counter;\r\n    Counters.Counter private _tokenId; // tokenId\r\n    Counters.Counter  private _soldItems; // total items\r\n    uint8 public constant OPEN_STATUS = 1; // open status\r\n    uint8 public constant COMPLETED_STATUS = 2; // close status\r\n    uint256 public minAuctionIncrement = 10; // 10 percent\r\n    address payable owner;\r\n\r\n\r\n    mapping (uint256 => NFT) NFT_ID;\r\n    mapping(uint256 => Listing) public listings;\r\n    mapping(uint256 => mapping(address => uint256)) public bids;\r\n    mapping(uint256 => address) public highestBidder;\r\n\r\n    // nft struct\r\n     struct NFT {\r\n        address owner;\r\n        address seller;\r\n        uint256 price;\r\n        bool sold;\r\n        uint256 tokenId;\r\n    }\r\n\r\n    struct Listing {\r\n        address seller;\r\n        address owner;\r\n        uint256 tokenId;\r\n        uint256 price; // display price\r\n        uint256 netPrice; // actual price\r\n        uint256 startAt;\r\n        uint256 endAt; \r\n        uint8 status;\r\n    }\r\n\r\n      /// @notice NFT event action\r\n      /// @dev handled all events related to nfts in the contract\r\n      /// @param tokenId, @param owner, @param seller, @param price, @param sold\r\n    event NFT_Action(\r\n        uint256 tokenId,\r\n        address owner,\r\n        address seller,\r\n        uint256 price,\r\n        bool sold,\r\n        string message\r\n    );\r\n\r\n    /// @dev Auction creation events\r\n    /// @param listingId, @param seller, @param price, @param tokenId, @param startAt, @param endAt, @param message\r\n    event AuctionCreated(\r\n        uint256 listingId, \r\n        address indexed seller, \r\n        uint256 price, \r\n        uint256 tokenId, \r\n        uint256 startAt, \r\n        uint256 endAt,\r\n        string message    \r\n    );\r\n\r\n    /// @dev Auction completed event\r\n    /// @param listingId, @param seller ,  @param bidder, @param bid, @param message\r\n    event AuctionCompleted(\r\n        uint256 listingId,\r\n        address indexed seller, \r\n        address indexed bidder, \r\n        uint256 bid,\r\n        string message\r\n    );\r\n\r\n    /// @dev bidding event\r\n    /// @param listingId, @param bidder, @param bid, @param message\r\n    event BidCreated(\r\n        uint256 listingId, \r\n        address indexed bidder, \r\n        uint256 bid,\r\n        string message\r\n    );\r\n\r\n\r\n     constructor() ERC721(\"CeloNFT\", \"ASG\"){\r\n        owner = payable(msg.sender);\r\n    }\r\n\r\n      /// @dev mint token , set tokenURI and return currentTokenId\r\n     /// @param _tokenURI, a tokenURI obtained from IPFS\r\n     /// @return currentTokenId, current token id\r\n    function mintToken(string memory _tokenURI, uint256 price) external returns(uint256) {\r\n        _tokenId.increment(); // increment tokenId\r\n        uint256 currentTokenId = _tokenId.current(); // get current tokenId\r\n        _mint(msg.sender,currentTokenId); // mint token\r\n        _setTokenURI(currentTokenId,_tokenURI); // set token uri from IPFS\r\n         createNFT(currentTokenId,price);\r\n        return currentTokenId;\r\n    }\r\n\r\n     /// @dev mint token , set tokenURI and return currentTokenId\r\n     /// @param _tokenURI, a tokenURI obtained from IPFS\r\n     /// @return currentTokenId, current token id\r\n    function mintAuctionToken(string memory _tokenURI, uint256 price, uint256 durationInSeconds) external returns(uint256) {\r\n        _tokenId.increment(); // increment tokenId\r\n        uint256 currentTokenId = _tokenId.current(); // get current tokenId\r\n        _mint(msg.sender,currentTokenId); // mint token\r\n        _setTokenURI(currentTokenId,_tokenURI); // set token uri from IPFS\r\n         createAuctionListing(price,currentTokenId,durationInSeconds);\r\n        return currentTokenId;\r\n    }\r\n\r\n    function createNFT(uint256 tokenId, uint256 price) internal {\r\n    uint256 currentTokenId = _tokenId.current();\r\n    NFT_ID[currentTokenId] = NFT(\r\n        payable(address(this)),\r\n        payable(msg.sender),\r\n        price,\r\n        false,\r\n        tokenId\r\n    );\r\n\r\n        _transfer(msg.sender,address(this),tokenId); // transfer ownership of nft to the marketplace owner\r\n\r\n        emit NFT_Action(\r\n            tokenId,\r\n            address(this),\r\n            msg.sender,\r\n            price,\r\n            false,\r\n            \"NFT created successfuly\"\r\n        );\r\n\r\n    }\r\n\r\n\r\n        /// @dev create auction listing\r\n        /// @param price, @param tokenId, @param durationInSeconds\r\n        /// @return listingId\r\n     function createAuctionListing (uint256 price, uint256 tokenId, uint256 durationInSeconds) public returns (uint256) {\r\n        uint256 currentTokenId = _tokenId.current();\r\n        uint256 listingId = currentTokenId;\r\n        uint256 startAt = block.timestamp;\r\n        uint256 endAt = startAt + durationInSeconds;\r\n\r\n        listings[listingId] = Listing({\r\n            seller: payable(msg.sender),\r\n            owner : payable(address(this)),\r\n            tokenId: tokenId,\r\n            price: price,\r\n            netPrice: price,\r\n            status: OPEN_STATUS,\r\n            startAt: startAt,\r\n            endAt: endAt\r\n        });\r\n\r\n        _transfer(msg.sender, address(this), tokenId);\r\n\r\n        emit AuctionCreated(\r\n            listingId, \r\n            msg.sender, \r\n            price, \r\n            tokenId, \r\n            startAt, \r\n            endAt,\r\n            \"Auction created successfully\"\r\n            );\r\n\r\n        return listingId;\r\n    }\r\n\r\n    /// @dev Nft auction completion functionality\r\n    /// @param listingId , listingId\r\n    function completeAuction(uint256 listingId) public payable nonReentrant {\r\n        require(!isAuctionOpen(listingId), 'auction is still open');\r\n\r\n        Listing storage listing = listings[listingId];\r\n        address winner = highestBidder[listingId]; \r\n        require(\r\n            msg.sender == listing.seller || msg.sender == winner, \r\n            'only seller or winner can complete auction'\r\n        );\r\n\r\n        if(winner != address(0)) {\r\n           _transfer(address(this), winner, listing.tokenId);\r\n\r\n            uint256 amount = bids[listingId][winner]; \r\n            bids[listingId][winner] = 0;\r\n            _transferFund(payable(listing.seller), amount);\r\n\r\n        } else {\r\n            _transfer(address(this), listing.seller, listing.tokenId);\r\n        }\r\n\r\n        listing.status = COMPLETED_STATUS;\r\n\r\n        emit AuctionCompleted(\r\n            listingId,\r\n            listing.seller, \r\n            winner, \r\n            bids[listingId][winner],\r\n            \"Auction completed successfully\"\r\n            );\r\n    }\r\n\r\n    function bid(uint256 listingId) public payable nonReentrant {\r\n        require(isAuctionOpen(listingId), 'auction has ended');\r\n        Listing storage listing = listings[listingId];\r\n        require(msg.sender != listing.seller, \"cannot bid on what you own\");\r\n\r\n        uint256 newBid = bids[listingId][msg.sender] + msg.value;\r\n        require(newBid >= listing.price, \"cannot bid below the latest bidding price\");\r\n\r\n        bids[listingId][msg.sender] += msg.value;\r\n        highestBidder[listingId] = msg.sender;\r\n\r\n        uint256 incentive = listing.price / minAuctionIncrement;\r\n        listing.price = listing.price + incentive;\r\n\r\n        emit BidCreated(\r\n            listingId, \r\n            msg.sender, \r\n            newBid,\r\n            \"Bid created successfully\"\r\n            );\r\n    }\r\n\r\n     /// @dev NFT sales functionality and process payment to seller\r\n    /// @param tokenId,  NFT token id\r\n    function sellNFT(uint256 tokenId) external payable {\r\n        uint256 _price = NFT_ID[tokenId].price;\r\n        address seller = NFT_ID[tokenId].seller;\r\n        require(msg.value == _price, \"incorrect amount\");\r\n        (bool success,) = payable(seller).call{value : _price}(\"\"); // make payment to seller\r\n        require(success, \"payment failed\");\r\n        NFT_ID[tokenId].owner = payable(msg.sender);\r\n        NFT_ID[tokenId].seller = payable(address(0)); // set seller to empty address\r\n        NFT_ID[tokenId].sold = true;\r\n        _soldItems.increment();\r\n        _transfer(address(this),msg.sender,tokenId); // transfer ownership to sender\r\n\r\n        emit NFT_Action(\r\n            tokenId,\r\n            msg.sender,\r\n            address(0),\r\n            _price,\r\n            true,\r\n            \"Sold NFT successfully\"\r\n        );\r\n    }\r\n\r\n      /// @notice All nfts retrieval,\r\n    /// @return props\r\n    function allNfts() external view returns (NFT[] memory) {\r\n        uint currentTokenId = _tokenId.current();\r\n        NFT[] memory items = new NFT[](currentTokenId);\r\n        for (uint i = 0; i < items.length; i++) {\r\n            items[i] = NFT_ID[i + 1];\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n     /// @notice retrieval of single nft\r\n    /// @return props\r\n    function singleNFT(uint256 tokenId) external view returns(NFT memory props){\r\n        props = NFT_ID[tokenId];\r\n    }\r\n\r\n      /// @notice retrieval of all purchased nfts that belong to a user\r\n    /// @return props\r\n    function userNfts() external view returns (NFT[] memory) {\r\n    uint currentTokenId = _tokenId.current();\r\n    uint itemCount = 0;\r\n\r\n    for (uint i = 1; i <= currentTokenId; i++) {\r\n        if (NFT_ID[i].owner == msg.sender) {\r\n            itemCount++;\r\n        }\r\n    }\r\n\r\n    NFT[] memory items = new NFT[](itemCount);\r\n    itemCount = 0;\r\n\r\n    // Populate the array with user's NFTs\r\n    for (uint i = 1; i <= currentTokenId; i++) {\r\n        if (NFT_ID[i].owner == msg.sender) {\r\n            items[itemCount] = NFT_ID[i];\r\n            itemCount++;\r\n        }\r\n    }\r\n\r\n    return items;\r\n}\r\n\r\n    /// @notice retrieve nft price\r\n    /// @param tokenId ,tokenId\r\n    /// @return uint256\r\n    function getNftPrice(uint256 tokenId) external view returns(uint256){\r\n        return NFT_ID[tokenId].price;\r\n    }\r\n\r\n    /// @dev check if auction is open\r\n    /// @param id , auction id\r\n    function isAuctionOpen(uint256 id) public view returns (bool) {\r\n        return\r\n            listings[id].status == OPEN_STATUS &&\r\n            listings[id].endAt > block.timestamp;\r\n    }\r\n\r\n    function _transferFund(address payable to, uint256 amount) internal {\r\n        if (amount == 0) {\r\n            return;\r\n        }\r\n        require(to != address(0), 'Error, cannot transfer to address(0)');\r\n\r\n        (bool transferSent, ) = to.call{value: amount}(\"\");\r\n        require(transferSent, \"Error, failed to send Ether\");\r\n    }\r\n\r\n\r\n    \r\n}"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@openzeppelin/contracts/interfaces/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","exportedSymbols":{"IERC165":[2027]},"id":3,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../utils/introspection/IERC165.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3,"sourceUnit":2028,"src":"116:44:0","symbolAliases":[],"unitAlias":""}],"src":"91:70:0"},"id":0},"@openzeppelin/contracts/interfaces/IERC4906.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","exportedSymbols":{"IERC165":[2027],"IERC4906":[24],"IERC721":[1135]},"id":25,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:1"},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC165.sol","file":"./IERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":25,"sourceUnit":3,"src":"132:23:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","file":"./IERC721.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":25,"sourceUnit":28,"src":"156:23:1","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8,"name":"IERC165","nameLocations":["248:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":2027,"src":"248:7:1"},"id":9,"nodeType":"InheritanceSpecifier","src":"248:7:1"},{"baseName":{"id":10,"name":"IERC721","nameLocations":["257:7:1"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"257:7:1"},"id":11,"nodeType":"InheritanceSpecifier","src":"257:7:1"}],"canonicalName":"IERC4906","contractDependencies":[],"contractKind":"interface","documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"181:45:1","text":"@title EIP-721 Metadata Update Extension"},"fullyImplemented":false,"id":24,"linearizedBaseContracts":[24,1135,2027],"name":"IERC4906","nameLocation":"236:8:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":12,"nodeType":"StructuredDocumentation","src":"271:201:1","text":"@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."},"eventSelector":"f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7","id":16,"name":"MetadataUpdate","nameLocation":"483:14:1","nodeType":"EventDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[{"constant":false,"id":14,"indexed":false,"mutability":"mutable","name":"_tokenId","nameLocation":"506:8:1","nodeType":"VariableDeclaration","scope":16,"src":"498:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":13,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"497:18:1"},"src":"477:39:1"},{"anonymous":false,"documentation":{"id":17,"nodeType":"StructuredDocumentation","src":"522:212:1","text":"@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."},"eventSelector":"6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c","id":23,"name":"BatchMetadataUpdate","nameLocation":"745:19:1","nodeType":"EventDefinition","parameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":19,"indexed":false,"mutability":"mutable","name":"_fromTokenId","nameLocation":"773:12:1","nodeType":"VariableDeclaration","scope":23,"src":"765:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":18,"name":"uint256","nodeType":"ElementaryTypeName","src":"765:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":21,"indexed":false,"mutability":"mutable","name":"_toTokenId","nameLocation":"795:10:1","nodeType":"VariableDeclaration","scope":23,"src":"787:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":20,"name":"uint256","nodeType":"ElementaryTypeName","src":"787:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"764:42:1"},"src":"739:68:1"}],"scope":25,"src":"226:583:1","usedErrors":[]}],"src":"107:703:1"},"id":1},"@openzeppelin/contracts/interfaces/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC721.sol","exportedSymbols":{"IERC165":[2027],"IERC721":[1135]},"id":28,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":26,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"91:23:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../token/ERC721/IERC721.sol","id":27,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":28,"sourceUnit":1136,"src":"116:37:2","symbolAliases":[],"unitAlias":""}],"src":"91:63:2"},"id":2},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[92]},"id":93,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":29,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:3"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":30,"nodeType":"StructuredDocumentation","src":"137:750:3","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":92,"linearizedBaseContracts":[92],"name":"ReentrancyGuard","nameLocation":"906:15:3","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":33,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:3","nodeType":"VariableDeclaration","scope":92,"src":"1676:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":31,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":36,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:3","nodeType":"VariableDeclaration","scope":92,"src":"1723:37:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":34,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:3","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":38,"mutability":"mutable","name":"_status","nameLocation":"1783:7:3","nodeType":"VariableDeclaration","scope":92,"src":"1767:23:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":37,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":45,"nodeType":"Block","src":"1811:39:3","statements":[{"expression":{"id":43,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":41,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"1821:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":42,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"1831:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":44,"nodeType":"ExpressionStatement","src":"1821:22:3"}]},"id":46,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":39,"nodeType":"ParameterList","parameters":[],"src":"1808:2:3"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[],"src":"1811:0:3"},"scope":92,"src":"1797:53:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":56,"nodeType":"Block","src":"2251:79:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":49,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":72,"src":"2261:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":50,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":51,"nodeType":"ExpressionStatement","src":"2261:21:3"},{"id":52,"nodeType":"PlaceholderStatement","src":"2292:1:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2303:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"2303:20:3"}]},"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"1856:366:3","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":57,"name":"nonReentrant","nameLocation":"2236:12:3","nodeType":"ModifierDefinition","parameters":{"id":48,"nodeType":"ParameterList","parameters":[],"src":"2248:2:3"},"src":"2227:103:3","virtual":false,"visibility":"internal"},{"body":{"id":71,"nodeType":"Block","src":"2375:248:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":63,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":61,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"2468:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":62,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"2479:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":60,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"2460:63:3"},{"expression":{"id":69,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":67,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"2598:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":68,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"2608:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":70,"nodeType":"ExpressionStatement","src":"2598:18:3"}]},"id":72,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:3","nodeType":"FunctionDefinition","parameters":{"id":58,"nodeType":"ParameterList","parameters":[],"src":"2364:2:3"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"2375:0:3"},"scope":92,"src":"2336:287:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":79,"nodeType":"Block","src":"2667:171:3","statements":[{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":75,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"2809:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":76,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":33,"src":"2819:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":78,"nodeType":"ExpressionStatement","src":"2809:22:3"}]},"id":80,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:3","nodeType":"FunctionDefinition","parameters":{"id":73,"nodeType":"ParameterList","parameters":[],"src":"2656:2:3"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[],"src":"2667:0:3"},"scope":92,"src":"2629:209:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":90,"nodeType":"Block","src":"3081:43:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":86,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":38,"src":"3098:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":87,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":36,"src":"3109:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":85,"id":89,"nodeType":"Return","src":"3091:26:3"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"2844:168:3","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":91,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:3","nodeType":"FunctionDefinition","parameters":{"id":82,"nodeType":"ParameterList","parameters":[],"src":"3049:2:3"},"returnParameters":{"id":85,"nodeType":"ParameterList","parameters":[{"constant":false,"id":84,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":91,"src":"3075:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":83,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:3"},"scope":92,"src":"3017:107:3","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":93,"src":"888:2238:3","usedErrors":[]}],"src":"112:3015:3"},"id":3},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Address":[1666],"Context":[1688],"ERC165":[2015],"ERC721":[1019],"IERC165":[2027],"IERC721":[1135],"IERC721Metadata":[1336],"IERC721Receiver":[1153],"Math":[2893],"SignedMath":[2998],"Strings":[1991]},"id":1020,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":94,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":95,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1136,"src":"132:23:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"./IERC721Receiver.sol","id":96,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1154,"src":"156:31:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":97,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1337,"src":"188:42:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":98,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1667,"src":"231:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":99,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1689,"src":"265:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":100,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":1992,"src":"299:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":101,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1020,"sourceUnit":2016,"src":"333:46:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":103,"name":"Context","nameLocations":["647:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1688,"src":"647:7:4"},"id":104,"nodeType":"InheritanceSpecifier","src":"647:7:4"},{"baseName":{"id":105,"name":"ERC165","nameLocations":["656:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"656:6:4"},"id":106,"nodeType":"InheritanceSpecifier","src":"656:6:4"},{"baseName":{"id":107,"name":"IERC721","nameLocations":["664:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"664:7:4"},"id":108,"nodeType":"InheritanceSpecifier","src":"664:7:4"},{"baseName":{"id":109,"name":"IERC721Metadata","nameLocations":["673:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":1336,"src":"673:15:4"},"id":110,"nodeType":"InheritanceSpecifier","src":"673:15:4"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":102,"nodeType":"StructuredDocumentation","src":"381:246:4","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":1019,"linearizedBaseContracts":[1019,1336,1135,2015,2027,1688],"name":"ERC721","nameLocation":"637:6:4","nodeType":"ContractDefinition","nodes":[{"global":false,"id":113,"libraryName":{"id":111,"name":"Address","nameLocations":["701:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1666,"src":"701:7:4"},"nodeType":"UsingForDirective","src":"695:26:4","typeName":{"id":112,"name":"address","nodeType":"ElementaryTypeName","src":"713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"global":false,"id":116,"libraryName":{"id":114,"name":"Strings","nameLocations":["732:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":1991,"src":"732:7:4"},"nodeType":"UsingForDirective","src":"726:26:4","typeName":{"id":115,"name":"uint256","nodeType":"ElementaryTypeName","src":"744:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":118,"mutability":"mutable","name":"_name","nameLocation":"791:5:4","nodeType":"VariableDeclaration","scope":1019,"src":"776:20:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":117,"name":"string","nodeType":"ElementaryTypeName","src":"776:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":120,"mutability":"mutable","name":"_symbol","nameLocation":"838:7:4","nodeType":"VariableDeclaration","scope":1019,"src":"823:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":119,"name":"string","nodeType":"ElementaryTypeName","src":"823:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":124,"mutability":"mutable","name":"_owners","nameLocation":"934:7:4","nodeType":"VariableDeclaration","scope":1019,"src":"898:43:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":123,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":121,"name":"uint256","nodeType":"ElementaryTypeName","src":"906:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"898:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":122,"name":"address","nodeType":"ElementaryTypeName","src":"917:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":128,"mutability":"mutable","name":"_balances","nameLocation":"1028:9:4","nodeType":"VariableDeclaration","scope":1019,"src":"992:45:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":127,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"1000:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"992:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":132,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1129:15:4","nodeType":"VariableDeclaration","scope":1019,"src":"1093:51:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":131,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":129,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1093:27:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":130,"name":"address","nodeType":"ElementaryTypeName","src":"1112:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":138,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1252:18:4","nodeType":"VariableDeclaration","scope":1019,"src":"1199:71:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":137,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":133,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:44:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":136,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1218:24:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":135,"name":"bool","nodeType":"ElementaryTypeName","src":"1237:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":154,"nodeType":"Block","src":"1446:57:4","statements":[{"expression":{"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":146,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1456:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":147,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":141,"src":"1464:5:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1456:13:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":149,"nodeType":"ExpressionStatement","src":"1456:13:4"},{"expression":{"id":152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":150,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"1479:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":151,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":143,"src":"1489:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1479:17:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":153,"nodeType":"ExpressionStatement","src":"1479:17:4"}]},"documentation":{"id":139,"nodeType":"StructuredDocumentation","src":"1277:108:4","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":155,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":144,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"name_","nameLocation":"1416:5:4","nodeType":"VariableDeclaration","scope":155,"src":"1402:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":140,"name":"string","nodeType":"ElementaryTypeName","src":"1402:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"symbol_","nameLocation":"1437:7:4","nodeType":"VariableDeclaration","scope":155,"src":"1423:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":142,"name":"string","nodeType":"ElementaryTypeName","src":"1423:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1401:44:4"},"returnParameters":{"id":145,"nodeType":"ParameterList","parameters":[],"src":"1446:0:4"},"scope":1019,"src":"1390:113:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2014,2026],"body":{"id":185,"nodeType":"Block","src":"1678:192:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":166,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1707:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":168,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1135,"src":"1727:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$1135_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$1135_$","typeString":"type(contract IERC721)"}],"id":167,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1722:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1722:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$1135","typeString":"type(contract IERC721)"}},"id":170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1736:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1722:25:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1707:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":172,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1763:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":174,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1336,"src":"1783:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1336_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$1336_$","typeString":"type(contract IERC721Metadata)"}],"id":173,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1778:4:4","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1778:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$1336","typeString":"type(contract IERC721Metadata)"}},"id":176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1800:11:4","memberName":"interfaceId","nodeType":"MemberAccess","src":"1778:33:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1763:48:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:104:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":181,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1851:11:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":179,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1827:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$1019_$","typeString":"type(contract super ERC721)"}},"id":180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1833:17:4","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2014,"src":"1827:23:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1827:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1707:156:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":165,"id":184,"nodeType":"Return","src":"1688:175:4"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"1509:56:4","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":186,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1579:17:4","nodeType":"FunctionDefinition","overrides":{"id":162,"nodeType":"OverrideSpecifier","overrides":[{"id":160,"name":"ERC165","nameLocations":["1646:6:4"],"nodeType":"IdentifierPath","referencedDeclaration":2015,"src":"1646:6:4"},{"id":161,"name":"IERC165","nameLocations":["1654:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":2027,"src":"1654:7:4"}],"src":"1637:25:4"},"parameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"interfaceId","nameLocation":"1604:11:4","nodeType":"VariableDeclaration","scope":186,"src":"1597:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":157,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1597:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1596:20:4"},"returnParameters":{"id":165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":186,"src":"1672:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":163,"name":"bool","nodeType":"ElementaryTypeName","src":"1672:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1671:6:4"},"scope":1019,"src":"1570:300:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1060],"body":{"id":209,"nodeType":"Block","src":"2010:123:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2028:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2045:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2037:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":197,"name":"address","nodeType":"ElementaryTypeName","src":"2037:7:4","typeDescriptions":{}}},"id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2037:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2028:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572","id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2049:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""},"value":"ERC721: address zero is not a valid owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","typeString":"literal_string \"ERC721: address zero is not a valid owner\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2020:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2020:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":204,"nodeType":"ExpressionStatement","src":"2020:73:4"},{"expression":{"baseExpression":{"id":205,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"2110:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":207,"indexExpression":{"id":206,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"2120:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2110:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":194,"id":208,"nodeType":"Return","src":"2103:23:4"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"1876:48:4","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":210,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1938:9:4","nodeType":"FunctionDefinition","overrides":{"id":191,"nodeType":"OverrideSpecifier","overrides":[],"src":"1983:8:4"},"parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"owner","nameLocation":"1956:5:4","nodeType":"VariableDeclaration","scope":210,"src":"1948:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":188,"name":"address","nodeType":"ElementaryTypeName","src":"1948:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1947:15:4"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":210,"src":"2001:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":192,"name":"uint256","nodeType":"ElementaryTypeName","src":"2001:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2000:9:4"},"scope":1019,"src":"1929:204:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1068],"body":{"id":237,"nodeType":"Block","src":"2271:138:4","statements":[{"assignments":[220],"declarations":[{"constant":false,"id":220,"mutability":"mutable","name":"owner","nameLocation":"2289:5:4","nodeType":"VariableDeclaration","scope":237,"src":"2281:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":219,"name":"address","nodeType":"ElementaryTypeName","src":"2281:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":224,"initialValue":{"arguments":[{"id":222,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":213,"src":"2306:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":221,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"2297:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2297:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2281:33:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":226,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2332:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2341:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"2341:7:4","typeDescriptions":{}}},"id":230,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2341:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2332:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2353:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":225,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":233,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2324:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":234,"nodeType":"ExpressionStatement","src":"2324:56:4"},{"expression":{"id":235,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":220,"src":"2397:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":218,"id":236,"nodeType":"Return","src":"2390:12:4"}]},"documentation":{"id":211,"nodeType":"StructuredDocumentation","src":"2139:46:4","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":238,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2199:7:4","nodeType":"FunctionDefinition","overrides":{"id":215,"nodeType":"OverrideSpecifier","overrides":[],"src":"2244:8:4"},"parameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"tokenId","nameLocation":"2215:7:4","nodeType":"VariableDeclaration","scope":238,"src":"2207:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":212,"name":"uint256","nodeType":"ElementaryTypeName","src":"2207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2206:17:4"},"returnParameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":238,"src":"2262:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"2262:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2261:9:4"},"scope":1019,"src":"2190:219:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1321],"body":{"id":247,"nodeType":"Block","src":"2540:29:4","statements":[{"expression":{"id":245,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2557:5:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":244,"id":246,"nodeType":"Return","src":"2550:12:4"}]},"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"2415:51:4","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":248,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2480:4:4","nodeType":"FunctionDefinition","overrides":{"id":241,"nodeType":"OverrideSpecifier","overrides":[],"src":"2507:8:4"},"parameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"2484:2:4"},"returnParameters":{"id":244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":248,"src":"2525:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":242,"name":"string","nodeType":"ElementaryTypeName","src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2524:15:4"},"scope":1019,"src":"2471:98:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1327],"body":{"id":257,"nodeType":"Block","src":"2704:31:4","statements":[{"expression":{"id":255,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":120,"src":"2721:7:4","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":254,"id":256,"nodeType":"Return","src":"2714:14:4"}]},"documentation":{"id":249,"nodeType":"StructuredDocumentation","src":"2575:53:4","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":258,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2642:6:4","nodeType":"FunctionDefinition","overrides":{"id":251,"nodeType":"OverrideSpecifier","overrides":[],"src":"2671:8:4"},"parameters":{"id":250,"nodeType":"ParameterList","parameters":[],"src":"2648:2:4"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":258,"src":"2689:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":252,"name":"string","nodeType":"ElementaryTypeName","src":"2689:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2688:15:4"},"scope":1019,"src":"2633:102:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1335],"body":{"id":296,"nodeType":"Block","src":"2889:188:4","statements":[{"expression":{"arguments":[{"id":268,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"2914:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":267,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"2899:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2899:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":270,"nodeType":"ExpressionStatement","src":"2899:23:4"},{"assignments":[272],"declarations":[{"constant":false,"id":272,"mutability":"mutable","name":"baseURI","nameLocation":"2947:7:4","nodeType":"VariableDeclaration","scope":296,"src":"2933:21:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":271,"name":"string","nodeType":"ElementaryTypeName","src":"2933:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":275,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":273,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"2957:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2957:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2933:34:4"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":278,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"2990:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2984:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":276,"name":"bytes","nodeType":"ElementaryTypeName","src":"2984:5:4","typeDescriptions":{}}},"id":279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2984:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2999:6:4","memberName":"length","nodeType":"MemberAccess","src":"2984:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3008:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2984:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3068:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2984:86:4","trueExpression":{"arguments":[{"arguments":[{"id":287,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":272,"src":"3036:7:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":261,"src":"3045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3053:8:4","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"3045:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3045:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":285,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3019:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3023:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"3019:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3019:45:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3012:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":283,"name":"string","nodeType":"ElementaryTypeName","src":"3012:6:4","typeDescriptions":{}}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":266,"id":295,"nodeType":"Return","src":"2977:93:4"}]},"documentation":{"id":259,"nodeType":"StructuredDocumentation","src":"2741:55:4","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":297,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2810:8:4","nodeType":"FunctionDefinition","overrides":{"id":263,"nodeType":"OverrideSpecifier","overrides":[],"src":"2856:8:4"},"parameters":{"id":262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":261,"mutability":"mutable","name":"tokenId","nameLocation":"2827:7:4","nodeType":"VariableDeclaration","scope":297,"src":"2819:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"2819:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2818:17:4"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":297,"src":"2874:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":264,"name":"string","nodeType":"ElementaryTypeName","src":"2874:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2873:15:4"},"scope":1019,"src":"2801:276:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":305,"nodeType":"Block","src":"3385:26:4","statements":[{"expression":{"hexValue":"","id":303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3402:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":302,"id":304,"nodeType":"Return","src":"3395:9:4"}]},"documentation":{"id":298,"nodeType":"StructuredDocumentation","src":"3083:231:4","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":306,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3328:8:4","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[],"src":"3336:2:4"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"3370:13:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":300,"name":"string","nodeType":"ElementaryTypeName","src":"3370:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3369:15:4"},"scope":1019,"src":"3319:92:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1108],"body":{"id":348,"nodeType":"Block","src":"3538:336:4","statements":[{"assignments":[316],"declarations":[{"constant":false,"id":316,"mutability":"mutable","name":"owner","nameLocation":"3556:5:4","nodeType":"VariableDeclaration","scope":348,"src":"3548:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":315,"name":"address","nodeType":"ElementaryTypeName","src":"3548:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":321,"initialValue":{"arguments":[{"id":319,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"3579:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":317,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3564:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3571:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"3564:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3564:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3548:39:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":323,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3605:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":324,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3611:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3605:11:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572","id":326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3618:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""},"value":"ERC721: approval to current owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","typeString":"literal_string \"ERC721: approval to current owner\""}],"id":322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3597:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3597:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"ExpressionStatement","src":"3597:57:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":330,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3686:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3686:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":332,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3702:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3686:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":335,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":316,"src":"3728:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":336,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3735:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3735:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":334,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"3711:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3711:37:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3686:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","id":340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3762:63:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""},"value":"ERC721: approve caller is not token owner or approved for all"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","typeString":"literal_string \"ERC721: approve caller is not token owner or approved for all\""}],"id":329,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3665:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3665:170:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":342,"nodeType":"ExpressionStatement","src":"3665:170:4"},{"expression":{"arguments":[{"id":344,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3855:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":345,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":311,"src":"3859:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":343,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":869,"src":"3846:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:21:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":347,"nodeType":"ExpressionStatement","src":"3846:21:4"}]},"documentation":{"id":307,"nodeType":"StructuredDocumentation","src":"3417:46:4","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":349,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3477:7:4","nodeType":"FunctionDefinition","overrides":{"id":313,"nodeType":"OverrideSpecifier","overrides":[],"src":"3529:8:4"},"parameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":309,"mutability":"mutable","name":"to","nameLocation":"3493:2:4","nodeType":"VariableDeclaration","scope":349,"src":"3485:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":308,"name":"address","nodeType":"ElementaryTypeName","src":"3485:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":311,"mutability":"mutable","name":"tokenId","nameLocation":"3505:7:4","nodeType":"VariableDeclaration","scope":349,"src":"3497:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"3497:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3484:29:4"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[],"src":"3538:0:4"},"scope":1019,"src":"3468:406:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1124],"body":{"id":366,"nodeType":"Block","src":"4020:82:4","statements":[{"expression":{"arguments":[{"id":359,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4045:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":358,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"4030:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4030:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":361,"nodeType":"ExpressionStatement","src":"4030:23:4"},{"expression":{"baseExpression":{"id":362,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"4071:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":364,"indexExpression":{"id":363,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":352,"src":"4087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4071:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":357,"id":365,"nodeType":"Return","src":"4064:31:4"}]},"documentation":{"id":350,"nodeType":"StructuredDocumentation","src":"3880:50:4","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":367,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3944:11:4","nodeType":"FunctionDefinition","overrides":{"id":354,"nodeType":"OverrideSpecifier","overrides":[],"src":"3993:8:4"},"parameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":352,"mutability":"mutable","name":"tokenId","nameLocation":"3964:7:4","nodeType":"VariableDeclaration","scope":367,"src":"3956:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"3956:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3955:17:4"},"returnParameters":{"id":357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":367,"src":"4011:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"4011:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4010:9:4"},"scope":1019,"src":"3935:167:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1116],"body":{"id":383,"nodeType":"Block","src":"4253:69:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":377,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4282:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":379,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"4296:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":380,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4306:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":376,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"4263:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4263:52:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":382,"nodeType":"ExpressionStatement","src":"4263:52:4"}]},"documentation":{"id":368,"nodeType":"StructuredDocumentation","src":"4108:56:4","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":384,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4178:17:4","nodeType":"FunctionDefinition","overrides":{"id":374,"nodeType":"OverrideSpecifier","overrides":[],"src":"4244:8:4"},"parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"operator","nameLocation":"4204:8:4","nodeType":"VariableDeclaration","scope":384,"src":"4196:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":369,"name":"address","nodeType":"ElementaryTypeName","src":"4196:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"approved","nameLocation":"4219:8:4","nodeType":"VariableDeclaration","scope":384,"src":"4214:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":371,"name":"bool","nodeType":"ElementaryTypeName","src":"4214:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4195:33:4"},"returnParameters":{"id":375,"nodeType":"ParameterList","parameters":[],"src":"4253:0:4"},"scope":1019,"src":"4169:153:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1134],"body":{"id":401,"nodeType":"Block","src":"4491:59:4","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":395,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4508:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":397,"indexExpression":{"id":396,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":387,"src":"4527:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":399,"indexExpression":{"id":398,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":389,"src":"4534:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4508:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":394,"id":400,"nodeType":"Return","src":"4501:42:4"}]},"documentation":{"id":385,"nodeType":"StructuredDocumentation","src":"4328:55:4","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":402,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4397:16:4","nodeType":"FunctionDefinition","overrides":{"id":391,"nodeType":"OverrideSpecifier","overrides":[],"src":"4467:8:4"},"parameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":387,"mutability":"mutable","name":"owner","nameLocation":"4422:5:4","nodeType":"VariableDeclaration","scope":402,"src":"4414:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":386,"name":"address","nodeType":"ElementaryTypeName","src":"4414:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":389,"mutability":"mutable","name":"operator","nameLocation":"4437:8:4","nodeType":"VariableDeclaration","scope":402,"src":"4429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":388,"name":"address","nodeType":"ElementaryTypeName","src":"4429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4413:33:4"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":402,"src":"4485:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"4485:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4484:6:4"},"scope":1019,"src":"4388:162:4","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1100],"body":{"id":428,"nodeType":"Block","src":"4701:207:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"4790:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4790:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":417,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4804:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":414,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"4771:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4814:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":413,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4763:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4763:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"4763:99:4"},{"expression":{"arguments":[{"id":423,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":405,"src":"4883:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":424,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":407,"src":"4889:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":425,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":409,"src":"4893:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4873:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4873:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":427,"nodeType":"ExpressionStatement","src":"4873:28:4"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"4556:51:4","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4621:12:4","nodeType":"FunctionDefinition","overrides":{"id":411,"nodeType":"OverrideSpecifier","overrides":[],"src":"4692:8:4"},"parameters":{"id":410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"from","nameLocation":"4642:4:4","nodeType":"VariableDeclaration","scope":429,"src":"4634:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":404,"name":"address","nodeType":"ElementaryTypeName","src":"4634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":407,"mutability":"mutable","name":"to","nameLocation":"4656:2:4","nodeType":"VariableDeclaration","scope":429,"src":"4648:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"4648:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":409,"mutability":"mutable","name":"tokenId","nameLocation":"4668:7:4","nodeType":"VariableDeclaration","scope":429,"src":"4660:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":408,"name":"uint256","nodeType":"ElementaryTypeName","src":"4660:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4633:43:4"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[],"src":"4701:0:4"},"scope":1019,"src":"4612:296:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1090],"body":{"id":447,"nodeType":"Block","src":"5067:56:4","statements":[{"expression":{"arguments":[{"id":441,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"5094:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":442,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"5100:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":443,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":436,"src":"5104:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":444,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5113:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":440,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[448,478],"referencedDeclaration":478,"src":"5077:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5077:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":446,"nodeType":"ExpressionStatement","src":"5077:39:4"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"4914:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":448,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4983:16:4","nodeType":"FunctionDefinition","overrides":{"id":438,"nodeType":"OverrideSpecifier","overrides":[],"src":"5058:8:4"},"parameters":{"id":437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"from","nameLocation":"5008:4:4","nodeType":"VariableDeclaration","scope":448,"src":"5000:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":431,"name":"address","nodeType":"ElementaryTypeName","src":"5000:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"to","nameLocation":"5022:2:4","nodeType":"VariableDeclaration","scope":448,"src":"5014:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":433,"name":"address","nodeType":"ElementaryTypeName","src":"5014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"tokenId","nameLocation":"5034:7:4","nodeType":"VariableDeclaration","scope":448,"src":"5026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":435,"name":"uint256","nodeType":"ElementaryTypeName","src":"5026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4999:43:4"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[],"src":"5067:0:4"},"scope":1019,"src":"4974:149:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1080],"body":{"id":477,"nodeType":"Block","src":"5301:164:4","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":463,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"5338:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5338:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":465,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":462,"name":"_isApprovedOrOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"5319:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) view returns (bool)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5319:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5362:47:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""},"value":"ERC721: caller is not token owner or approved"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","typeString":"literal_string \"ERC721: caller is not token owner or approved\""}],"id":461,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5311:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5311:99:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"5311:99:4"},{"expression":{"arguments":[{"id":471,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"5434:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":472,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":453,"src":"5440:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":473,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":455,"src":"5444:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":474,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":457,"src":"5453:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":470,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"5420:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5420:38:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":476,"nodeType":"ExpressionStatement","src":"5420:38:4"}]},"documentation":{"id":449,"nodeType":"StructuredDocumentation","src":"5129:55:4","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":478,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"5198:16:4","nodeType":"FunctionDefinition","overrides":{"id":459,"nodeType":"OverrideSpecifier","overrides":[],"src":"5292:8:4"},"parameters":{"id":458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"from","nameLocation":"5223:4:4","nodeType":"VariableDeclaration","scope":478,"src":"5215:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":453,"mutability":"mutable","name":"to","nameLocation":"5237:2:4","nodeType":"VariableDeclaration","scope":478,"src":"5229:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":452,"name":"address","nodeType":"ElementaryTypeName","src":"5229:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":455,"mutability":"mutable","name":"tokenId","nameLocation":"5249:7:4","nodeType":"VariableDeclaration","scope":478,"src":"5241:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":454,"name":"uint256","nodeType":"ElementaryTypeName","src":"5241:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":457,"mutability":"mutable","name":"data","nameLocation":"5271:4:4","nodeType":"VariableDeclaration","scope":478,"src":"5258:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":456,"name":"bytes","nodeType":"ElementaryTypeName","src":"5258:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5214:62:4"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[],"src":"5301:0:4"},"scope":1019,"src":"5189:276:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":506,"nodeType":"Block","src":"6428:165:4","statements":[{"expression":{"arguments":[{"id":491,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6448:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":492,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6454:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":493,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6458:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6438:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6438:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":495,"nodeType":"ExpressionStatement","src":"6438:28:4"},{"expression":{"arguments":[{"arguments":[{"id":498,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":481,"src":"6507:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":499,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"6513:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":500,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":485,"src":"6517:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":501,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"6526:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":497,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"6484:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6484:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6533:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":496,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6476:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6476:110:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"ExpressionStatement","src":"6476:110:4"}]},"documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"5471:850:4","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"6335:13:4","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":481,"mutability":"mutable","name":"from","nameLocation":"6357:4:4","nodeType":"VariableDeclaration","scope":507,"src":"6349:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":480,"name":"address","nodeType":"ElementaryTypeName","src":"6349:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":483,"mutability":"mutable","name":"to","nameLocation":"6371:2:4","nodeType":"VariableDeclaration","scope":507,"src":"6363:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"6363:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":485,"mutability":"mutable","name":"tokenId","nameLocation":"6383:7:4","nodeType":"VariableDeclaration","scope":507,"src":"6375:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":484,"name":"uint256","nodeType":"ElementaryTypeName","src":"6375:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"data","nameLocation":"6405:4:4","nodeType":"VariableDeclaration","scope":507,"src":"6392:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":486,"name":"bytes","nodeType":"ElementaryTypeName","src":"6392:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6348:62:4"},"returnParameters":{"id":489,"nodeType":"ParameterList","parameters":[],"src":"6428:0:4"},"scope":1019,"src":"6326:267:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"6777:40:4","statements":[{"expression":{"baseExpression":{"id":515,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"6794:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":517,"indexExpression":{"id":516,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"6802:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6794:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":514,"id":518,"nodeType":"Return","src":"6787:23:4"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"6599:98:4","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"6711:8:4","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"tokenId","nameLocation":"6728:7:4","nodeType":"VariableDeclaration","scope":520,"src":"6720:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":509,"name":"uint256","nodeType":"ElementaryTypeName","src":"6720:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6719:17:4"},"returnParameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"6768:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"6768:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6767:9:4"},"scope":1019,"src":"6702:115:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":537,"nodeType":"Block","src":"7191:55:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":529,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"7217:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":528,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":520,"src":"7208:8:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7208:17:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7237:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":531,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:4","typeDescriptions":{}}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7229:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7208:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":527,"id":536,"nodeType":"Return","src":"7201:38:4"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"6823:292:4","text":" @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."},"id":538,"implemented":true,"kind":"function","modifiers":[],"name":"_exists","nameLocation":"7129:7:4","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"tokenId","nameLocation":"7145:7:4","nodeType":"VariableDeclaration","scope":538,"src":"7137:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"7137:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7136:17:4"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":538,"src":"7185:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":525,"name":"bool","nodeType":"ElementaryTypeName","src":"7185:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7184:6:4"},"scope":1019,"src":"7120:126:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":571,"nodeType":"Block","src":"7503:162:4","statements":[{"assignments":[549],"declarations":[{"constant":false,"id":549,"mutability":"mutable","name":"owner","nameLocation":"7521:5:4","nodeType":"VariableDeclaration","scope":571,"src":"7513:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"7513:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":554,"initialValue":{"arguments":[{"id":552,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"7544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":550,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"7529:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7536:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"7529:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7529:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7513:39:4"},{"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":555,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"7570:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":556,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7581:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7570:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":559,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":549,"src":"7607:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":560,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"7614:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":558,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"7590:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7590:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:52:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":564,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"7638:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":563,"name":"getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":367,"src":"7626:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7626:20:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":566,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"7650:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7626:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"7570:87:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":569,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7569:89:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":547,"id":570,"nodeType":"Return","src":"7562:96:4"}]},"documentation":{"id":539,"nodeType":"StructuredDocumentation","src":"7252:147:4","text":" @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."},"id":572,"implemented":true,"kind":"function","modifiers":[],"name":"_isApprovedOrOwner","nameLocation":"7413:18:4","nodeType":"FunctionDefinition","parameters":{"id":544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":541,"mutability":"mutable","name":"spender","nameLocation":"7440:7:4","nodeType":"VariableDeclaration","scope":572,"src":"7432:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":540,"name":"address","nodeType":"ElementaryTypeName","src":"7432:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":543,"mutability":"mutable","name":"tokenId","nameLocation":"7457:7:4","nodeType":"VariableDeclaration","scope":572,"src":"7449:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"7449:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7431:34:4"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":572,"src":"7497:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":545,"name":"bool","nodeType":"ElementaryTypeName","src":"7497:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7496:6:4"},"scope":1019,"src":"7404:261:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":586,"nodeType":"Block","src":"8060:43:4","statements":[{"expression":{"arguments":[{"id":581,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"8080:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":582,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":577,"src":"8084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8093:2:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":580,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[587,616],"referencedDeclaration":616,"src":"8070:9:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8070:26:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"ExpressionStatement","src":"8070:26:4"}]},"documentation":{"id":573,"nodeType":"StructuredDocumentation","src":"7671:319:4","text":" @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":587,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8004:9:4","nodeType":"FunctionDefinition","parameters":{"id":578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":575,"mutability":"mutable","name":"to","nameLocation":"8022:2:4","nodeType":"VariableDeclaration","scope":587,"src":"8014:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":574,"name":"address","nodeType":"ElementaryTypeName","src":"8014:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":577,"mutability":"mutable","name":"tokenId","nameLocation":"8034:7:4","nodeType":"VariableDeclaration","scope":587,"src":"8026:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":576,"name":"uint256","nodeType":"ElementaryTypeName","src":"8026:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8013:29:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[],"src":"8060:0:4"},"scope":1019,"src":"7995:108:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":615,"nodeType":"Block","src":"8408:195:4","statements":[{"expression":{"arguments":[{"id":598,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"8424:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":599,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"8428:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":597,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"8418:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8418:18:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":601,"nodeType":"ExpressionStatement","src":"8418:18:4"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8498:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8490:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"8490:7:4","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8490:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"8502:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":609,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"8506:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":610,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"8515:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":603,"name":"_checkOnERC721Received","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":977,"src":"8467:22:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (address,address,uint256,bytes memory) returns (bool)"}},"id":611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8467:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8534:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":602,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8446:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8446:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":614,"nodeType":"ExpressionStatement","src":"8446:150:4"}]},"documentation":{"id":588,"nodeType":"StructuredDocumentation","src":"8109:210:4","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":616,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"8333:9:4","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"to","nameLocation":"8351:2:4","nodeType":"VariableDeclaration","scope":616,"src":"8343:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":589,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"tokenId","nameLocation":"8363:7:4","nodeType":"VariableDeclaration","scope":616,"src":"8355:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"8355:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"data","nameLocation":"8385:4:4","nodeType":"VariableDeclaration","scope":616,"src":"8372:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":593,"name":"bytes","nodeType":"ElementaryTypeName","src":"8372:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8342:48:4"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"8408:0:4"},"scope":1019,"src":"8324:279:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":692,"nodeType":"Block","src":"8986:859:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":625,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9004:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9018:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9010:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":626,"name":"address","nodeType":"ElementaryTypeName","src":"9010:7:4","typeDescriptions":{}}},"id":629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9010:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9004:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9022:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""},"value":"ERC721: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","typeString":"literal_string \"ERC721: mint to the zero address\""}],"id":624,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8996:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8996:61:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":633,"nodeType":"ExpressionStatement","src":"8996:61:4"},{"expression":{"arguments":[{"id":638,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9075:17:4","subExpression":{"arguments":[{"id":636,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9084:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":635,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9076:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9076:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9094:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":634,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9067:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9067:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":641,"nodeType":"ExpressionStatement","src":"9067:58:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9157:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":643,"name":"address","nodeType":"ElementaryTypeName","src":"9157:7:4","typeDescriptions":{}}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9157:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":647,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9169:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":648,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9173:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9182:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":642,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"9136:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9136:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":651,"nodeType":"ExpressionStatement","src":"9136:48:4"},{"expression":{"arguments":[{"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9279:17:4","subExpression":{"arguments":[{"id":654,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9288:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":653,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9280:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9280:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9298:30:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""},"value":"ERC721: token already minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","typeString":"literal_string \"ERC721: token already minted\""}],"id":652,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9271:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9271:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":659,"nodeType":"ExpressionStatement","src":"9271:58:4"},{"id":666,"nodeType":"UncheckedBlock","src":"9340:360:4","statements":[{"expression":{"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":660,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"9671:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":662,"indexExpression":{"id":661,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9681:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9671:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9688:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9671:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":665,"nodeType":"ExpressionStatement","src":"9671:18:4"}]},{"expression":{"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":667,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"9710:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":669,"indexExpression":{"id":668,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9718:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9710:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":670,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9729:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9710:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":672,"nodeType":"ExpressionStatement","src":"9710:21:4"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9764:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9756:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":674,"name":"address","nodeType":"ElementaryTypeName","src":"9756:7:4","typeDescriptions":{}}},"id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9756:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":678,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9768:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":679,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9772:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":673,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"9747:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9747:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":681,"nodeType":"EmitStatement","src":"9742:38:4"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9819:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9811:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":683,"name":"address","nodeType":"ElementaryTypeName","src":"9811:7:4","typeDescriptions":{}}},"id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9811:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":619,"src":"9823:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":621,"src":"9827:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9836:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":682,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"9791:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9791:47:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"9791:47:4"}]},"documentation":{"id":617,"nodeType":"StructuredDocumentation","src":"8609:311:4","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":693,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8934:5:4","nodeType":"FunctionDefinition","parameters":{"id":622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":619,"mutability":"mutable","name":"to","nameLocation":"8948:2:4","nodeType":"VariableDeclaration","scope":693,"src":"8940:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":618,"name":"address","nodeType":"ElementaryTypeName","src":"8940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":621,"mutability":"mutable","name":"tokenId","nameLocation":"8960:7:4","nodeType":"VariableDeclaration","scope":693,"src":"8952:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":620,"name":"uint256","nodeType":"ElementaryTypeName","src":"8952:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8939:29:4"},"returnParameters":{"id":623,"nodeType":"ParameterList","parameters":[],"src":"8986:0:4"},"scope":1019,"src":"8925:920:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":759,"nodeType":"Block","src":"10220:713:4","statements":[{"assignments":[700],"declarations":[{"constant":false,"id":700,"mutability":"mutable","name":"owner","nameLocation":"10238:5:4","nodeType":"VariableDeclaration","scope":759,"src":"10230:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":699,"name":"address","nodeType":"ElementaryTypeName","src":"10230:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":705,"initialValue":{"arguments":[{"id":703,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10261:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":701,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10246:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10253:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"10246:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10246:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10230:39:4"},{"expression":{"arguments":[{"id":707,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"10301:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10316:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10308:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":708,"name":"address","nodeType":"ElementaryTypeName","src":"10308:7:4","typeDescriptions":{}}},"id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10308:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":712,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10320:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10329:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":706,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"10280:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10280:51:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":715,"nodeType":"ExpressionStatement","src":"10280:51:4"},{"expression":{"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":716,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"10433:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":719,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10456:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":717,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"10441:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10448:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"10441:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10441:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10433:31:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":722,"nodeType":"ExpressionStatement","src":"10433:31:4"},{"expression":{"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10502:31:4","subExpression":{"baseExpression":{"id":723,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"10509:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":725,"indexExpression":{"id":724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10525:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10509:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"10502:31:4"},{"id":734,"nodeType":"UncheckedBlock","src":"10544:237:4","statements":[{"expression":{"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":728,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"10749:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":730,"indexExpression":{"id":729,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"10759:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10749:16:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":731,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10769:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10749:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":733,"nodeType":"ExpressionStatement","src":"10749:21:4"}]},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"10790:23:4","subExpression":{"baseExpression":{"id":735,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"10797:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":737,"indexExpression":{"id":736,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10805:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10797:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":739,"nodeType":"ExpressionStatement","src":"10790:23:4"},{"eventCall":{"arguments":[{"id":741,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"10838:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10853:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10845:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"10845:7:4","typeDescriptions":{}}},"id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10845:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":746,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10857:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"10829:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10829:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":748,"nodeType":"EmitStatement","src":"10824:41:4"},{"expression":{"arguments":[{"id":750,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":700,"src":"10896:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10911:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":752,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10903:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":751,"name":"address","nodeType":"ElementaryTypeName","src":"10903:7:4","typeDescriptions":{}}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10903:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":755,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"10915:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10924:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":749,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"10876:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10876:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"10876:50:4"}]},"documentation":{"id":694,"nodeType":"StructuredDocumentation","src":"9851:315:4","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":760,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"10180:5:4","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":696,"mutability":"mutable","name":"tokenId","nameLocation":"10194:7:4","nodeType":"VariableDeclaration","scope":760,"src":"10186:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":695,"name":"uint256","nodeType":"ElementaryTypeName","src":"10186:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10185:17:4"},"returnParameters":{"id":698,"nodeType":"ParameterList","parameters":[],"src":"10220:0:4"},"scope":1019,"src":"10171:762:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"11336:1124:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":773,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"11369:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":771,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11354:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11361:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"11354:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11354:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":775,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"11381:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11354:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11387:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":770,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11346:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11346:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":779,"nodeType":"ExpressionStatement","src":"11346:81:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":781,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"11445:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11459:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":783,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11451:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":782,"name":"address","nodeType":"ElementaryTypeName","src":"11451:7:4","typeDescriptions":{}}},"id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11451:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11445:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373","id":787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11463:38:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""},"value":"ERC721: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","typeString":"literal_string \"ERC721: transfer to the zero address\""}],"id":780,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11437:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11437:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":789,"nodeType":"ExpressionStatement","src":"11437:65:4"},{"expression":{"arguments":[{"id":791,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"11534:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"11540:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":793,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"11544:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11553:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":790,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"11513:20:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11513:42:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":796,"nodeType":"ExpressionStatement","src":"11513:42:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":800,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"11670:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":798,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"11655:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11662:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"11655:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11655:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":802,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"11682:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11655:31:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572","id":804,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11688:39:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""},"value":"ERC721: transfer from incorrect owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","typeString":"literal_string \"ERC721: transfer from incorrect owner\""}],"id":797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11647:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11647:81:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"11647:81:4"},{"expression":{"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"11790:31:4","subExpression":{"baseExpression":{"id":807,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"11797:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":809,"indexExpression":{"id":808,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"11813:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11797:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":811,"nodeType":"ExpressionStatement","src":"11790:31:4"},{"id":824,"nodeType":"UncheckedBlock","src":"11832:496:4","statements":[{"expression":{"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":812,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"12265:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":814,"indexExpression":{"id":813,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"12275:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12265:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":815,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12284:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12265:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":817,"nodeType":"ExpressionStatement","src":"12265:20:4"},{"expression":{"id":822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":818,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"12299:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":820,"indexExpression":{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"12309:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12299:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12299:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":823,"nodeType":"ExpressionStatement","src":"12299:18:4"}]},{"expression":{"id":829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":825,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"12337:7:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":827,"indexExpression":{"id":826,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"12345:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12337:16:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":828,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"12356:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12337:21:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":830,"nodeType":"ExpressionStatement","src":"12337:21:4"},{"eventCall":{"arguments":[{"id":832,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"12383:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":833,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"12389:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":834,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"12393:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":831,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"12374:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12374:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":836,"nodeType":"EmitStatement","src":"12369:32:4"},{"expression":{"arguments":[{"id":838,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"12432:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"12438:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":840,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"12442:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":837,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1003,"src":"12412:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12412:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":843,"nodeType":"ExpressionStatement","src":"12412:41:4"}]},"documentation":{"id":761,"nodeType":"StructuredDocumentation","src":"10939:313:4","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"11266:9:4","nodeType":"FunctionDefinition","parameters":{"id":768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"from","nameLocation":"11284:4:4","nodeType":"VariableDeclaration","scope":845,"src":"11276:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":762,"name":"address","nodeType":"ElementaryTypeName","src":"11276:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":765,"mutability":"mutable","name":"to","nameLocation":"11298:2:4","nodeType":"VariableDeclaration","scope":845,"src":"11290:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"11290:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":767,"mutability":"mutable","name":"tokenId","nameLocation":"11310:7:4","nodeType":"VariableDeclaration","scope":845,"src":"11302:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":766,"name":"uint256","nodeType":"ElementaryTypeName","src":"11302:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11275:43:4"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[],"src":"11336:0:4"},"scope":1019,"src":"11257:1203:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":868,"nodeType":"Block","src":"12636:107:4","statements":[{"expression":{"id":857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":853,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":132,"src":"12646:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":855,"indexExpression":{"id":854,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12662:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12646:24:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":856,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"12673:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12646:29:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":858,"nodeType":"ExpressionStatement","src":"12646:29:4"},{"eventCall":{"arguments":[{"arguments":[{"id":862,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12714:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":860,"name":"ERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"12699:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721_$1019_$","typeString":"type(contract ERC721)"}},"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12706:7:4","memberName":"ownerOf","nodeType":"MemberAccess","referencedDeclaration":238,"src":"12699:14:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12699:23:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":864,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"12724:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":865,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":850,"src":"12728:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":859,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1043,"src":"12690:8:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12690:46:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":867,"nodeType":"EmitStatement","src":"12685:51:4"}]},"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"12466:101:4","text":" @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."},"id":869,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"12581:8:4","nodeType":"FunctionDefinition","parameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"to","nameLocation":"12598:2:4","nodeType":"VariableDeclaration","scope":869,"src":"12590:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":847,"name":"address","nodeType":"ElementaryTypeName","src":"12590:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"tokenId","nameLocation":"12610:7:4","nodeType":"VariableDeclaration","scope":869,"src":"12602:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":849,"name":"uint256","nodeType":"ElementaryTypeName","src":"12602:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12589:29:4"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[],"src":"12636:0:4"},"scope":1019,"src":"12572:171:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":900,"nodeType":"Block","src":"12972:184:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":880,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"12990:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":881,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"12999:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12990:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13009:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""},"value":"ERC721: approve to caller"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","typeString":"literal_string \"ERC721: approve to caller\""}],"id":879,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12982:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12982:55:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":885,"nodeType":"ExpressionStatement","src":"12982:55:4"},{"expression":{"id":892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":886,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"13047:18:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":889,"indexExpression":{"id":887,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"13066:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13047:25:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":890,"indexExpression":{"id":888,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"13073:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13047:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":891,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"13085:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13047:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":893,"nodeType":"ExpressionStatement","src":"13047:46:4"},{"eventCall":{"arguments":[{"id":895,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"13123:5:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":896,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"13130:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":897,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"13140:8:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":894,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"13108:14:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13108:41:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":899,"nodeType":"EmitStatement","src":"13103:46:4"}]},"documentation":{"id":870,"nodeType":"StructuredDocumentation","src":"12749:125:4","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."},"id":901,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"12888:18:4","nodeType":"FunctionDefinition","parameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"owner","nameLocation":"12915:5:4","nodeType":"VariableDeclaration","scope":901,"src":"12907:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":871,"name":"address","nodeType":"ElementaryTypeName","src":"12907:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"operator","nameLocation":"12930:8:4","nodeType":"VariableDeclaration","scope":901,"src":"12922:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":873,"name":"address","nodeType":"ElementaryTypeName","src":"12922:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":876,"mutability":"mutable","name":"approved","nameLocation":"12945:8:4","nodeType":"VariableDeclaration","scope":901,"src":"12940:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":875,"name":"bool","nodeType":"ElementaryTypeName","src":"12940:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12906:48:4"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"12972:0:4"},"scope":1019,"src":"12879:277:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":914,"nodeType":"Block","src":"13303:70:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":909,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"13329:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":908,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"13321:7:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13321:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13339:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""},"value":"ERC721: invalid token ID"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","typeString":"literal_string \"ERC721: invalid token ID\""}],"id":907,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13313:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13313:53:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"13313:53:4"}]},"documentation":{"id":902,"nodeType":"StructuredDocumentation","src":"13162:73:4","text":" @dev Reverts if the `tokenId` has not been minted yet."},"id":915,"implemented":true,"kind":"function","modifiers":[],"name":"_requireMinted","nameLocation":"13249:14:4","nodeType":"FunctionDefinition","parameters":{"id":905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":904,"mutability":"mutable","name":"tokenId","nameLocation":"13272:7:4","nodeType":"VariableDeclaration","scope":915,"src":"13264:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"13264:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13263:17:4"},"returnParameters":{"id":906,"nodeType":"ParameterList","parameters":[],"src":"13303:0:4"},"scope":1019,"src":"13240:133:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"14080:676:4","statements":[{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":929,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"14094:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14097:10:4","memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1354,"src":"14094:13:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$","typeString":"function (address) view returns (bool)"}},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14094:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":974,"nodeType":"Block","src":"14714:36:4","statements":[{"expression":{"hexValue":"74727565","id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14735:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":928,"id":973,"nodeType":"Return","src":"14728:11:4"}]},"id":975,"nodeType":"IfStatement","src":"14090:660:4","trueBody":{"id":971,"nodeType":"Block","src":"14111:597:4","statements":[{"clauses":[{"block":{"id":951,"nodeType":"Block","src":"14225:91:4","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":945,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"14250:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"expression":{"id":946,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"14260:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1153_$","typeString":"type(contract IERC721Receiver)"}},"id":947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14276:16:4","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"14260:32:4","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14293:8:4","memberName":"selector","nodeType":"MemberAccess","src":"14260:41:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"14250:51:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":928,"id":950,"nodeType":"Return","src":"14243:58:4"}]},"errorName":"","id":952,"nodeType":"TryCatchClause","parameters":{"id":944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":943,"mutability":"mutable","name":"retval","nameLocation":"14217:6:4","nodeType":"VariableDeclaration","scope":952,"src":"14210:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":942,"name":"bytes4","nodeType":"ElementaryTypeName","src":"14210:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"14209:15:4"},"src":"14201:115:4"},{"block":{"id":968,"nodeType":"Block","src":"14345:353:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":956,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"14367:6:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14374:6:4","memberName":"length","nodeType":"MemberAccess","src":"14367:13:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14384:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14367:18:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":966,"nodeType":"Block","src":"14494:190:4","statements":[{"AST":{"nodeType":"YulBlock","src":"14580:86:4","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14617:2:4","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"14621:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14613:3:4"},"nodeType":"YulFunctionCall","src":"14613:15:4"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"14636:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14630:5:4"},"nodeType":"YulFunctionCall","src":"14630:13:4"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14606:6:4"},"nodeType":"YulFunctionCall","src":"14606:38:4"},"nodeType":"YulExpressionStatement","src":"14606:38:4"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":954,"isOffset":false,"isSlot":false,"src":"14621:6:4","valueSize":1},{"declaration":954,"isOffset":false,"isSlot":false,"src":"14636:6:4","valueSize":1}],"id":965,"nodeType":"InlineAssembly","src":"14571:95:4"}]},"id":967,"nodeType":"IfStatement","src":"14363:321:4","trueBody":{"id":964,"nodeType":"Block","src":"14387:101:4","statements":[{"expression":{"arguments":[{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572","id":961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14416:52:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""},"value":"ERC721: transfer to non ERC721Receiver implementer"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","typeString":"literal_string \"ERC721: transfer to non ERC721Receiver implementer\""}],"id":960,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"14409:6:4","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14409:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":963,"nodeType":"ExpressionStatement","src":"14409:60:4"}]}}]},"errorName":"","id":969,"nodeType":"TryCatchClause","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"reason","nameLocation":"14337:6:4","nodeType":"VariableDeclaration","scope":969,"src":"14324:19:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":953,"name":"bytes","nodeType":"ElementaryTypeName","src":"14324:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"14323:21:4"},"src":"14317:381:4"}],"externalCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":936,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"14166:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14166:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":938,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":918,"src":"14180:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":939,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":922,"src":"14186:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":940,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":924,"src":"14195:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":933,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"14145:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":932,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"14129:15:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$1153_$","typeString":"type(contract IERC721Receiver)"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:19:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$1153","typeString":"contract IERC721Receiver"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14149:16:4","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":1152,"src":"14129:36:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14129:71:4","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":970,"nodeType":"TryStatement","src":"14125:573:4"}]}}]},"documentation":{"id":916,"nodeType":"StructuredDocumentation","src":"13379:541:4","text":" @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOnERC721Received","nameLocation":"13934:22:4","nodeType":"FunctionDefinition","parameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":918,"mutability":"mutable","name":"from","nameLocation":"13974:4:4","nodeType":"VariableDeclaration","scope":977,"src":"13966:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"13966:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":920,"mutability":"mutable","name":"to","nameLocation":"13996:2:4","nodeType":"VariableDeclaration","scope":977,"src":"13988:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"13988:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":922,"mutability":"mutable","name":"tokenId","nameLocation":"14016:7:4","nodeType":"VariableDeclaration","scope":977,"src":"14008:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":921,"name":"uint256","nodeType":"ElementaryTypeName","src":"14008:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"data","nameLocation":"14046:4:4","nodeType":"VariableDeclaration","scope":977,"src":"14033:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":923,"name":"bytes","nodeType":"ElementaryTypeName","src":"14033:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13956:100:4"},"returnParameters":{"id":928,"nodeType":"ParameterList","parameters":[{"constant":false,"id":927,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":977,"src":"14074:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":926,"name":"bool","nodeType":"ElementaryTypeName","src":"14074:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14073:6:4"},"scope":1019,"src":"13925:831:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":989,"nodeType":"Block","src":"15586:2:4","statements":[]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"14762:705:4","text":" @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"15481:20:4","nodeType":"FunctionDefinition","parameters":{"id":987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"from","nameLocation":"15510:4:4","nodeType":"VariableDeclaration","scope":990,"src":"15502:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"15502:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"to","nameLocation":"15524:2:4","nodeType":"VariableDeclaration","scope":990,"src":"15516:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"15516:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"firstTokenId","nameLocation":"15536:12:4","nodeType":"VariableDeclaration","scope":990,"src":"15528:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"15528:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"batchSize","nameLocation":"15558:9:4","nodeType":"VariableDeclaration","scope":990,"src":"15550:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":985,"name":"uint256","nodeType":"ElementaryTypeName","src":"15550:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15501:67:4"},"returnParameters":{"id":988,"nodeType":"ParameterList","parameters":[],"src":"15586:0:4"},"scope":1019,"src":"15472:116:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1002,"nodeType":"Block","src":"16407:2:4","statements":[]},"documentation":{"id":991,"nodeType":"StructuredDocumentation","src":"15594:695:4","text":" @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1003,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"16303:19:4","nodeType":"FunctionDefinition","parameters":{"id":1000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"from","nameLocation":"16331:4:4","nodeType":"VariableDeclaration","scope":1003,"src":"16323:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":992,"name":"address","nodeType":"ElementaryTypeName","src":"16323:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":995,"mutability":"mutable","name":"to","nameLocation":"16345:2:4","nodeType":"VariableDeclaration","scope":1003,"src":"16337:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":994,"name":"address","nodeType":"ElementaryTypeName","src":"16337:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":997,"mutability":"mutable","name":"firstTokenId","nameLocation":"16357:12:4","nodeType":"VariableDeclaration","scope":1003,"src":"16349:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":996,"name":"uint256","nodeType":"ElementaryTypeName","src":"16349:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":999,"mutability":"mutable","name":"batchSize","nameLocation":"16379:9:4","nodeType":"VariableDeclaration","scope":1003,"src":"16371:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":998,"name":"uint256","nodeType":"ElementaryTypeName","src":"16371:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16322:67:4"},"returnParameters":{"id":1001,"nodeType":"ParameterList","parameters":[],"src":"16407:0:4"},"scope":1019,"src":"16294:115:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1017,"nodeType":"Block","src":"16958:45:4","statements":[{"expression":{"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1011,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":128,"src":"16968:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1013,"indexExpression":{"id":1012,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"16978:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16968:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1008,"src":"16990:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"16968:28:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1016,"nodeType":"ExpressionStatement","src":"16968:28:4"}]},"documentation":{"id":1004,"nodeType":"StructuredDocumentation","src":"16415:409:4","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."},"id":1018,"implemented":true,"kind":"function","modifiers":[],"name":"__unsafe_increaseBalance","nameLocation":"16891:24:4","nodeType":"FunctionDefinition","parameters":{"id":1009,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1006,"mutability":"mutable","name":"account","nameLocation":"16924:7:4","nodeType":"VariableDeclaration","scope":1018,"src":"16916:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"16916:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1008,"mutability":"mutable","name":"amount","nameLocation":"16941:6:4","nodeType":"VariableDeclaration","scope":1018,"src":"16933:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1007,"name":"uint256","nodeType":"ElementaryTypeName","src":"16933:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16915:33:4"},"returnParameters":{"id":1010,"nodeType":"ParameterList","parameters":[],"src":"16958:0:4"},"scope":1019,"src":"16882:121:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1020,"src":"628:16377:4","usedErrors":[]}],"src":"107:16899:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[2027],"IERC721":[1135]},"id":1136,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1021,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:5"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1022,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":2028,"src":"133:47:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1024,"name":"IERC165","nameLocations":["271:7:5"],"nodeType":"IdentifierPath","referencedDeclaration":2027,"src":"271:7:5"},"id":1025,"nodeType":"InheritanceSpecifier","src":"271:7:5"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"182:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":1135,"linearizedBaseContracts":[1135,2027],"name":"IERC721","nameLocation":"260:7:5","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1026,"nodeType":"StructuredDocumentation","src":"285:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1034,"name":"Transfer","nameLocation":"384:8:5","nodeType":"EventDefinition","parameters":{"id":1033,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1028,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"409:4:5","nodeType":"VariableDeclaration","scope":1034,"src":"393:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1027,"name":"address","nodeType":"ElementaryTypeName","src":"393:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1030,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"431:2:5","nodeType":"VariableDeclaration","scope":1034,"src":"415:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"415:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1032,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"451:7:5","nodeType":"VariableDeclaration","scope":1034,"src":"435:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1031,"name":"uint256","nodeType":"ElementaryTypeName","src":"435:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"392:67:5"},"src":"378:82:5"},{"anonymous":false,"documentation":{"id":1035,"nodeType":"StructuredDocumentation","src":"466:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1043,"name":"Approval","nameLocation":"571:8:5","nodeType":"EventDefinition","parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1037,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"596:5:5","nodeType":"VariableDeclaration","scope":1043,"src":"580:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"619:8:5","nodeType":"VariableDeclaration","scope":1043,"src":"603:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"603:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"645:7:5","nodeType":"VariableDeclaration","scope":1043,"src":"629:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"629:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"579:74:5"},"src":"565:89:5"},{"anonymous":false,"documentation":{"id":1044,"nodeType":"StructuredDocumentation","src":"660:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1052,"name":"ApprovalForAll","nameLocation":"788:14:5","nodeType":"EventDefinition","parameters":{"id":1051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1046,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"819:5:5","nodeType":"VariableDeclaration","scope":1052,"src":"803:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1045,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1048,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"842:8:5","nodeType":"VariableDeclaration","scope":1052,"src":"826:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1047,"name":"address","nodeType":"ElementaryTypeName","src":"826:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1050,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"857:8:5","nodeType":"VariableDeclaration","scope":1052,"src":"852:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1049,"name":"bool","nodeType":"ElementaryTypeName","src":"852:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"802:64:5"},"src":"782:85:5"},{"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"873:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":1060,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"963:9:5","nodeType":"FunctionDefinition","parameters":{"id":1056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"owner","nameLocation":"981:5:5","nodeType":"VariableDeclaration","scope":1060,"src":"973:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:15:5"},"returnParameters":{"id":1059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"balance","nameLocation":"1019:7:5","nodeType":"VariableDeclaration","scope":1060,"src":"1011:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1057,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1010:17:5"},"scope":1135,"src":"954:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1061,"nodeType":"StructuredDocumentation","src":"1034:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":1068,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1179:7:5","nodeType":"FunctionDefinition","parameters":{"id":1064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1063,"mutability":"mutable","name":"tokenId","nameLocation":"1195:7:5","nodeType":"VariableDeclaration","scope":1068,"src":"1187:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1187:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1186:17:5"},"returnParameters":{"id":1067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1066,"mutability":"mutable","name":"owner","nameLocation":"1235:5:5","nodeType":"VariableDeclaration","scope":1068,"src":"1227:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1065,"name":"address","nodeType":"ElementaryTypeName","src":"1227:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1226:15:5"},"scope":1135,"src":"1170:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1069,"nodeType":"StructuredDocumentation","src":"1248:556:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":1080,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1818:16:5","nodeType":"FunctionDefinition","parameters":{"id":1078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1071,"mutability":"mutable","name":"from","nameLocation":"1843:4:5","nodeType":"VariableDeclaration","scope":1080,"src":"1835:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1070,"name":"address","nodeType":"ElementaryTypeName","src":"1835:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1073,"mutability":"mutable","name":"to","nameLocation":"1857:2:5","nodeType":"VariableDeclaration","scope":1080,"src":"1849:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"1849:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1075,"mutability":"mutable","name":"tokenId","nameLocation":"1869:7:5","nodeType":"VariableDeclaration","scope":1080,"src":"1861:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1074,"name":"uint256","nodeType":"ElementaryTypeName","src":"1861:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1077,"mutability":"mutable","name":"data","nameLocation":"1893:4:5","nodeType":"VariableDeclaration","scope":1080,"src":"1878:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1076,"name":"bytes","nodeType":"ElementaryTypeName","src":"1878:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1834:64:5"},"returnParameters":{"id":1079,"nodeType":"ParameterList","parameters":[],"src":"1907:0:5"},"scope":1135,"src":"1809:99:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1081,"nodeType":"StructuredDocumentation","src":"1914:687:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":1090,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2615:16:5","nodeType":"FunctionDefinition","parameters":{"id":1088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1083,"mutability":"mutable","name":"from","nameLocation":"2640:4:5","nodeType":"VariableDeclaration","scope":1090,"src":"2632:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1082,"name":"address","nodeType":"ElementaryTypeName","src":"2632:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1085,"mutability":"mutable","name":"to","nameLocation":"2654:2:5","nodeType":"VariableDeclaration","scope":1090,"src":"2646:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1084,"name":"address","nodeType":"ElementaryTypeName","src":"2646:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"tokenId","nameLocation":"2666:7:5","nodeType":"VariableDeclaration","scope":1090,"src":"2658:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1086,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2631:43:5"},"returnParameters":{"id":1089,"nodeType":"ParameterList","parameters":[],"src":"2683:0:5"},"scope":1135,"src":"2606:78:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"2690:732:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1100,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3436:12:5","nodeType":"FunctionDefinition","parameters":{"id":1098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1093,"mutability":"mutable","name":"from","nameLocation":"3457:4:5","nodeType":"VariableDeclaration","scope":1100,"src":"3449:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"3449:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"to","nameLocation":"3471:2:5","nodeType":"VariableDeclaration","scope":1100,"src":"3463:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"3463:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"tokenId","nameLocation":"3483:7:5","nodeType":"VariableDeclaration","scope":1100,"src":"3475:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1096,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3448:43:5"},"returnParameters":{"id":1099,"nodeType":"ParameterList","parameters":[],"src":"3500:0:5"},"scope":1135,"src":"3427:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"3507:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1108,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3973:7:5","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"mutability":"mutable","name":"to","nameLocation":"3989:2:5","nodeType":"VariableDeclaration","scope":1108,"src":"3981:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"3981:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"tokenId","nameLocation":"4001:7:5","nodeType":"VariableDeclaration","scope":1108,"src":"3993:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"3993:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3980:29:5"},"returnParameters":{"id":1107,"nodeType":"ParameterList","parameters":[],"src":"4018:0:5"},"scope":1135,"src":"3964:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1109,"nodeType":"StructuredDocumentation","src":"4025:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":1116,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4348:17:5","nodeType":"FunctionDefinition","parameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1111,"mutability":"mutable","name":"operator","nameLocation":"4374:8:5","nodeType":"VariableDeclaration","scope":1116,"src":"4366:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1110,"name":"address","nodeType":"ElementaryTypeName","src":"4366:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1113,"mutability":"mutable","name":"approved","nameLocation":"4389:8:5","nodeType":"VariableDeclaration","scope":1116,"src":"4384:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1112,"name":"bool","nodeType":"ElementaryTypeName","src":"4384:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4365:33:5"},"returnParameters":{"id":1115,"nodeType":"ParameterList","parameters":[],"src":"4407:0:5"},"scope":1135,"src":"4339:69:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1117,"nodeType":"StructuredDocumentation","src":"4414:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":1124,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4567:11:5","nodeType":"FunctionDefinition","parameters":{"id":1120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1119,"mutability":"mutable","name":"tokenId","nameLocation":"4587:7:5","nodeType":"VariableDeclaration","scope":1124,"src":"4579:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4579:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4578:17:5"},"returnParameters":{"id":1123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"operator","nameLocation":"4627:8:5","nodeType":"VariableDeclaration","scope":1124,"src":"4619:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"4619:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4618:18:5"},"scope":1135,"src":"4558:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1125,"nodeType":"StructuredDocumentation","src":"4643:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":1134,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4795:16:5","nodeType":"FunctionDefinition","parameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1127,"mutability":"mutable","name":"owner","nameLocation":"4820:5:5","nodeType":"VariableDeclaration","scope":1134,"src":"4812:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"operator","nameLocation":"4835:8:5","nodeType":"VariableDeclaration","scope":1134,"src":"4827:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1128,"name":"address","nodeType":"ElementaryTypeName","src":"4827:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4811:33:5"},"returnParameters":{"id":1133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1134,"src":"4868:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1131,"name":"bool","nodeType":"ElementaryTypeName","src":"4868:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4867:6:5"},"scope":1135,"src":"4786:88:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1136,"src":"250:4626:5","usedErrors":[]}],"src":"108:4769:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[1153]},"id":1154,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1137,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"116:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1138,"nodeType":"StructuredDocumentation","src":"141:152:6","text":" @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."},"fullyImplemented":false,"id":1153,"linearizedBaseContracts":[1153],"name":"IERC721Receiver","nameLocation":"304:15:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1139,"nodeType":"StructuredDocumentation","src":"326:493:6","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":1152,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"833:16:6","nodeType":"FunctionDefinition","parameters":{"id":1148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"operator","nameLocation":"867:8:6","nodeType":"VariableDeclaration","scope":1152,"src":"859:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"859:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"from","nameLocation":"893:4:6","nodeType":"VariableDeclaration","scope":1152,"src":"885:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1142,"name":"address","nodeType":"ElementaryTypeName","src":"885:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1145,"mutability":"mutable","name":"tokenId","nameLocation":"915:7:6","nodeType":"VariableDeclaration","scope":1152,"src":"907:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1144,"name":"uint256","nodeType":"ElementaryTypeName","src":"907:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1147,"mutability":"mutable","name":"data","nameLocation":"947:4:6","nodeType":"VariableDeclaration","scope":1152,"src":"932:19:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1146,"name":"bytes","nodeType":"ElementaryTypeName","src":"932:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"849:108:6"},"returnParameters":{"id":1151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1152,"src":"976:6:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1149,"name":"bytes4","nodeType":"ElementaryTypeName","src":"976:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"975:8:6"},"scope":1153,"src":"824:160:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1154,"src":"294:692:6","usedErrors":[]}],"src":"116:871:6"},"id":6},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","exportedSymbols":{"Address":[1666],"Context":[1688],"ERC165":[2015],"ERC721":[1019],"ERC721URIStorage":[1309],"IERC165":[2027],"IERC4906":[24],"IERC721":[1135],"IERC721Metadata":[1336],"IERC721Receiver":[1153],"Math":[2893],"SignedMath":[2998],"Strings":[1991]},"id":1310,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1155,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"../ERC721.sol","id":1156,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":1020,"src":"153:23:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC4906.sol","file":"../../../interfaces/IERC4906.sol","id":1157,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1310,"sourceUnit":25,"src":"177:42:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1159,"name":"IERC4906","nameLocations":["329:8:7"],"nodeType":"IdentifierPath","referencedDeclaration":24,"src":"329:8:7"},"id":1160,"nodeType":"InheritanceSpecifier","src":"329:8:7"},{"baseName":{"id":1161,"name":"ERC721","nameLocations":["339:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"339:6:7"},"id":1162,"nodeType":"InheritanceSpecifier","src":"339:6:7"}],"canonicalName":"ERC721URIStorage","contractDependencies":[],"contractKind":"contract","documentation":{"id":1158,"nodeType":"StructuredDocumentation","src":"221:69:7","text":" @dev ERC721 token with storage based token URI management."},"fullyImplemented":true,"id":1309,"linearizedBaseContracts":[1309,1019,1336,24,1135,2015,2027,1688],"name":"ERC721URIStorage","nameLocation":"309:16:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1165,"libraryName":{"id":1163,"name":"Strings","nameLocations":["358:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":1991,"src":"358:7:7"},"nodeType":"UsingForDirective","src":"352:26:7","typeName":{"id":1164,"name":"uint256","nodeType":"ElementaryTypeName","src":"370:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1169,"mutability":"mutable","name":"_tokenURIs","nameLocation":"458:10:7","nodeType":"VariableDeclaration","scope":1309,"src":"423:45:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"typeName":{"id":1168,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1166,"name":"uint256","nodeType":"ElementaryTypeName","src":"431:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"423:26:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1167,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"visibility":"private"},{"baseFunctions":[186,2026],"body":{"id":1192,"nodeType":"Block","src":"643:97:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1180,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"660:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30783439303634393036","id":1183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"682:10:7","typeDescriptions":{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"},"value":"0x49064906"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1225148678_by_1","typeString":"int_const 1225148678"}],"id":1182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"675:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes4_$","typeString":"type(bytes4)"},"typeName":{"id":1181,"name":"bytes4","nodeType":"ElementaryTypeName","src":"675:6:7","typeDescriptions":{}}},"id":1184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"675:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"660:33:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1188,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1172,"src":"721:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1186,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"697:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1309_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"703:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":186,"src":"697:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"697:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"660:73:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1179,"id":1191,"nodeType":"Return","src":"653:80:7"}]},"documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"475:55:7","text":" @dev See {IERC165-supportsInterface}"},"functionSelector":"01ffc9a7","id":1193,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"544:17:7","nodeType":"FunctionDefinition","overrides":{"id":1176,"nodeType":"OverrideSpecifier","overrides":[{"id":1174,"name":"ERC721","nameLocations":["611:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"611:6:7"},{"id":1175,"name":"IERC165","nameLocations":["619:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2027,"src":"619:7:7"}],"src":"602:25:7"},"parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1172,"mutability":"mutable","name":"interfaceId","nameLocation":"569:11:7","nodeType":"VariableDeclaration","scope":1193,"src":"562:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1171,"name":"bytes4","nodeType":"ElementaryTypeName","src":"562:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"561:20:7"},"returnParameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1178,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1193,"src":"637:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1177,"name":"bool","nodeType":"ElementaryTypeName","src":"637:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"636:6:7"},"scope":1309,"src":"535:205:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[297],"body":{"id":1251,"nodeType":"Block","src":"894:520:7","statements":[{"expression":{"arguments":[{"id":1203,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"919:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1202,"name":"_requireMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":915,"src":"904:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$__$","typeString":"function (uint256) view"}},"id":1204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"904:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1205,"nodeType":"ExpressionStatement","src":"904:23:7"},{"assignments":[1207],"declarations":[{"constant":false,"id":1207,"mutability":"mutable","name":"_tokenURI","nameLocation":"952:9:7","nodeType":"VariableDeclaration","scope":1251,"src":"938:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1206,"name":"string","nodeType":"ElementaryTypeName","src":"938:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1211,"initialValue":{"baseExpression":{"id":1208,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"964:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1210,"indexExpression":{"id":1209,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"975:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"964:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"VariableDeclarationStatement","src":"938:45:7"},{"assignments":[1213],"declarations":[{"constant":false,"id":1213,"mutability":"mutable","name":"base","nameLocation":"1007:4:7","nodeType":"VariableDeclaration","scope":1251,"src":"993:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1212,"name":"string","nodeType":"ElementaryTypeName","src":"993:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1216,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1214,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"1014:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1014:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"993:31:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1219,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1103:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1097:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1217,"name":"bytes","nodeType":"ElementaryTypeName","src":"1097:5:7","typeDescriptions":{}}},"id":1220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1097:11:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1109:6:7","memberName":"length","nodeType":"MemberAccess","src":"1097:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1097:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1227,"nodeType":"IfStatement","src":"1093:70:7","trueBody":{"id":1226,"nodeType":"Block","src":"1122:41:7","statements":[{"expression":{"id":1224,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1143:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1201,"id":1225,"nodeType":"Return","src":"1136:16:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1230,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1271:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1229,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1265:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1228,"name":"bytes","nodeType":"ElementaryTypeName","src":"1265:5:7","typeDescriptions":{}}},"id":1231,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1265:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1282:6:7","memberName":"length","nodeType":"MemberAccess","src":"1265:23:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1291:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1265:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1245,"nodeType":"IfStatement","src":"1261:106:7","trueBody":{"id":1244,"nodeType":"Block","src":"1294:73:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1239,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"1339:4:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1240,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1207,"src":"1345:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1237,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1322:3:7","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1326:12:7","memberName":"encodePacked","nodeType":"MemberAccess","src":"1322:16:7","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1315:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1235,"name":"string","nodeType":"ElementaryTypeName","src":"1315:6:7","typeDescriptions":{}}},"id":1242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1315:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1201,"id":1243,"nodeType":"Return","src":"1308:48:7"}]}},{"expression":{"arguments":[{"id":1248,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1196,"src":"1399:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1246,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1384:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1309_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1390:8:7","memberName":"tokenURI","nodeType":"MemberAccess","referencedDeclaration":297,"src":"1384:14:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) view returns (string memory)"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1384:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1201,"id":1250,"nodeType":"Return","src":"1377:30:7"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"746:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"815:8:7","nodeType":"FunctionDefinition","overrides":{"id":1198,"nodeType":"OverrideSpecifier","overrides":[],"src":"861:8:7"},"parameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1196,"mutability":"mutable","name":"tokenId","nameLocation":"832:7:7","nodeType":"VariableDeclaration","scope":1252,"src":"824:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1195,"name":"uint256","nodeType":"ElementaryTypeName","src":"824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"823:17:7"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"879:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1199,"name":"string","nodeType":"ElementaryTypeName","src":"879:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"878:15:7"},"scope":1309,"src":"806:608:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1277,"nodeType":"Block","src":"1680:172:7","statements":[{"expression":{"arguments":[{"arguments":[{"id":1262,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1706:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1261,"name":"_exists","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"1698:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":1263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1698:16:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e6578697374656e7420746f6b656e","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1716:48:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""},"value":"ERC721URIStorage: URI set of nonexistent token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","typeString":"literal_string \"ERC721URIStorage: URI set of nonexistent token\""}],"id":1260,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1690:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1690:75:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"ExpressionStatement","src":"1690:75:7"},{"expression":{"id":1271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1267,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"1775:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1269,"indexExpression":{"id":1268,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1786:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1775:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1270,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"1797:9:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1775:31:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1272,"nodeType":"ExpressionStatement","src":"1775:31:7"},{"eventCall":{"arguments":[{"id":1274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"1837:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1273,"name":"MetadataUpdate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":16,"src":"1822:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1822:23:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"EmitStatement","src":"1817:28:7"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1420:174:7","text":" @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}.\n Requirements:\n - `tokenId` must exist."},"id":1278,"implemented":true,"kind":"function","modifiers":[],"name":"_setTokenURI","nameLocation":"1608:12:7","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"tokenId","nameLocation":"1629:7:7","nodeType":"VariableDeclaration","scope":1278,"src":"1621:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1254,"name":"uint256","nodeType":"ElementaryTypeName","src":"1621:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"_tokenURI","nameLocation":"1652:9:7","nodeType":"VariableDeclaration","scope":1278,"src":"1638:23:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1256,"name":"string","nodeType":"ElementaryTypeName","src":"1638:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:42:7"},"returnParameters":{"id":1259,"nodeType":"ParameterList","parameters":[],"src":"1680:0:7"},"scope":1309,"src":"1599:253:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[760],"body":{"id":1307,"nodeType":"Block","src":"2128:142:7","statements":[{"expression":{"arguments":[{"id":1288,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2150:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1285,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2138:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721URIStorage_$1309_$","typeString":"type(contract super ERC721URIStorage)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2144:5:7","memberName":"_burn","nodeType":"MemberAccess","referencedDeclaration":760,"src":"2138:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2138:20:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1290,"nodeType":"ExpressionStatement","src":"2138:20:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"baseExpression":{"id":1293,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2179:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1295,"indexExpression":{"id":1294,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2190:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2179:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":1292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2173:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1291,"name":"bytes","nodeType":"ElementaryTypeName","src":"2173:5:7","typeDescriptions":{}}},"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2173:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2200:6:7","memberName":"length","nodeType":"MemberAccess","src":"2173:33:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2210:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2173:38:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1306,"nodeType":"IfStatement","src":"2169:95:7","trueBody":{"id":1305,"nodeType":"Block","src":"2213:51:7","statements":[{"expression":{"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2227:26:7","subExpression":{"baseExpression":{"id":1300,"name":"_tokenURIs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1169,"src":"2234:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_string_storage_$","typeString":"mapping(uint256 => string storage ref)"}},"id":1302,"indexExpression":{"id":1301,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"2245:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2234:19:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1304,"nodeType":"ExpressionStatement","src":"2227:26:7"}]}}]},"documentation":{"id":1279,"nodeType":"StructuredDocumentation","src":"1858:207:7","text":" @dev See {ERC721-_burn}. This override additionally checks to see if a\n token-specific URI was set for the token, and if so, it deletes the token URI from\n the storage mapping."},"id":1308,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2079:5:7","nodeType":"FunctionDefinition","overrides":{"id":1283,"nodeType":"OverrideSpecifier","overrides":[],"src":"2119:8:7"},"parameters":{"id":1282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1281,"mutability":"mutable","name":"tokenId","nameLocation":"2093:7:7","nodeType":"VariableDeclaration","scope":1308,"src":"2085:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1280,"name":"uint256","nodeType":"ElementaryTypeName","src":"2085:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2084:17:7"},"returnParameters":{"id":1284,"nodeType":"ParameterList","parameters":[],"src":"2128:0:7"},"scope":1309,"src":"2070:200:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1310,"src":"291:1981:7","usedErrors":[]}],"src":"128:2145:7"},"id":7},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC165":[2027],"IERC721":[1135],"IERC721Metadata":[1336]},"id":1337,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1311,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":1312,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1337,"sourceUnit":1136,"src":"137:24:8","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1314,"name":"IERC721","nameLocations":["326:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"326:7:8"},"id":1315,"nodeType":"InheritanceSpecifier","src":"326:7:8"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1313,"nodeType":"StructuredDocumentation","src":"163:133:8","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":1336,"linearizedBaseContracts":[1336,1135,2027],"name":"IERC721Metadata","nameLocation":"307:15:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"340:58:8","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":1321,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"412:4:8","nodeType":"FunctionDefinition","parameters":{"id":1317,"nodeType":"ParameterList","parameters":[],"src":"416:2:8"},"returnParameters":{"id":1320,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1319,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1321,"src":"442:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1318,"name":"string","nodeType":"ElementaryTypeName","src":"442:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"441:15:8"},"scope":1336,"src":"403:54:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1322,"nodeType":"StructuredDocumentation","src":"463:60:8","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":1327,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"537:6:8","nodeType":"FunctionDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[],"src":"543:2:8"},"returnParameters":{"id":1326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1325,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1327,"src":"569:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1324,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"568:15:8"},"scope":1336,"src":"528:56:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1328,"nodeType":"StructuredDocumentation","src":"590:90:8","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":1335,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"694:8:8","nodeType":"FunctionDefinition","parameters":{"id":1331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1330,"mutability":"mutable","name":"tokenId","nameLocation":"711:7:8","nodeType":"VariableDeclaration","scope":1335,"src":"703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1329,"name":"uint256","nodeType":"ElementaryTypeName","src":"703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"702:17:8"},"returnParameters":{"id":1334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1335,"src":"743:13:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1332,"name":"string","nodeType":"ElementaryTypeName","src":"743:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"742:15:8"},"scope":1336,"src":"685:73:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1337,"src":"297:463:8","usedErrors":[]}],"src":"112:649:8"},"id":8},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1666]},"id":1667,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1338,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1339,"nodeType":"StructuredDocumentation","src":"126:67:9","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1666,"linearizedBaseContracts":[1666],"name":"Address","nameLocation":"202:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1353,"nodeType":"Block","src":"1478:254:9","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1347,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1342,"src":"1702:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1710:4:9","memberName":"code","nodeType":"MemberAccess","src":"1702:12:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1715:6:9","memberName":"length","nodeType":"MemberAccess","src":"1702:19:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1724:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1702:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1346,"id":1352,"nodeType":"Return","src":"1695:30:9"}]},"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"216:1191:9","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1354,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1421:10:9","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"account","nameLocation":"1440:7:9","nodeType":"VariableDeclaration","scope":1354,"src":"1432:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"1432:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1431:17:9"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1354,"src":"1472:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1344,"name":"bool","nodeType":"ElementaryTypeName","src":"1472:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1471:6:9"},"scope":1666,"src":"1412:320:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1387,"nodeType":"Block","src":"2718:241:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1365,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2744:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1666","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1666","typeString":"library Address"}],"id":1364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2736:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1363,"name":"address","nodeType":"ElementaryTypeName","src":"2736:7:9","typeDescriptions":{}}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2736:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2750:7:9","memberName":"balance","nodeType":"MemberAccess","src":"2736:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1368,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"2761:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2736:31:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2769:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1362,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2728:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1372,"nodeType":"ExpressionStatement","src":"2728:73:9"},{"assignments":[1374,null],"declarations":[{"constant":false,"id":1374,"mutability":"mutable","name":"success","nameLocation":"2818:7:9","nodeType":"VariableDeclaration","scope":1387,"src":"2813:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1373,"name":"bool","nodeType":"ElementaryTypeName","src":"2813:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1381,"initialValue":{"arguments":[{"hexValue":"","id":1379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2861:2:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1375,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1357,"src":"2831:9:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2841:4:9","memberName":"call","nodeType":"MemberAccess","src":"2831:14:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1377,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1359,"src":"2853:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2831:29:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2812:52:9"},{"expression":{"arguments":[{"id":1383,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"2882:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2891:60:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1382,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2874:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1385,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2874:78:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1386,"nodeType":"ExpressionStatement","src":"2874:78:9"}]},"documentation":{"id":1355,"nodeType":"StructuredDocumentation","src":"1738:904:9","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1388,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2656:9:9","nodeType":"FunctionDefinition","parameters":{"id":1360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1357,"mutability":"mutable","name":"recipient","nameLocation":"2682:9:9","nodeType":"VariableDeclaration","scope":1388,"src":"2666:25:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1356,"name":"address","nodeType":"ElementaryTypeName","src":"2666:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1359,"mutability":"mutable","name":"amount","nameLocation":"2701:6:9","nodeType":"VariableDeclaration","scope":1388,"src":"2693:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1358,"name":"uint256","nodeType":"ElementaryTypeName","src":"2693:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:43:9"},"returnParameters":{"id":1361,"nodeType":"ParameterList","parameters":[],"src":"2718:0:9"},"scope":1666,"src":"2647:312:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1405,"nodeType":"Block","src":"3790:96:9","statements":[{"expression":{"arguments":[{"id":1399,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1391,"src":"3829:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1393,"src":"3837:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3843:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1402,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3846:32:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1398,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1446,1490],"referencedDeclaration":1490,"src":"3807:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3807:72:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1397,"id":1404,"nodeType":"Return","src":"3800:79:9"}]},"documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"2965:731:9","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3710:12:9","nodeType":"FunctionDefinition","parameters":{"id":1394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1391,"mutability":"mutable","name":"target","nameLocation":"3731:6:9","nodeType":"VariableDeclaration","scope":1406,"src":"3723:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"3723:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1393,"mutability":"mutable","name":"data","nameLocation":"3752:4:9","nodeType":"VariableDeclaration","scope":1406,"src":"3739:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1392,"name":"bytes","nodeType":"ElementaryTypeName","src":"3739:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3722:35:9"},"returnParameters":{"id":1397,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1396,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1406,"src":"3776:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1395,"name":"bytes","nodeType":"ElementaryTypeName","src":"3776:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:14:9"},"scope":1666,"src":"3701:185:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1425,"nodeType":"Block","src":"4255:76:9","statements":[{"expression":{"arguments":[{"id":1419,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"4294:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1420,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"4302:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4308:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1422,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1413,"src":"4311:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1418,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1446,1490],"referencedDeclaration":1490,"src":"4272:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4272:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1417,"id":1424,"nodeType":"Return","src":"4265:59:9"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"3892:211:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1426,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"4117:12:9","nodeType":"FunctionDefinition","parameters":{"id":1414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"target","nameLocation":"4147:6:9","nodeType":"VariableDeclaration","scope":1426,"src":"4139:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1408,"name":"address","nodeType":"ElementaryTypeName","src":"4139:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"data","nameLocation":"4176:4:9","nodeType":"VariableDeclaration","scope":1426,"src":"4163:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1410,"name":"bytes","nodeType":"ElementaryTypeName","src":"4163:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"errorMessage","nameLocation":"4204:12:9","nodeType":"VariableDeclaration","scope":1426,"src":"4190:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1412,"name":"string","nodeType":"ElementaryTypeName","src":"4190:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4129:93:9"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1426,"src":"4241:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1415,"name":"bytes","nodeType":"ElementaryTypeName","src":"4241:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4240:14:9"},"scope":1666,"src":"4108:223:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1445,"nodeType":"Block","src":"4806:111:9","statements":[{"expression":{"arguments":[{"id":1439,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1429,"src":"4845:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1440,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4853:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"4859:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4866:43:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1438,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1446,1490],"referencedDeclaration":1490,"src":"4823:21:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4823:87:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1437,"id":1444,"nodeType":"Return","src":"4816:94:9"}]},"documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"4337:351:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1446,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4702:21:9","nodeType":"FunctionDefinition","parameters":{"id":1434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1429,"mutability":"mutable","name":"target","nameLocation":"4732:6:9","nodeType":"VariableDeclaration","scope":1446,"src":"4724:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1428,"name":"address","nodeType":"ElementaryTypeName","src":"4724:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1431,"mutability":"mutable","name":"data","nameLocation":"4753:4:9","nodeType":"VariableDeclaration","scope":1446,"src":"4740:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1430,"name":"bytes","nodeType":"ElementaryTypeName","src":"4740:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1433,"mutability":"mutable","name":"value","nameLocation":"4767:5:9","nodeType":"VariableDeclaration","scope":1446,"src":"4759:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1432,"name":"uint256","nodeType":"ElementaryTypeName","src":"4759:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4723:50:9"},"returnParameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1446,"src":"4792:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1435,"name":"bytes","nodeType":"ElementaryTypeName","src":"4792:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4791:14:9"},"scope":1666,"src":"4693:224:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"5344:267:9","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1463,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5370:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1666","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1666","typeString":"library Address"}],"id":1462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5362:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1461,"name":"address","nodeType":"ElementaryTypeName","src":"5362:7:9","typeDescriptions":{}}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5362:13:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5376:7:9","memberName":"balance","nodeType":"MemberAccess","src":"5362:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"5387:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:30:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5394:40:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1460,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5354:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5354:81:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1470,"nodeType":"ExpressionStatement","src":"5354:81:9"},{"assignments":[1472,1474],"declarations":[{"constant":false,"id":1472,"mutability":"mutable","name":"success","nameLocation":"5451:7:9","nodeType":"VariableDeclaration","scope":1489,"src":"5446:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1471,"name":"bool","nodeType":"ElementaryTypeName","src":"5446:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"returndata","nameLocation":"5473:10:9","nodeType":"VariableDeclaration","scope":1489,"src":"5460:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1473,"name":"bytes","nodeType":"ElementaryTypeName","src":"5460:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1481,"initialValue":{"arguments":[{"id":1479,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1451,"src":"5513:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1475,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"5487:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5494:4:9","memberName":"call","nodeType":"MemberAccess","src":"5487:11:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1477,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"5506:5:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5487:25:9","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5487:31:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5445:73:9"},{"expression":{"arguments":[{"id":1483,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1449,"src":"5562:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1484,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"5570:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1485,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"5579:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1486,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"5591:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1482,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"5535:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5535:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1459,"id":1488,"nodeType":"Return","src":"5528:76:9"}]},"documentation":{"id":1447,"nodeType":"StructuredDocumentation","src":"4923:237:9","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"5174:21:9","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1449,"mutability":"mutable","name":"target","nameLocation":"5213:6:9","nodeType":"VariableDeclaration","scope":1490,"src":"5205:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1448,"name":"address","nodeType":"ElementaryTypeName","src":"5205:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"data","nameLocation":"5242:4:9","nodeType":"VariableDeclaration","scope":1490,"src":"5229:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1450,"name":"bytes","nodeType":"ElementaryTypeName","src":"5229:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"value","nameLocation":"5264:5:9","nodeType":"VariableDeclaration","scope":1490,"src":"5256:13:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1452,"name":"uint256","nodeType":"ElementaryTypeName","src":"5256:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1455,"mutability":"mutable","name":"errorMessage","nameLocation":"5293:12:9","nodeType":"VariableDeclaration","scope":1490,"src":"5279:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1454,"name":"string","nodeType":"ElementaryTypeName","src":"5279:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5195:116:9"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"5330:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1457,"name":"bytes","nodeType":"ElementaryTypeName","src":"5330:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5329:14:9"},"scope":1666,"src":"5165:446:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1506,"nodeType":"Block","src":"5888:97:9","statements":[{"expression":{"arguments":[{"id":1501,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5924:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1502,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5932:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5938:39:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1500,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1507,1536],"referencedDeclaration":1536,"src":"5905:18:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5905:73:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1499,"id":1505,"nodeType":"Return","src":"5898:80:9"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"5617:166:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1507,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5797:18:9","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"target","nameLocation":"5824:6:9","nodeType":"VariableDeclaration","scope":1507,"src":"5816:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"5816:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"data","nameLocation":"5845:4:9","nodeType":"VariableDeclaration","scope":1507,"src":"5832:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1494,"name":"bytes","nodeType":"ElementaryTypeName","src":"5832:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5815:35:9"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1507,"src":"5874:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1497,"name":"bytes","nodeType":"ElementaryTypeName","src":"5874:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5873:14:9"},"scope":1666,"src":"5788:197:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1535,"nodeType":"Block","src":"6327:168:9","statements":[{"assignments":[1520,1522],"declarations":[{"constant":false,"id":1520,"mutability":"mutable","name":"success","nameLocation":"6343:7:9","nodeType":"VariableDeclaration","scope":1535,"src":"6338:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1519,"name":"bool","nodeType":"ElementaryTypeName","src":"6338:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"returndata","nameLocation":"6365:10:9","nodeType":"VariableDeclaration","scope":1535,"src":"6352:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1521,"name":"bytes","nodeType":"ElementaryTypeName","src":"6352:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1527,"initialValue":{"arguments":[{"id":1525,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1512,"src":"6397:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1523,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6379:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6386:10:9","memberName":"staticcall","nodeType":"MemberAccess","src":"6379:17:9","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:23:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6337:65:9"},{"expression":{"arguments":[{"id":1529,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6446:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1530,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1520,"src":"6454:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1531,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"6463:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1532,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1514,"src":"6475:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1528,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"6419:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6419:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1518,"id":1534,"nodeType":"Return","src":"6412:76:9"}]},"documentation":{"id":1508,"nodeType":"StructuredDocumentation","src":"5991:173:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1536,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6178:18:9","nodeType":"FunctionDefinition","parameters":{"id":1515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1510,"mutability":"mutable","name":"target","nameLocation":"6214:6:9","nodeType":"VariableDeclaration","scope":1536,"src":"6206:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1509,"name":"address","nodeType":"ElementaryTypeName","src":"6206:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1512,"mutability":"mutable","name":"data","nameLocation":"6243:4:9","nodeType":"VariableDeclaration","scope":1536,"src":"6230:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1511,"name":"bytes","nodeType":"ElementaryTypeName","src":"6230:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1514,"mutability":"mutable","name":"errorMessage","nameLocation":"6271:12:9","nodeType":"VariableDeclaration","scope":1536,"src":"6257:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1513,"name":"string","nodeType":"ElementaryTypeName","src":"6257:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6196:93:9"},"returnParameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1536,"src":"6313:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1516,"name":"bytes","nodeType":"ElementaryTypeName","src":"6313:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6312:14:9"},"scope":1666,"src":"6169:326:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1552,"nodeType":"Block","src":"6771:101:9","statements":[{"expression":{"arguments":[{"id":1547,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1539,"src":"6809:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1548,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1541,"src":"6817:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1549,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6823:41:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1546,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1553,1582],"referencedDeclaration":1582,"src":"6788:20:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6788:77:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1545,"id":1551,"nodeType":"Return","src":"6781:84:9"}]},"documentation":{"id":1537,"nodeType":"StructuredDocumentation","src":"6501:168:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1553,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6683:20:9","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1539,"mutability":"mutable","name":"target","nameLocation":"6712:6:9","nodeType":"VariableDeclaration","scope":1553,"src":"6704:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1538,"name":"address","nodeType":"ElementaryTypeName","src":"6704:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1541,"mutability":"mutable","name":"data","nameLocation":"6733:4:9","nodeType":"VariableDeclaration","scope":1553,"src":"6720:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1540,"name":"bytes","nodeType":"ElementaryTypeName","src":"6720:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6703:35:9"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1553,"src":"6757:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1543,"name":"bytes","nodeType":"ElementaryTypeName","src":"6757:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6756:14:9"},"scope":1666,"src":"6674:198:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1581,"nodeType":"Block","src":"7213:170:9","statements":[{"assignments":[1566,1568],"declarations":[{"constant":false,"id":1566,"mutability":"mutable","name":"success","nameLocation":"7229:7:9","nodeType":"VariableDeclaration","scope":1581,"src":"7224:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1565,"name":"bool","nodeType":"ElementaryTypeName","src":"7224:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"returndata","nameLocation":"7251:10:9","nodeType":"VariableDeclaration","scope":1581,"src":"7238:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1567,"name":"bytes","nodeType":"ElementaryTypeName","src":"7238:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1573,"initialValue":{"arguments":[{"id":1571,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"7285:4:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1569,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7265:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7272:12:9","memberName":"delegatecall","nodeType":"MemberAccess","src":"7265:19:9","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7265:25:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7223:67:9"},{"expression":{"arguments":[{"id":1575,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"7334:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1576,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1566,"src":"7342:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1577,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"7351:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1578,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"7363:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1574,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1621,"src":"7307:26:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory,string memory) view returns (bytes memory)"}},"id":1579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7307:69:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1564,"id":1580,"nodeType":"Return","src":"7300:76:9"}]},"documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"6878:175:9","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1582,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"7067:20:9","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1556,"mutability":"mutable","name":"target","nameLocation":"7105:6:9","nodeType":"VariableDeclaration","scope":1582,"src":"7097:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1555,"name":"address","nodeType":"ElementaryTypeName","src":"7097:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1558,"mutability":"mutable","name":"data","nameLocation":"7134:4:9","nodeType":"VariableDeclaration","scope":1582,"src":"7121:17:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1557,"name":"bytes","nodeType":"ElementaryTypeName","src":"7121:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1560,"mutability":"mutable","name":"errorMessage","nameLocation":"7162:12:9","nodeType":"VariableDeclaration","scope":1582,"src":"7148:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1559,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7087:93:9"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1582,"src":"7199:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1562,"name":"bytes","nodeType":"ElementaryTypeName","src":"7199:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7198:14:9"},"scope":1666,"src":"7058:325:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1620,"nodeType":"Block","src":"7865:434:9","statements":[{"condition":{"id":1596,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1587,"src":"7879:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1618,"nodeType":"Block","src":"8235:58:9","statements":[{"expression":{"arguments":[{"id":1614,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"8257:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1615,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"8269:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1613,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8249:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8249:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1617,"nodeType":"ExpressionStatement","src":"8249:33:9"}]},"id":1619,"nodeType":"IfStatement","src":"7875:418:9","trueBody":{"id":1612,"nodeType":"Block","src":"7888:341:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1597,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"7906:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7917:6:9","memberName":"length","nodeType":"MemberAccess","src":"7906:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7927:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7906:22:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1609,"nodeType":"IfStatement","src":"7902:286:9","trueBody":{"id":1608,"nodeType":"Block","src":"7930:258:9","statements":[{"expression":{"arguments":[{"arguments":[{"id":1603,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1585,"src":"8132:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1602,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"8121:10:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8121:18:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8141:31:9","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1601,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8113:7:9","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8113:60:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1607,"nodeType":"ExpressionStatement","src":"8113:60:9"}]}},{"expression":{"id":1610,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"8208:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1595,"id":1611,"nodeType":"Return","src":"8201:17:9"}]}}]},"documentation":{"id":1583,"nodeType":"StructuredDocumentation","src":"7389:277:9","text":" @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"},"id":1621,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"7680:26:9","nodeType":"FunctionDefinition","parameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1585,"mutability":"mutable","name":"target","nameLocation":"7724:6:9","nodeType":"VariableDeclaration","scope":1621,"src":"7716:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"7716:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1587,"mutability":"mutable","name":"success","nameLocation":"7745:7:9","nodeType":"VariableDeclaration","scope":1621,"src":"7740:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"7740:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1589,"mutability":"mutable","name":"returndata","nameLocation":"7775:10:9","nodeType":"VariableDeclaration","scope":1621,"src":"7762:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1588,"name":"bytes","nodeType":"ElementaryTypeName","src":"7762:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1591,"mutability":"mutable","name":"errorMessage","nameLocation":"7809:12:9","nodeType":"VariableDeclaration","scope":1621,"src":"7795:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1590,"name":"string","nodeType":"ElementaryTypeName","src":"7795:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7706:121:9"},"returnParameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1594,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1621,"src":"7851:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1593,"name":"bytes","nodeType":"ElementaryTypeName","src":"7851:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7850:14:9"},"scope":1666,"src":"7671:628:9","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1644,"nodeType":"Block","src":"8680:135:9","statements":[{"condition":{"id":1633,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1624,"src":"8694:7:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1642,"nodeType":"Block","src":"8751:58:9","statements":[{"expression":{"arguments":[{"id":1638,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"8773:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1639,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1628,"src":"8785:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1637,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1665,"src":"8765:7:9","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (bytes memory,string memory) pure"}},"id":1640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8765:33:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1641,"nodeType":"ExpressionStatement","src":"8765:33:9"}]},"id":1643,"nodeType":"IfStatement","src":"8690:119:9","trueBody":{"id":1636,"nodeType":"Block","src":"8703:42:9","statements":[{"expression":{"id":1634,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1626,"src":"8724:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1632,"id":1635,"nodeType":"Return","src":"8717:17:9"}]}}]},"documentation":{"id":1622,"nodeType":"StructuredDocumentation","src":"8305:210:9","text":" @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"},"id":1645,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"8529:16:9","nodeType":"FunctionDefinition","parameters":{"id":1629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1624,"mutability":"mutable","name":"success","nameLocation":"8560:7:9","nodeType":"VariableDeclaration","scope":1645,"src":"8555:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1623,"name":"bool","nodeType":"ElementaryTypeName","src":"8555:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1626,"mutability":"mutable","name":"returndata","nameLocation":"8590:10:9","nodeType":"VariableDeclaration","scope":1645,"src":"8577:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1625,"name":"bytes","nodeType":"ElementaryTypeName","src":"8577:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1628,"mutability":"mutable","name":"errorMessage","nameLocation":"8624:12:9","nodeType":"VariableDeclaration","scope":1645,"src":"8610:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1627,"name":"string","nodeType":"ElementaryTypeName","src":"8610:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8545:97:9"},"returnParameters":{"id":1632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1645,"src":"8666:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1630,"name":"bytes","nodeType":"ElementaryTypeName","src":"8666:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8665:14:9"},"scope":1666,"src":"8520:295:9","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"8904:457:9","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1655,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1652,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"8980:10:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8991:6:9","memberName":"length","nodeType":"MemberAccess","src":"8980:17:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9000:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8980:21:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1662,"nodeType":"Block","src":"9310:45:9","statements":[{"expression":{"arguments":[{"id":1659,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1649,"src":"9331:12:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1658,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"9324:6:9","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1660,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9324:20:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1661,"nodeType":"ExpressionStatement","src":"9324:20:9"}]},"id":1663,"nodeType":"IfStatement","src":"8976:379:9","trueBody":{"id":1657,"nodeType":"Block","src":"9003:301:9","statements":[{"AST":{"nodeType":"YulBlock","src":"9161:133:9","statements":[{"nodeType":"YulVariableDeclaration","src":"9179:40:9","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"9208:10:9"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9202:5:9"},"nodeType":"YulFunctionCall","src":"9202:17:9"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"9183:15:9","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9247:2:9","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"9251:10:9"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9243:3:9"},"nodeType":"YulFunctionCall","src":"9243:19:9"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"9264:15:9"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9236:6:9"},"nodeType":"YulFunctionCall","src":"9236:44:9"},"nodeType":"YulExpressionStatement","src":"9236:44:9"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1647,"isOffset":false,"isSlot":false,"src":"9208:10:9","valueSize":1},{"declaration":1647,"isOffset":false,"isSlot":false,"src":"9251:10:9","valueSize":1}],"id":1656,"nodeType":"InlineAssembly","src":"9152:142:9"}]}}]},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"8830:7:9","nodeType":"FunctionDefinition","parameters":{"id":1650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1647,"mutability":"mutable","name":"returndata","nameLocation":"8851:10:9","nodeType":"VariableDeclaration","scope":1665,"src":"8838:23:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1646,"name":"bytes","nodeType":"ElementaryTypeName","src":"8838:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1649,"mutability":"mutable","name":"errorMessage","nameLocation":"8877:12:9","nodeType":"VariableDeclaration","scope":1665,"src":"8863:26:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1648,"name":"string","nodeType":"ElementaryTypeName","src":"8863:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8837:53:9"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[],"src":"8904:0:9"},"scope":1666,"src":"8821:540:9","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1667,"src":"194:9169:9","usedErrors":[]}],"src":"101:9263:9"},"id":9},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1688]},"id":1689,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1668,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1669,"nodeType":"StructuredDocumentation","src":"111:496:10","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1688,"linearizedBaseContracts":[1688],"name":"Context","nameLocation":"626:7:10","nodeType":"ContractDefinition","nodes":[{"body":{"id":1677,"nodeType":"Block","src":"702:34:10","statements":[{"expression":{"expression":{"id":1674,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:10","memberName":"sender","nodeType":"MemberAccess","src":"719:10:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1673,"id":1676,"nodeType":"Return","src":"712:17:10"}]},"id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:10","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[],"src":"659:2:10"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"693:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:10"},"scope":1688,"src":"640:96:10","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1686,"nodeType":"Block","src":"809:32:10","statements":[{"expression":{"expression":{"id":1683,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:10","memberName":"data","nodeType":"MemberAccess","src":"826:8:10","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1682,"id":1685,"nodeType":"Return","src":"819:15:10"}]},"id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:10","nodeType":"FunctionDefinition","parameters":{"id":1679,"nodeType":"ParameterList","parameters":[],"src":"759:2:10"},"returnParameters":{"id":1682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1681,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"793:14:10","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1680,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:10"},"scope":1688,"src":"742:99:10","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1689,"src":"608:235:10","usedErrors":[]}],"src":"86:758:10"},"id":10},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1762]},"id":1763,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1690,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1691,"nodeType":"StructuredDocumentation","src":"112:311:11","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1762,"linearizedBaseContracts":[1762],"name":"Counters","nameLocation":"432:8:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1694,"members":[{"constant":false,"id":1693,"mutability":"mutable","name":"_value","nameLocation":"794:6:11","nodeType":"VariableDeclaration","scope":1694,"src":"786:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1692,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:11","nodeType":"StructDefinition","scope":1762,"src":"447:374:11","visibility":"public"},{"body":{"id":1705,"nodeType":"Block","src":"901:38:11","statements":[{"expression":{"expression":{"id":1702,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"918:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1703,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"926:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"918:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1701,"id":1704,"nodeType":"Return","src":"911:21:11"}]},"id":1706,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:11","nodeType":"FunctionDefinition","parameters":{"id":1698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1697,"mutability":"mutable","name":"counter","nameLocation":"860:7:11","nodeType":"VariableDeclaration","scope":1706,"src":"844:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1696,"nodeType":"UserDefinedTypeName","pathNode":{"id":1695,"name":"Counter","nameLocations":["844:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"844:7:11"},"referencedDeclaration":1694,"src":"844:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:11"},"returnParameters":{"id":1701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1700,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1706,"src":"892:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1699,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:11"},"scope":1762,"src":"827:112:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1719,"nodeType":"Block","src":"998:70:11","statements":[{"id":1718,"nodeType":"UncheckedBlock","src":"1008:54:11","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1712,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"1032:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1714,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1040:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"1032:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"1032:19:11"}]}]},"id":1720,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:11","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"counter","nameLocation":"980:7:11","nodeType":"VariableDeclaration","scope":1720,"src":"964:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1708,"nodeType":"UserDefinedTypeName","pathNode":{"id":1707,"name":"Counter","nameLocations":["964:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"964:7:11"},"referencedDeclaration":1694,"src":"964:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:11"},"returnParameters":{"id":1711,"nodeType":"ParameterList","parameters":[],"src":"998:0:11"},"scope":1762,"src":"945:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1747,"nodeType":"Block","src":"1127:176:11","statements":[{"assignments":[1727],"declarations":[{"constant":false,"id":1727,"mutability":"mutable","name":"value","nameLocation":"1145:5:11","nodeType":"VariableDeclaration","scope":1747,"src":"1137:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1726,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1730,"initialValue":{"expression":{"id":1728,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"1153:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1161:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"1153:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:11"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1732,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"1185:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:11","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1731,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:11","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1177:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1737,"nodeType":"ExpressionStatement","src":"1177:49:11"},{"id":1746,"nodeType":"UncheckedBlock","src":"1236:61:11","statements":[{"expression":{"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1738,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1723,"src":"1260:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1740,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1268:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"1260:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1727,"src":"1277:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1745,"nodeType":"ExpressionStatement","src":"1260:26:11"}]}]},"id":1748,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:11","nodeType":"FunctionDefinition","parameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"counter","nameLocation":"1109:7:11","nodeType":"VariableDeclaration","scope":1748,"src":"1093:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1722,"nodeType":"UserDefinedTypeName","pathNode":{"id":1721,"name":"Counter","nameLocations":["1093:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"1093:7:11"},"referencedDeclaration":1694,"src":"1093:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:11"},"returnParameters":{"id":1725,"nodeType":"ParameterList","parameters":[],"src":"1127:0:11"},"scope":1762,"src":"1074:229:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1760,"nodeType":"Block","src":"1358:35:11","statements":[{"expression":{"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1754,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1751,"src":"1368:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1376:6:11","memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1693,"src":"1368:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1757,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1759,"nodeType":"ExpressionStatement","src":"1368:18:11"}]},"id":1761,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:11","nodeType":"FunctionDefinition","parameters":{"id":1752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1751,"mutability":"mutable","name":"counter","nameLocation":"1340:7:11","nodeType":"VariableDeclaration","scope":1761,"src":"1324:23:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1750,"nodeType":"UserDefinedTypeName","pathNode":{"id":1749,"name":"Counter","nameLocations":["1324:7:11"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"1324:7:11"},"referencedDeclaration":1694,"src":"1324:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:11"},"returnParameters":{"id":1753,"nodeType":"ParameterList","parameters":[],"src":"1358:0:11"},"scope":1762,"src":"1309:84:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1763,"src":"424:971:11","usedErrors":[]}],"src":"87:1309:11"},"id":11},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2893],"SignedMath":[2998],"Strings":[1991]},"id":1992,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1764,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:12"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1765,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1992,"sourceUnit":2894,"src":"126:25:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":1766,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1992,"sourceUnit":2999,"src":"152:31:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"185:34:12","text":" @dev String operations."},"fullyImplemented":true,"id":1991,"linearizedBaseContracts":[1991],"name":"Strings","nameLocation":"228:7:12","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1770,"mutability":"constant","name":"_SYMBOLS","nameLocation":"267:8:12","nodeType":"VariableDeclaration","scope":1991,"src":"242:54:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1768,"name":"bytes16","nodeType":"ElementaryTypeName","src":"242:7:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"278:18:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1773,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"325:15:12","nodeType":"VariableDeclaration","scope":1991,"src":"302:43:12","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1771,"name":"uint8","nodeType":"ElementaryTypeName","src":"302:5:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"343:2:12","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1820,"nodeType":"Block","src":"518:625:12","statements":[{"id":1819,"nodeType":"UncheckedBlock","src":"528:609:12","statements":[{"assignments":[1782],"declarations":[{"constant":false,"id":1782,"mutability":"mutable","name":"length","nameLocation":"560:6:12","nodeType":"VariableDeclaration","scope":1819,"src":"552:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1781,"name":"uint256","nodeType":"ElementaryTypeName","src":"552:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1789,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1785,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"580:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1783,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"569:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2893_$","typeString":"type(library Math)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"574:5:12","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2730,"src":"569:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"569:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"589:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"569:21:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"552:38:12"},{"assignments":[1791],"declarations":[{"constant":false,"id":1791,"mutability":"mutable","name":"buffer","nameLocation":"618:6:12","nodeType":"VariableDeclaration","scope":1819,"src":"604:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1790,"name":"string","nodeType":"ElementaryTypeName","src":"604:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1796,"initialValue":{"arguments":[{"id":1794,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1782,"src":"638:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"627:10:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1792,"name":"string","nodeType":"ElementaryTypeName","src":"631:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"627:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"604:41:12"},{"assignments":[1798],"declarations":[{"constant":false,"id":1798,"mutability":"mutable","name":"ptr","nameLocation":"667:3:12","nodeType":"VariableDeclaration","scope":1819,"src":"659:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1797,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1799,"nodeType":"VariableDeclarationStatement","src":"659:11:12"},{"AST":{"nodeType":"YulBlock","src":"740:67:12","statements":[{"nodeType":"YulAssignment","src":"758:35:12","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"769:6:12"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"781:2:12","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"785:6:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"777:3:12"},"nodeType":"YulFunctionCall","src":"777:15:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"765:3:12"},"nodeType":"YulFunctionCall","src":"765:28:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"758:3:12"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1791,"isOffset":false,"isSlot":false,"src":"769:6:12","valueSize":1},{"declaration":1782,"isOffset":false,"isSlot":false,"src":"785:6:12","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"758:3:12","valueSize":1}],"id":1800,"nodeType":"InlineAssembly","src":"731:76:12"},{"body":{"id":1815,"nodeType":"Block","src":"833:267:12","statements":[{"expression":{"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"851:5:12","subExpression":{"id":1802,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1798,"src":"851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1804,"nodeType":"ExpressionStatement","src":"851:5:12"},{"AST":{"nodeType":"YulBlock","src":"934:84:12","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"964:3:12"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"978:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"985:2:12","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"974:3:12"},"nodeType":"YulFunctionCall","src":"974:14:12"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"990:8:12"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"969:4:12"},"nodeType":"YulFunctionCall","src":"969:30:12"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"956:7:12"},"nodeType":"YulFunctionCall","src":"956:44:12"},"nodeType":"YulExpressionStatement","src":"956:44:12"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":1770,"isOffset":false,"isSlot":false,"src":"990:8:12","valueSize":1},{"declaration":1798,"isOffset":false,"isSlot":false,"src":"964:3:12","valueSize":1},{"declaration":1776,"isOffset":false,"isSlot":false,"src":"978:5:12","valueSize":1}],"id":1805,"nodeType":"InlineAssembly","src":"925:93:12"},{"expression":{"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1806,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1035:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1807,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1044:2:12","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1035:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1809,"nodeType":"ExpressionStatement","src":"1035:11:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"1068:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1077:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1068:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1814,"nodeType":"IfStatement","src":"1064:21:12","trueBody":{"id":1813,"nodeType":"Break","src":"1080:5:12"}}]},"condition":{"hexValue":"74727565","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"827:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1816,"nodeType":"WhileStatement","src":"820:280:12"},{"expression":{"id":1817,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1791,"src":"1120:6:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1780,"id":1818,"nodeType":"Return","src":"1113:13:12"}]}]},"documentation":{"id":1774,"nodeType":"StructuredDocumentation","src":"352:90:12","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"456:8:12","nodeType":"FunctionDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"value","nameLocation":"473:5:12","nodeType":"VariableDeclaration","scope":1821,"src":"465:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"465:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"464:15:12"},"returnParameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1779,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1821,"src":"503:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1778,"name":"string","nodeType":"ElementaryTypeName","src":"503:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"502:15:12"},"scope":1991,"src":"447:696:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"1313:103:12","statements":[{"expression":{"arguments":[{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1833,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1354:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1362:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1354:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1372:2:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1354:20:12","trueExpression":{"hexValue":"2d","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1366:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":1842,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"1400:5:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":1840,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2998,"src":"1385:10:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$2998_$","typeString":"type(library SignedMath)"}},"id":1841,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1396:3:12","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":2997,"src":"1385:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1385:21:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1839,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[1821,1849],"referencedDeclaration":1821,"src":"1376:8:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1376:31:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1831,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1337:3:12","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1341:12:12","memberName":"encodePacked","nodeType":"MemberAccess","src":"1337:16:12","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1337:71:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1330:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1829,"name":"string","nodeType":"ElementaryTypeName","src":"1330:6:12","typeDescriptions":{}}},"id":1846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1330:79:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1828,"id":1847,"nodeType":"Return","src":"1323:86:12"}]},"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"1149:89:12","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1252:8:12","nodeType":"FunctionDefinition","parameters":{"id":1825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"value","nameLocation":"1268:5:12","nodeType":"VariableDeclaration","scope":1849,"src":"1261:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1823,"name":"int256","nodeType":"ElementaryTypeName","src":"1261:6:12","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1260:14:12"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1849,"src":"1298:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1826,"name":"string","nodeType":"ElementaryTypeName","src":"1298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1297:15:12"},"scope":1991,"src":"1243:173:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1868,"nodeType":"Block","src":"1595:100:12","statements":[{"id":1867,"nodeType":"UncheckedBlock","src":"1605:84:12","statements":[{"expression":{"arguments":[{"id":1858,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1648:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1852,"src":"1667:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1859,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2893,"src":"1655:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2893_$","typeString":"type(library Math)"}},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1660:6:12","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2853,"src":"1655:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1655:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1676:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1655:22:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1857,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1869,1945,1965],"referencedDeclaration":1945,"src":"1636:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1636:42:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1856,"id":1866,"nodeType":"Return","src":"1629:49:12"}]}]},"documentation":{"id":1850,"nodeType":"StructuredDocumentation","src":"1422:94:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1869,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1530:11:12","nodeType":"FunctionDefinition","parameters":{"id":1853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1852,"mutability":"mutable","name":"value","nameLocation":"1550:5:12","nodeType":"VariableDeclaration","scope":1869,"src":"1542:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1851,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1541:15:12"},"returnParameters":{"id":1856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1869,"src":"1580:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1854,"name":"string","nodeType":"ElementaryTypeName","src":"1580:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1579:15:12"},"scope":1991,"src":"1521:174:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1944,"nodeType":"Block","src":"1908:347:12","statements":[{"assignments":[1880],"declarations":[{"constant":false,"id":1880,"mutability":"mutable","name":"buffer","nameLocation":"1931:6:12","nodeType":"VariableDeclaration","scope":1944,"src":"1918:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"1918:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1889,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1950:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1884,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"1954:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1950:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1963:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1950:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1940:9:12","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"1944:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1940:25:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1918:47:12"},{"expression":{"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1890,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"1975:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1892,"indexExpression":{"hexValue":"30","id":1891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1982:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1975:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1987:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1975:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1895,"nodeType":"ExpressionStatement","src":"1975:15:12"},{"expression":{"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1896,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2000:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1898,"indexExpression":{"hexValue":"31","id":1897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2000:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2012:3:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2000:15:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1901,"nodeType":"ExpressionStatement","src":"2000:15:12"},{"body":{"id":1930,"nodeType":"Block","src":"2070:83:12","statements":[{"expression":{"id":1924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1916,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2084:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1918,"indexExpression":{"id":1917,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"2091:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2084:9:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1919,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"2096:8:12","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1923,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1920,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2105:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2113:3:12","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2105:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2096:21:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2084:33:12","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1925,"nodeType":"ExpressionStatement","src":"2084:33:12"},{"expression":{"id":1928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1926,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2131:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2141:1:12","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2131:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1929,"nodeType":"ExpressionStatement","src":"2131:11:12"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1910,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"2058:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2062:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2058:5:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1931,"initializationExpression":{"assignments":[1903],"declarations":[{"constant":false,"id":1903,"mutability":"mutable","name":"i","nameLocation":"2038:1:12","nodeType":"VariableDeclaration","scope":1931,"src":"2030:9:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1902,"name":"uint256","nodeType":"ElementaryTypeName","src":"2030:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1909,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2042:1:12","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1905,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"2046:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2042:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2055:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2042:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2030:26:12"},"loopExpression":{"expression":{"id":1914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2065:3:12","subExpression":{"id":1913,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1903,"src":"2067:1:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1915,"nodeType":"ExpressionStatement","src":"2065:3:12"},"nodeType":"ForStatement","src":"2025:128:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"2170:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2179:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2170:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2182:34:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1932,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2162:7:12","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2162:55:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1938,"nodeType":"ExpressionStatement","src":"2162:55:12"},{"expression":{"arguments":[{"id":1941,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"2241:6:12","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2234:6:12","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1939,"name":"string","nodeType":"ElementaryTypeName","src":"2234:6:12","typeDescriptions":{}}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2234:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1878,"id":1943,"nodeType":"Return","src":"2227:21:12"}]},"documentation":{"id":1870,"nodeType":"StructuredDocumentation","src":"1701:112:12","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1945,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1827:11:12","nodeType":"FunctionDefinition","parameters":{"id":1875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1872,"mutability":"mutable","name":"value","nameLocation":"1847:5:12","nodeType":"VariableDeclaration","scope":1945,"src":"1839:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1871,"name":"uint256","nodeType":"ElementaryTypeName","src":"1839:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1874,"mutability":"mutable","name":"length","nameLocation":"1862:6:12","nodeType":"VariableDeclaration","scope":1945,"src":"1854:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1873,"name":"uint256","nodeType":"ElementaryTypeName","src":"1854:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1838:31:12"},"returnParameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1945,"src":"1893:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1876,"name":"string","nodeType":"ElementaryTypeName","src":"1893:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1892:15:12"},"scope":1991,"src":"1818:437:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1964,"nodeType":"Block","src":"2480:76:12","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1958,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1948,"src":"2525:4:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1957,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2517:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1956,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:12","typeDescriptions":{}}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2517:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1955,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2509:7:12","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1954,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:12","typeDescriptions":{}}},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2509:22:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1961,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"2533:15:12","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1953,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1869,1945,1965],"referencedDeclaration":1945,"src":"2497:11:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2497:52:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1952,"id":1963,"nodeType":"Return","src":"2490:59:12"}]},"documentation":{"id":1946,"nodeType":"StructuredDocumentation","src":"2261:141:12","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1965,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2416:11:12","nodeType":"FunctionDefinition","parameters":{"id":1949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1948,"mutability":"mutable","name":"addr","nameLocation":"2436:4:12","nodeType":"VariableDeclaration","scope":1965,"src":"2428:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1947,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2427:14:12"},"returnParameters":{"id":1952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1951,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1965,"src":"2465:13:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1950,"name":"string","nodeType":"ElementaryTypeName","src":"2465:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2464:15:12"},"scope":1991,"src":"2407:149:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1989,"nodeType":"Block","src":"2711:66:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1978,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2744:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1977,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2738:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1976,"name":"bytes","nodeType":"ElementaryTypeName","src":"2738:5:12","typeDescriptions":{}}},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2738:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1975,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2728:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":1984,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"2767:1:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2761:5:12","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1982,"name":"bytes","nodeType":"ElementaryTypeName","src":"2761:5:12","typeDescriptions":{}}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2761:8:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1981,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2751:9:12","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:19:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2728:42:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1974,"id":1988,"nodeType":"Return","src":"2721:49:12"}]},"documentation":{"id":1966,"nodeType":"StructuredDocumentation","src":"2562:66:12","text":" @dev Returns true if the two strings are equal."},"id":1990,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"2642:5:12","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1968,"mutability":"mutable","name":"a","nameLocation":"2662:1:12","nodeType":"VariableDeclaration","scope":1990,"src":"2648:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1967,"name":"string","nodeType":"ElementaryTypeName","src":"2648:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"b","nameLocation":"2679:1:12","nodeType":"VariableDeclaration","scope":1990,"src":"2665:15:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1969,"name":"string","nodeType":"ElementaryTypeName","src":"2665:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2647:34:12"},"returnParameters":{"id":1974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1990,"src":"2705:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1972,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:12"},"scope":1991,"src":"2633:144:12","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1992,"src":"220:2559:12","usedErrors":[]}],"src":"101:2679:12"},"id":12},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2015],"IERC165":[2027]},"id":2016,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1993,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:13"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2016,"sourceUnit":2028,"src":"124:23:13","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1996,"name":"IERC165","nameLocations":["754:7:13"],"nodeType":"IdentifierPath","referencedDeclaration":2027,"src":"754:7:13"},"id":1997,"nodeType":"InheritanceSpecifier","src":"754:7:13"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1995,"nodeType":"StructuredDocumentation","src":"149:576:13","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2015,"linearizedBaseContracts":[2015,2027],"name":"ERC165","nameLocation":"744:6:13","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2026],"body":{"id":2013,"nodeType":"Block","src":"920:64:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"937:11:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2008,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2027,"src":"957:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2027_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2027_$","typeString":"type(contract IERC165)"}],"id":2007,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:13","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"952:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2027","typeString":"type(contract IERC165)"}},"id":2010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"966:11:13","memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2005,"id":2012,"nodeType":"Return","src":"930:47:13"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"768:56:13","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:13","nodeType":"FunctionDefinition","overrides":{"id":2002,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:13"},"parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:13","nodeType":"VariableDeclaration","scope":2014,"src":"856:18:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1999,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:13","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:13"},"returnParameters":{"id":2005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"914:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2003,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:13"},"scope":2015,"src":"829:155:13","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2016,"src":"726:260:13","usedErrors":[]}],"src":"99:888:13"},"id":13},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2027]},"id":2028,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2017,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2018,"nodeType":"StructuredDocumentation","src":"125:279:14","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2027,"linearizedBaseContracts":[2027],"name":"IERC165","nameLocation":"415:7:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2019,"nodeType":"StructuredDocumentation","src":"429:340:14","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2026,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:14","nodeType":"FunctionDefinition","parameters":{"id":2022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2021,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:14","nodeType":"VariableDeclaration","scope":2026,"src":"801:18:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2020,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:14","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:14"},"returnParameters":{"id":2025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2026,"src":"844:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2023,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:14"},"scope":2027,"src":"774:76:14","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2028,"src":"405:447:14","usedErrors":[]}],"src":"100:753:14"},"id":14},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2893]},"id":2894,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2029,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":2030,"nodeType":"StructuredDocumentation","src":"128:73:15","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2893,"linearizedBaseContracts":[2893],"name":"Math","nameLocation":"210:4:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":2034,"members":[{"id":2031,"name":"Down","nameLocation":"245:4:15","nodeType":"EnumValue","src":"245:4:15"},{"id":2032,"name":"Up","nameLocation":"287:2:15","nodeType":"EnumValue","src":"287:2:15"},{"id":2033,"name":"Zero","nameLocation":"318:4:15","nodeType":"EnumValue","src":"318:4:15"}],"name":"Rounding","nameLocation":"226:8:15","nodeType":"EnumDefinition","src":"221:122:15"},{"body":{"id":2051,"nodeType":"Block","src":"480:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2044,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"497:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2045,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"501:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2048,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2039,"src":"509:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:15","trueExpression":{"id":2047,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2037,"src":"505:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2043,"id":2050,"nodeType":"Return","src":"490:20:15"}]},"documentation":{"id":2035,"nodeType":"StructuredDocumentation","src":"349:59:15","text":" @dev Returns the largest of two numbers."},"id":2052,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:15","nodeType":"FunctionDefinition","parameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2037,"mutability":"mutable","name":"a","nameLocation":"434:1:15","nodeType":"VariableDeclaration","scope":2052,"src":"426:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2036,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2039,"mutability":"mutable","name":"b","nameLocation":"445:1:15","nodeType":"VariableDeclaration","scope":2052,"src":"437:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2038,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:15"},"returnParameters":{"id":2043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2042,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2052,"src":"471:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2041,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:15"},"scope":2893,"src":"413:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2069,"nodeType":"Block","src":"655:37:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2062,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"672:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2063,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"676:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2066,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2057,"src":"684:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:15","trueExpression":{"id":2065,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2055,"src":"680:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2061,"id":2068,"nodeType":"Return","src":"665:20:15"}]},"documentation":{"id":2053,"nodeType":"StructuredDocumentation","src":"523:60:15","text":" @dev Returns the smallest of two numbers."},"id":2070,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:15","nodeType":"FunctionDefinition","parameters":{"id":2058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2055,"mutability":"mutable","name":"a","nameLocation":"609:1:15","nodeType":"VariableDeclaration","scope":2070,"src":"601:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2054,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2057,"mutability":"mutable","name":"b","nameLocation":"620:1:15","nodeType":"VariableDeclaration","scope":2070,"src":"612:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2056,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:15"},"returnParameters":{"id":2061,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2060,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2070,"src":"646:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2059,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:15"},"scope":2893,"src":"588:104:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2092,"nodeType":"Block","src":"876:82:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2080,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"931:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2081,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"935:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2083,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2084,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"941:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2085,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2075,"src":"945:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2087,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":2088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2079,"id":2091,"nodeType":"Return","src":"923:28:15"}]},"documentation":{"id":2071,"nodeType":"StructuredDocumentation","src":"698:102:15","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":2093,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:15","nodeType":"FunctionDefinition","parameters":{"id":2076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2073,"mutability":"mutable","name":"a","nameLocation":"830:1:15","nodeType":"VariableDeclaration","scope":2093,"src":"822:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2072,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2075,"mutability":"mutable","name":"b","nameLocation":"841:1:15","nodeType":"VariableDeclaration","scope":2093,"src":"833:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2074,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:15"},"returnParameters":{"id":2079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2093,"src":"867:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2077,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:15"},"scope":2893,"src":"805:153:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2117,"nodeType":"Block","src":"1228:123:15","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1316:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2107,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2096,"src":"1330:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2110,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2111,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"1339:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:15","trueExpression":{"hexValue":"30","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2102,"id":2116,"nodeType":"Return","src":"1309:35:15"}]},"documentation":{"id":2094,"nodeType":"StructuredDocumentation","src":"964:188:15","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:15","nodeType":"FunctionDefinition","parameters":{"id":2099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2096,"mutability":"mutable","name":"a","nameLocation":"1182:1:15","nodeType":"VariableDeclaration","scope":2118,"src":"1174:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2095,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2098,"mutability":"mutable","name":"b","nameLocation":"1193:1:15","nodeType":"VariableDeclaration","scope":2118,"src":"1185:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2097,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:15"},"returnParameters":{"id":2102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2118,"src":"1219:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2100,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:15"},"scope":2893,"src":"1157:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2240,"nodeType":"Block","src":"1765:4115:15","statements":[{"id":2239,"nodeType":"UncheckedBlock","src":"1775:4099:15","statements":[{"assignments":[2131],"declarations":[{"constant":false,"id":2131,"mutability":"mutable","name":"prod0","nameLocation":"2104:5:15","nodeType":"VariableDeclaration","scope":2239,"src":"2096:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2130,"name":"uint256","nodeType":"ElementaryTypeName","src":"2096:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2132,"nodeType":"VariableDeclarationStatement","src":"2096:13:15"},{"assignments":[2134],"declarations":[{"constant":false,"id":2134,"mutability":"mutable","name":"prod1","nameLocation":"2176:5:15","nodeType":"VariableDeclaration","scope":2239,"src":"2168:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2133,"name":"uint256","nodeType":"ElementaryTypeName","src":"2168:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2135,"nodeType":"VariableDeclarationStatement","src":"2168:13:15"},{"AST":{"nodeType":"YulBlock","src":"2248:157:15","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:30:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2283:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2286:1:15"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2293:1:15","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2289:3:15"},"nodeType":"YulFunctionCall","src":"2289:6:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2276:6:15"},"nodeType":"YulFunctionCall","src":"2276:20:15"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2270:2:15","type":""}]},{"nodeType":"YulAssignment","src":"2313:18:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2326:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"2329:1:15"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2322:3:15"},"nodeType":"YulFunctionCall","src":"2322:9:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2313:5:15"}]},{"nodeType":"YulAssignment","src":"2348:43:15","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2365:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2369:5:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2361:3:15"},"nodeType":"YulFunctionCall","src":"2361:14:15"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2380:2:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"2384:5:15"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2377:2:15"},"nodeType":"YulFunctionCall","src":"2377:13:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2357:3:15"},"nodeType":"YulFunctionCall","src":"2357:34:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2348:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2131,"isOffset":false,"isSlot":false,"src":"2313:5:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"2369:5:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"2384:5:15","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"2348:5:15","valueSize":1},{"declaration":2121,"isOffset":false,"isSlot":false,"src":"2283:1:15","valueSize":1},{"declaration":2121,"isOffset":false,"isSlot":false,"src":"2326:1:15","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"2286:1:15","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"2329:1:15","valueSize":1}],"id":2136,"nodeType":"InlineAssembly","src":"2239:166:15"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2137,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"2486:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2495:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2486:10:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2145,"nodeType":"IfStatement","src":"2482:368:15","trueBody":{"id":2144,"nodeType":"Block","src":"2498:352:15","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"2816:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2141,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2824:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2816:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2129,"id":2143,"nodeType":"Return","src":"2809:26:15"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2147,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"2960:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2148,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"2974:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2960:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d6174683a206d756c446976206f766572666c6f77","id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2981:23:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""},"value":"Math: mulDiv overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851","typeString":"literal_string \"Math: mulDiv overflow\""}],"id":2146,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2952:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2952:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"ExpressionStatement","src":"2952:53:15"},{"assignments":[2154],"declarations":[{"constant":false,"id":2154,"mutability":"mutable","name":"remainder","nameLocation":"3269:9:15","nodeType":"VariableDeclaration","scope":2239,"src":"3261:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3261:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2155,"nodeType":"VariableDeclarationStatement","src":"3261:17:15"},{"AST":{"nodeType":"YulBlock","src":"3301:291:15","statements":[{"nodeType":"YulAssignment","src":"3370:38:15","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3390:1:15"},{"name":"y","nodeType":"YulIdentifier","src":"3393:1:15"},{"name":"denominator","nodeType":"YulIdentifier","src":"3396:11:15"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3383:6:15"},"nodeType":"YulFunctionCall","src":"3383:25:15"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3370:9:15"}]},{"nodeType":"YulAssignment","src":"3490:41:15","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3503:5:15"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3513:9:15"},{"name":"prod0","nodeType":"YulIdentifier","src":"3524:5:15"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3510:2:15"},"nodeType":"YulFunctionCall","src":"3510:20:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3499:3:15"},"nodeType":"YulFunctionCall","src":"3499:32:15"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3490:5:15"}]},{"nodeType":"YulAssignment","src":"3548:30:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3561:5:15"},{"name":"remainder","nodeType":"YulIdentifier","src":"3568:9:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3557:3:15"},"nodeType":"YulFunctionCall","src":"3557:21:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3548:5:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2125,"isOffset":false,"isSlot":false,"src":"3396:11:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"3524:5:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"3548:5:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"3561:5:15","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"3490:5:15","valueSize":1},{"declaration":2134,"isOffset":false,"isSlot":false,"src":"3503:5:15","valueSize":1},{"declaration":2154,"isOffset":false,"isSlot":false,"src":"3370:9:15","valueSize":1},{"declaration":2154,"isOffset":false,"isSlot":false,"src":"3513:9:15","valueSize":1},{"declaration":2154,"isOffset":false,"isSlot":false,"src":"3568:9:15","valueSize":1},{"declaration":2121,"isOffset":false,"isSlot":false,"src":"3390:1:15","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"3393:1:15","valueSize":1}],"id":2156,"nodeType":"InlineAssembly","src":"3292:300:15"},{"assignments":[2158],"declarations":[{"constant":false,"id":2158,"mutability":"mutable","name":"twos","nameLocation":"3907:4:15","nodeType":"VariableDeclaration","scope":2239,"src":"3899:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2157,"name":"uint256","nodeType":"ElementaryTypeName","src":"3899:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2166,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2159,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"3914:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3929:12:15","subExpression":{"id":2160,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"3930:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3929:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2164,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3928:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3914:32:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3899:47:15"},{"AST":{"nodeType":"YulBlock","src":"3969:362:15","statements":[{"nodeType":"YulAssignment","src":"4034:37:15","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"4053:11:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4066:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4049:3:15"},"nodeType":"YulFunctionCall","src":"4049:22:15"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"4034:11:15"}]},{"nodeType":"YulAssignment","src":"4138:25:15","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"4151:5:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4158:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4147:3:15"},"nodeType":"YulFunctionCall","src":"4147:16:15"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"4138:5:15"}]},{"nodeType":"YulAssignment","src":"4278:39:15","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4298:1:15","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4301:4:15"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4294:3:15"},"nodeType":"YulFunctionCall","src":"4294:12:15"},{"name":"twos","nodeType":"YulIdentifier","src":"4308:4:15"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4290:3:15"},"nodeType":"YulFunctionCall","src":"4290:23:15"},{"kind":"number","nodeType":"YulLiteral","src":"4315:1:15","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:15"},"nodeType":"YulFunctionCall","src":"4286:31:15"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"4278:4:15"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2125,"isOffset":false,"isSlot":false,"src":"4034:11:15","valueSize":1},{"declaration":2125,"isOffset":false,"isSlot":false,"src":"4053:11:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"4138:5:15","valueSize":1},{"declaration":2131,"isOffset":false,"isSlot":false,"src":"4151:5:15","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"4066:4:15","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"4158:4:15","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"4278:4:15","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"4301:4:15","valueSize":1},{"declaration":2158,"isOffset":false,"isSlot":false,"src":"4308:4:15","valueSize":1}],"id":2167,"nodeType":"InlineAssembly","src":"3960:371:15"},{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2168,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"4397:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2169,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2134,"src":"4406:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2170,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2158,"src":"4414:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4406:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4397:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ExpressionStatement","src":"4397:21:15"},{"assignments":[2175],"declarations":[{"constant":false,"id":2175,"mutability":"mutable","name":"inverse","nameLocation":"4744:7:15","nodeType":"VariableDeclaration","scope":2239,"src":"4736:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2174,"name":"uint256","nodeType":"ElementaryTypeName","src":"4736:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2182,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":2176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4755:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2177,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"4759:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4755:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4754:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4774:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4754:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4736:39:15"},{"expression":{"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2183,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"4992:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5003:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2185,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5007:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2186,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5021:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5007:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5003:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4992:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2190,"nodeType":"ExpressionStatement","src":"4992:36:15"},{"expression":{"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2191,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5061:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5072:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2193,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5076:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2194,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5090:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5076:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5072:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5061:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2198,"nodeType":"ExpressionStatement","src":"5061:36:15"},{"expression":{"id":2205,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2199,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5131:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5142:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5146:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2202,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5160:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5142:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5131:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2206,"nodeType":"ExpressionStatement","src":"5131:36:15"},{"expression":{"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2207,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5201:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2209,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5216:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2210,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5230:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5216:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5212:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5201:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2214,"nodeType":"ExpressionStatement","src":"5201:36:15"},{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2215,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5282:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2217,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5286:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2218,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5300:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5286:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5282:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5271:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"5271:36:15"},{"expression":{"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2223,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5342:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5353:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2225,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2125,"src":"5357:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2226,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5371:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5357:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5353:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5342:36:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2230,"nodeType":"ExpressionStatement","src":"5342:36:15"},{"expression":{"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2231,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"5812:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2232,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2131,"src":"5821:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2233,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"5829:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5821:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5812:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2236,"nodeType":"ExpressionStatement","src":"5812:24:15"},{"expression":{"id":2237,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2128,"src":"5857:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2129,"id":2238,"nodeType":"Return","src":"5850:13:15"}]}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"1357:305:15","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":2241,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:15","nodeType":"FunctionDefinition","parameters":{"id":2126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"x","nameLocation":"1691:1:15","nodeType":"VariableDeclaration","scope":2241,"src":"1683:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1683:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"y","nameLocation":"1702:1:15","nodeType":"VariableDeclaration","scope":2241,"src":"1694:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1694:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2125,"mutability":"mutable","name":"denominator","nameLocation":"1713:11:15","nodeType":"VariableDeclaration","scope":2241,"src":"1705:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2124,"name":"uint256","nodeType":"ElementaryTypeName","src":"1705:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:43:15"},"returnParameters":{"id":2129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2128,"mutability":"mutable","name":"result","nameLocation":"1757:6:15","nodeType":"VariableDeclaration","scope":2241,"src":"1749:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1748:16:15"},"scope":2893,"src":"1667:4213:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2284,"nodeType":"Block","src":"6122:189:15","statements":[{"assignments":[2257],"declarations":[{"constant":false,"id":2257,"mutability":"mutable","name":"result","nameLocation":"6140:6:15","nodeType":"VariableDeclaration","scope":2284,"src":"6132:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2256,"name":"uint256","nodeType":"ElementaryTypeName","src":"6132:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2263,"initialValue":{"arguments":[{"id":2259,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6156:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2260,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"6159:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2261,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"6162:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2258,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[2241,2285],"referencedDeclaration":2241,"src":"6149:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6149:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6132:42:15"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"id":2267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2264,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"6188:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2265,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"6200:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2034_$","typeString":"type(enum Math.Rounding)"}},"id":2266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6209:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"6200:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"src":"6188:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2269,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2244,"src":"6222:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2270,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2246,"src":"6225:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2271,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"6228:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2268,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"6215:6:15","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6215:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6215:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6188:56:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2281,"nodeType":"IfStatement","src":"6184:98:15","trueBody":{"id":2280,"nodeType":"Block","src":"6246:36:15","statements":[{"expression":{"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2276,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6260:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6270:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6260:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2279,"nodeType":"ExpressionStatement","src":"6260:11:15"}]}},{"expression":{"id":2282,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"6298:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2255,"id":2283,"nodeType":"Return","src":"6291:13:15"}]},"documentation":{"id":2242,"nodeType":"StructuredDocumentation","src":"5886:121:15","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":2285,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"6021:6:15","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2244,"mutability":"mutable","name":"x","nameLocation":"6036:1:15","nodeType":"VariableDeclaration","scope":2285,"src":"6028:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2243,"name":"uint256","nodeType":"ElementaryTypeName","src":"6028:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2246,"mutability":"mutable","name":"y","nameLocation":"6047:1:15","nodeType":"VariableDeclaration","scope":2285,"src":"6039:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2245,"name":"uint256","nodeType":"ElementaryTypeName","src":"6039:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2248,"mutability":"mutable","name":"denominator","nameLocation":"6058:11:15","nodeType":"VariableDeclaration","scope":2285,"src":"6050:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2247,"name":"uint256","nodeType":"ElementaryTypeName","src":"6050:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"rounding","nameLocation":"6080:8:15","nodeType":"VariableDeclaration","scope":2285,"src":"6071:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"typeName":{"id":2250,"nodeType":"UserDefinedTypeName","pathNode":{"id":2249,"name":"Rounding","nameLocations":["6071:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"6071:8:15"},"referencedDeclaration":2034,"src":"6071:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"6027:62:15"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2285,"src":"6113:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2253,"name":"uint256","nodeType":"ElementaryTypeName","src":"6113:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6112:9:15"},"scope":2893,"src":"6012:299:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2396,"nodeType":"Block","src":"6587:1585:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2293,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"6601:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6606:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6601:6:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2299,"nodeType":"IfStatement","src":"6597:45:15","trueBody":{"id":2298,"nodeType":"Block","src":"6609:33:15","statements":[{"expression":{"hexValue":"30","id":2296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6630:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":2292,"id":2297,"nodeType":"Return","src":"6623:8:15"}]}},{"assignments":[2301],"declarations":[{"constant":false,"id":2301,"mutability":"mutable","name":"result","nameLocation":"7329:6:15","nodeType":"VariableDeclaration","scope":2396,"src":"7321:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2310,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7338:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2304,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"7349:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2303,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2565,2601],"referencedDeclaration":2565,"src":"7344:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7344:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7355:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7344:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2308,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7343:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7338:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7321:36:15"},{"id":2395,"nodeType":"UncheckedBlock","src":"7758:408:15","statements":[{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2311,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7782:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7792:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2313,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"7801:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7805:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7801:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7792:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2317,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7791:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7816:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7791:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7782:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2321,"nodeType":"ExpressionStatement","src":"7782:35:15"},{"expression":{"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2322,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7831:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2323,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7841:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2324,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"7850:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2325,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7854:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7841:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2328,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7840:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7865:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7840:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7831:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2332,"nodeType":"ExpressionStatement","src":"7831:35:15"},{"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2333,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7880:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2334,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7890:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"7899:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7903:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7899:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7890:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7889:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7914:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7889:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7880:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2343,"nodeType":"ExpressionStatement","src":"7880:35:15"},{"expression":{"id":2353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2344,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7929:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2345,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7939:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2346,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"7948:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2347,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7952:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7939:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2350,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7938:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7963:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7938:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7929:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2354,"nodeType":"ExpressionStatement","src":"7929:35:15"},{"expression":{"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2355,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7978:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2356,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"7988:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2357,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"7997:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2358,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8001:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7997:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7988:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2361,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7987:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8012:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7987:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7978:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2365,"nodeType":"ExpressionStatement","src":"7978:35:15"},{"expression":{"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2366,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8027:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2367,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8037:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2368,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8046:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2369,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8050:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8046:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8037:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8036:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8061:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8036:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8027:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2376,"nodeType":"ExpressionStatement","src":"8027:35:15"},{"expression":{"id":2386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2377,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8076:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2378,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8086:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2379,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8095:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2380,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8099:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8095:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8086:19:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2383,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8085:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8110:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"8085:26:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8076:35:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2387,"nodeType":"ExpressionStatement","src":"8076:35:15"},{"expression":{"arguments":[{"id":2389,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8136:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2390,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"8144:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2391,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"8148:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8144:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2388,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2070,"src":"8132:3:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8132:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2292,"id":2394,"nodeType":"Return","src":"8125:30:15"}]}]},"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"6317:208:15","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":2397,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6539:4:15","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"a","nameLocation":"6552:1:15","nodeType":"VariableDeclaration","scope":2397,"src":"6544:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"6544:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6543:11:15"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2397,"src":"6578:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2290,"name":"uint256","nodeType":"ElementaryTypeName","src":"6578:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6577:9:15"},"scope":2893,"src":"6530:1642:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2432,"nodeType":"Block","src":"8348:161:15","statements":[{"id":2431,"nodeType":"UncheckedBlock","src":"8358:145:15","statements":[{"assignments":[2409],"declarations":[{"constant":false,"id":2409,"mutability":"mutable","name":"result","nameLocation":"8390:6:15","nodeType":"VariableDeclaration","scope":2431,"src":"8382:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2408,"name":"uint256","nodeType":"ElementaryTypeName","src":"8382:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2413,"initialValue":{"arguments":[{"id":2411,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8404:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2410,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[2397,2433],"referencedDeclaration":2397,"src":"8399:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8399:7:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8382:24:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2414,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8427:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2403,"src":"8437:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2416,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"8449:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2034_$","typeString":"type(enum Math.Rounding)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8458:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"8449:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"src":"8437:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2419,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8464:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2420,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2409,"src":"8473:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:15:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2400,"src":"8482:1:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8464:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8437:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2426,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8490:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8437:54:15","trueExpression":{"hexValue":"31","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8486:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2428,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8436:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8427:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2407,"id":2430,"nodeType":"Return","src":"8420:72:15"}]}]},"documentation":{"id":2398,"nodeType":"StructuredDocumentation","src":"8178:89:15","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":2433,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8281:4:15","nodeType":"FunctionDefinition","parameters":{"id":2404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2400,"mutability":"mutable","name":"a","nameLocation":"8294:1:15","nodeType":"VariableDeclaration","scope":2433,"src":"8286:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2399,"name":"uint256","nodeType":"ElementaryTypeName","src":"8286:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2403,"mutability":"mutable","name":"rounding","nameLocation":"8306:8:15","nodeType":"VariableDeclaration","scope":2433,"src":"8297:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"typeName":{"id":2402,"nodeType":"UserDefinedTypeName","pathNode":{"id":2401,"name":"Rounding","nameLocations":["8297:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"8297:8:15"},"referencedDeclaration":2034,"src":"8297:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8285:30:15"},"returnParameters":{"id":2407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2433,"src":"8339:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2405,"name":"uint256","nodeType":"ElementaryTypeName","src":"8339:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8338:9:15"},"scope":2893,"src":"8272:237:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"8694:922:15","statements":[{"assignments":[2442],"declarations":[{"constant":false,"id":2442,"mutability":"mutable","name":"result","nameLocation":"8712:6:15","nodeType":"VariableDeclaration","scope":2564,"src":"8704:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2441,"name":"uint256","nodeType":"ElementaryTypeName","src":"8704:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2444,"initialValue":{"hexValue":"30","id":2443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8721:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8704:18:15"},{"id":2561,"nodeType":"UncheckedBlock","src":"8732:855:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8760:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8769:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8760:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8775:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8760:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2459,"nodeType":"IfStatement","src":"8756:99:15","trueBody":{"id":2458,"nodeType":"Block","src":"8778:77:15","statements":[{"expression":{"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8796:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8796:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2453,"nodeType":"ExpressionStatement","src":"8796:13:15"},{"expression":{"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2454,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8827:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":2455,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8837:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8827:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2457,"nodeType":"ExpressionStatement","src":"8827:13:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2460,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8872:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8881:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8872:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2463,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8886:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8872:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2474,"nodeType":"IfStatement","src":"8868:96:15","trueBody":{"id":2473,"nodeType":"Block","src":"8889:75:15","statements":[{"expression":{"id":2467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8907:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8917:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8907:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2468,"nodeType":"ExpressionStatement","src":"8907:12:15"},{"expression":{"id":2471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2469,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"8937:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8947:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8937:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2472,"nodeType":"ExpressionStatement","src":"8937:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"8981:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8990:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8981:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8995:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8981:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2489,"nodeType":"IfStatement","src":"8977:96:15","trueBody":{"id":2488,"nodeType":"Block","src":"8998:75:15","statements":[{"expression":{"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9016:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9026:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9016:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2483,"nodeType":"ExpressionStatement","src":"9016:12:15"},{"expression":{"id":2486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2484,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9046:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9056:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"9046:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2487,"nodeType":"ExpressionStatement","src":"9046:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9090:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2491,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9090:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9104:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9090:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2504,"nodeType":"IfStatement","src":"9086:96:15","trueBody":{"id":2503,"nodeType":"Block","src":"9107:75:15","statements":[{"expression":{"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9125:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9135:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9125:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2498,"nodeType":"ExpressionStatement","src":"9125:12:15"},{"expression":{"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2499,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9155:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9165:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"9155:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2502,"nodeType":"ExpressionStatement","src":"9155:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2505,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9199:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9208:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9199:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9212:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9199:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2519,"nodeType":"IfStatement","src":"9195:93:15","trueBody":{"id":2518,"nodeType":"Block","src":"9215:73:15","statements":[{"expression":{"id":2512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9233:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9243:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9233:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2513,"nodeType":"ExpressionStatement","src":"9233:11:15"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2514,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9262:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2515,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9272:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9262:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2517,"nodeType":"ExpressionStatement","src":"9262:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2524,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2520,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9305:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":2521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9314:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9305:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9318:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9305:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"9301:93:15","trueBody":{"id":2533,"nodeType":"Block","src":"9321:73:15","statements":[{"expression":{"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2525,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9339:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9349:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9339:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2528,"nodeType":"ExpressionStatement","src":"9339:11:15"},{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2529,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9368:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9378:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9368:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2532,"nodeType":"ExpressionStatement","src":"9368:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9411:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9420:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9411:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9411:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2549,"nodeType":"IfStatement","src":"9407:93:15","trueBody":{"id":2548,"nodeType":"Block","src":"9427:73:15","statements":[{"expression":{"id":2542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2540,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9445:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":2541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9455:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9445:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2543,"nodeType":"ExpressionStatement","src":"9445:11:15"},{"expression":{"id":2546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2544,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9474:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9484:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9474:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2547,"nodeType":"ExpressionStatement","src":"9474:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2436,"src":"9517:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9526:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9517:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9530:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9517:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2560,"nodeType":"IfStatement","src":"9513:64:15","trueBody":{"id":2559,"nodeType":"Block","src":"9533:44:15","statements":[{"expression":{"id":2557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2555,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9551:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9561:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9551:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2558,"nodeType":"ExpressionStatement","src":"9551:11:15"}]}}]},{"expression":{"id":2562,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"9603:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2440,"id":2563,"nodeType":"Return","src":"9596:13:15"}]},"documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"8515:113:15","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8642:4:15","nodeType":"FunctionDefinition","parameters":{"id":2437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2436,"mutability":"mutable","name":"value","nameLocation":"8655:5:15","nodeType":"VariableDeclaration","scope":2565,"src":"8647:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2435,"name":"uint256","nodeType":"ElementaryTypeName","src":"8647:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8646:15:15"},"returnParameters":{"id":2440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"8685:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2438,"name":"uint256","nodeType":"ElementaryTypeName","src":"8685:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8684:9:15"},"scope":2893,"src":"8633:983:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2600,"nodeType":"Block","src":"9849:165:15","statements":[{"id":2599,"nodeType":"UncheckedBlock","src":"9859:149:15","statements":[{"assignments":[2577],"declarations":[{"constant":false,"id":2577,"mutability":"mutable","name":"result","nameLocation":"9891:6:15","nodeType":"VariableDeclaration","scope":2599,"src":"9883:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"9883:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2581,"initialValue":{"arguments":[{"id":2579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9905:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2578,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[2565,2601],"referencedDeclaration":2565,"src":"9900:4:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9900:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9883:28:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2582,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9932:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"id":2586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2583,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2571,"src":"9942:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2584,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"9954:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2034_$","typeString":"type(enum Math.Rounding)"}},"id":2585,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9963:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"9954:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"src":"9942:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":2588,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2577,"src":"9974:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"9983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9969:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9942:46:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2594,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9995:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2595,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9942:54:15","trueExpression":{"hexValue":"31","id":2593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9991:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2596,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9941:56:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9932:65:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2575,"id":2598,"nodeType":"Return","src":"9925:72:15"}]}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"9622:142:15","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2601,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9778:4:15","nodeType":"FunctionDefinition","parameters":{"id":2572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"value","nameLocation":"9791:5:15","nodeType":"VariableDeclaration","scope":2601,"src":"9783:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"9783:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2571,"mutability":"mutable","name":"rounding","nameLocation":"9807:8:15","nodeType":"VariableDeclaration","scope":2601,"src":"9798:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"typeName":{"id":2570,"nodeType":"UserDefinedTypeName","pathNode":{"id":2569,"name":"Rounding","nameLocations":["9798:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"9798:8:15"},"referencedDeclaration":2034,"src":"9798:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9782:34:15"},"returnParameters":{"id":2575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2601,"src":"9840:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2573,"name":"uint256","nodeType":"ElementaryTypeName","src":"9840:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9839:9:15"},"scope":2893,"src":"9769:245:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2729,"nodeType":"Block","src":"10201:854:15","statements":[{"assignments":[2610],"declarations":[{"constant":false,"id":2610,"mutability":"mutable","name":"result","nameLocation":"10219:6:15","nodeType":"VariableDeclaration","scope":2729,"src":"10211:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2609,"name":"uint256","nodeType":"ElementaryTypeName","src":"10211:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2612,"initialValue":{"hexValue":"30","id":2611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10228:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10211:18:15"},{"id":2726,"nodeType":"UncheckedBlock","src":"10239:787:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2613,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10267:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2615,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10282:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10276:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10267:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2629,"nodeType":"IfStatement","src":"10263:103:15","trueBody":{"id":2628,"nodeType":"Block","src":"10286:80:15","statements":[{"expression":{"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2618,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10304:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2619,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10313:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10313:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10304:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2623,"nodeType":"ExpressionStatement","src":"10304:17:15"},{"expression":{"id":2626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2624,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10339:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10349:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10339:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2627,"nodeType":"ExpressionStatement","src":"10339:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2630,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10383:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10392:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10398:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10392:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10383:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2646,"nodeType":"IfStatement","src":"10379:103:15","trueBody":{"id":2645,"nodeType":"Block","src":"10402:80:15","statements":[{"expression":{"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10420:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10435:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10429:8:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10420:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2640,"nodeType":"ExpressionStatement","src":"10420:17:15"},{"expression":{"id":2643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2641,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10455:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10465:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10455:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2644,"nodeType":"ExpressionStatement","src":"10455:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10499:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10508:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10514:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10508:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10499:17:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2663,"nodeType":"IfStatement","src":"10495:103:15","trueBody":{"id":2662,"nodeType":"Block","src":"10518:80:15","statements":[{"expression":{"id":2656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10536:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2655,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10545:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10551:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10545:8:15","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10536:17:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2657,"nodeType":"ExpressionStatement","src":"10536:17:15"},{"expression":{"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2658,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10571:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10581:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10571:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2661,"nodeType":"ExpressionStatement","src":"10571:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10615:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10630:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10624:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10615:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2680,"nodeType":"IfStatement","src":"10611:100:15","trueBody":{"id":2679,"nodeType":"Block","src":"10633:78:15","statements":[{"expression":{"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10651:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2672,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10660:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10666:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10660:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10651:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2674,"nodeType":"ExpressionStatement","src":"10651:16:15"},{"expression":{"id":2677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2675,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10685:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10695:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10685:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2678,"nodeType":"ExpressionStatement","src":"10685:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2681,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10728:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2682,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10737:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10743:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10737:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10728:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2697,"nodeType":"IfStatement","src":"10724:100:15","trueBody":{"id":2696,"nodeType":"Block","src":"10746:78:15","statements":[{"expression":{"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2686,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10764:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2689,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10773:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10779:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10773:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10764:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2691,"nodeType":"ExpressionStatement","src":"10764:16:15"},{"expression":{"id":2694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2692,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10798:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10808:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10798:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2695,"nodeType":"ExpressionStatement","src":"10798:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10841:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2701,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10850:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10856:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10850:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10841:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2714,"nodeType":"IfStatement","src":"10837:100:15","trueBody":{"id":2713,"nodeType":"Block","src":"10859:78:15","statements":[{"expression":{"id":2707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10877:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10886:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10892:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10886:7:15","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10877:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2708,"nodeType":"ExpressionStatement","src":"10877:16:15"},{"expression":{"id":2711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2709,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10911:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10921:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10911:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2712,"nodeType":"ExpressionStatement","src":"10911:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2604,"src":"10954:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10963:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10969:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10963:7:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10954:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2725,"nodeType":"IfStatement","src":"10950:66:15","trueBody":{"id":2724,"nodeType":"Block","src":"10972:44:15","statements":[{"expression":{"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2720,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"10990:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11000:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10990:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2723,"nodeType":"ExpressionStatement","src":"10990:11:15"}]}}]},{"expression":{"id":2727,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"11042:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2608,"id":2728,"nodeType":"Return","src":"11035:13:15"}]},"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"10020:114:15","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2730,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10148:5:15","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"value","nameLocation":"10162:5:15","nodeType":"VariableDeclaration","scope":2730,"src":"10154:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2603,"name":"uint256","nodeType":"ElementaryTypeName","src":"10154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10153:15:15"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2730,"src":"10192:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"10192:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10191:9:15"},"scope":2893,"src":"10139:916:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2765,"nodeType":"Block","src":"11290:167:15","statements":[{"id":2764,"nodeType":"UncheckedBlock","src":"11300:151:15","statements":[{"assignments":[2742],"declarations":[{"constant":false,"id":2742,"mutability":"mutable","name":"result","nameLocation":"11332:6:15","nodeType":"VariableDeclaration","scope":2764,"src":"11324:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"11324:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2746,"initialValue":{"arguments":[{"id":2744,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"11347:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2743,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2730,2766],"referencedDeclaration":2730,"src":"11341:5:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11324:29:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2747,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"11374:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"id":2751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2748,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2736,"src":"11384:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2749,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"11396:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2034_$","typeString":"type(enum Math.Rounding)"}},"id":2750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11405:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"11396:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"src":"11384:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2752,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11411:2:15","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2753,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"11417:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2755,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"11426:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11411:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11384:47:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11438:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11384:55:15","trueExpression":{"hexValue":"31","id":2758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11434:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11383:57:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11374:66:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2740,"id":2763,"nodeType":"Return","src":"11367:73:15"}]}]},"documentation":{"id":2731,"nodeType":"StructuredDocumentation","src":"11061:143:15","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2766,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"11218:5:15","nodeType":"FunctionDefinition","parameters":{"id":2737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2733,"mutability":"mutable","name":"value","nameLocation":"11232:5:15","nodeType":"VariableDeclaration","scope":2766,"src":"11224:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2732,"name":"uint256","nodeType":"ElementaryTypeName","src":"11224:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"rounding","nameLocation":"11248:8:15","nodeType":"VariableDeclaration","scope":2766,"src":"11239:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"typeName":{"id":2735,"nodeType":"UserDefinedTypeName","pathNode":{"id":2734,"name":"Rounding","nameLocations":["11239:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"11239:8:15"},"referencedDeclaration":2034,"src":"11239:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11223:34:15"},"returnParameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2739,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2766,"src":"11281:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"11281:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11280:9:15"},"scope":2893,"src":"11209:248:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2852,"nodeType":"Block","src":"11771:600:15","statements":[{"assignments":[2775],"declarations":[{"constant":false,"id":2775,"mutability":"mutable","name":"result","nameLocation":"11789:6:15","nodeType":"VariableDeclaration","scope":2852,"src":"11781:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2774,"name":"uint256","nodeType":"ElementaryTypeName","src":"11781:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2777,"initialValue":{"hexValue":"30","id":2776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11798:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11781:18:15"},{"id":2849,"nodeType":"UncheckedBlock","src":"11809:533:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11837:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2779,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11846:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11837:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11852:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11837:16:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2792,"nodeType":"IfStatement","src":"11833:98:15","trueBody":{"id":2791,"nodeType":"Block","src":"11855:76:15","statements":[{"expression":{"id":2785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2783,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11873:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11883:3:15","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11873:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"nodeType":"ExpressionStatement","src":"11873:13:15"},{"expression":{"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"11904:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11914:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11904:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ExpressionStatement","src":"11904:12:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2793,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11948:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11957:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11948:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11962:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11948:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2807,"nodeType":"IfStatement","src":"11944:95:15","trueBody":{"id":2806,"nodeType":"Block","src":"11965:74:15","statements":[{"expression":{"id":2800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"11983:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11993:2:15","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11983:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2801,"nodeType":"ExpressionStatement","src":"11983:12:15"},{"expression":{"id":2804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2802,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"12013:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12023:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12013:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2805,"nodeType":"ExpressionStatement","src":"12013:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2808,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"12056:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12065:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12056:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12070:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12056:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2822,"nodeType":"IfStatement","src":"12052:95:15","trueBody":{"id":2821,"nodeType":"Block","src":"12073:74:15","statements":[{"expression":{"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2813,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"12091:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2814,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12101:2:15","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"12091:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2816,"nodeType":"ExpressionStatement","src":"12091:12:15"},{"expression":{"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2817,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"12121:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12131:1:15","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"12121:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2820,"nodeType":"ExpressionStatement","src":"12121:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2823,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"12164:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2824,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12173:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12164:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12178:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12164:15:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2837,"nodeType":"IfStatement","src":"12160:95:15","trueBody":{"id":2836,"nodeType":"Block","src":"12181:74:15","statements":[{"expression":{"id":2830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2828,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"12199:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12209:2:15","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"12199:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2831,"nodeType":"ExpressionStatement","src":"12199:12:15"},{"expression":{"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"12229:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12239:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12229:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2835,"nodeType":"ExpressionStatement","src":"12229:11:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2769,"src":"12272:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12281:1:15","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12272:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2841,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12285:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12272:14:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2848,"nodeType":"IfStatement","src":"12268:64:15","trueBody":{"id":2847,"nodeType":"Block","src":"12288:44:15","statements":[{"expression":{"id":2845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2843,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"12306:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12316:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12306:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2846,"nodeType":"ExpressionStatement","src":"12306:11:15"}]}}]},{"expression":{"id":2850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"12358:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2773,"id":2851,"nodeType":"Return","src":"12351:13:15"}]},"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"11463:240:15","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2853,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11717:6:15","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"value","nameLocation":"11732:5:15","nodeType":"VariableDeclaration","scope":2853,"src":"11724:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2768,"name":"uint256","nodeType":"ElementaryTypeName","src":"11724:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11723:15:15"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2853,"src":"11762:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"11762:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11761:9:15"},"scope":2893,"src":"11708:663:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2891,"nodeType":"Block","src":"12608:174:15","statements":[{"id":2890,"nodeType":"UncheckedBlock","src":"12618:158:15","statements":[{"assignments":[2865],"declarations":[{"constant":false,"id":2865,"mutability":"mutable","name":"result","nameLocation":"12650:6:15","nodeType":"VariableDeclaration","scope":2890,"src":"12642:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2864,"name":"uint256","nodeType":"ElementaryTypeName","src":"12642:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2869,"initialValue":{"arguments":[{"id":2867,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12666:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2866,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2853,2892],"referencedDeclaration":2853,"src":"12659:6:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12659:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12642:30:15"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2870,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"12693:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2871,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"12703:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2872,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"12715:8:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$2034_$","typeString":"type(enum Math.Rounding)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12724:2:15","memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":2032,"src":"12715:11:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"src":"12703:23:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2875,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12730:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2876,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"12736:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":2877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12746:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"12736:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2879,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12735:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2881,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12751:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12730:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12703:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12703:61:15","trueExpression":{"hexValue":"31","id":2884,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12759:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2887,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12702:63:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12693:72:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2863,"id":2889,"nodeType":"Return","src":"12686:79:15"}]}]},"documentation":{"id":2854,"nodeType":"StructuredDocumentation","src":"12377:144:15","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2892,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12535:6:15","nodeType":"FunctionDefinition","parameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2856,"mutability":"mutable","name":"value","nameLocation":"12550:5:15","nodeType":"VariableDeclaration","scope":2892,"src":"12542:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12542:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2859,"mutability":"mutable","name":"rounding","nameLocation":"12566:8:15","nodeType":"VariableDeclaration","scope":2892,"src":"12557:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"},"typeName":{"id":2858,"nodeType":"UserDefinedTypeName","pathNode":{"id":2857,"name":"Rounding","nameLocations":["12557:8:15"],"nodeType":"IdentifierPath","referencedDeclaration":2034,"src":"12557:8:15"},"referencedDeclaration":2034,"src":"12557:8:15","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$2034","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12541:34:15"},"returnParameters":{"id":2863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2862,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2892,"src":"12599:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"12599:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12598:9:15"},"scope":2893,"src":"12526:256:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2894,"src":"202:12582:15","usedErrors":[]}],"src":"103:12682:15"},"id":15},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SignedMath":[2998]},"id":2999,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2895,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"109:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2896,"nodeType":"StructuredDocumentation","src":"134:80:16","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2998,"linearizedBaseContracts":[2998],"name":"SignedMath","nameLocation":"223:10:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":2913,"nodeType":"Block","src":"375:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"392:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2907,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"396:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"392:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2910,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2901,"src":"404:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"392:13:16","trueExpression":{"id":2909,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2899,"src":"400:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2905,"id":2912,"nodeType":"Return","src":"385:20:16"}]},"documentation":{"id":2897,"nodeType":"StructuredDocumentation","src":"240:66:16","text":" @dev Returns the largest of two signed numbers."},"id":2914,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"320:3:16","nodeType":"FunctionDefinition","parameters":{"id":2902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2899,"mutability":"mutable","name":"a","nameLocation":"331:1:16","nodeType":"VariableDeclaration","scope":2914,"src":"324:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2898,"name":"int256","nodeType":"ElementaryTypeName","src":"324:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2901,"mutability":"mutable","name":"b","nameLocation":"341:1:16","nodeType":"VariableDeclaration","scope":2914,"src":"334:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2900,"name":"int256","nodeType":"ElementaryTypeName","src":"334:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"323:20:16"},"returnParameters":{"id":2905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2904,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2914,"src":"367:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2903,"name":"int256","nodeType":"ElementaryTypeName","src":"367:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"366:8:16"},"scope":2998,"src":"311:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2931,"nodeType":"Block","src":"554:37:16","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2924,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"571:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2925,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"575:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"571:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2928,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"583:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"571:13:16","trueExpression":{"id":2927,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2917,"src":"579:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2923,"id":2930,"nodeType":"Return","src":"564:20:16"}]},"documentation":{"id":2915,"nodeType":"StructuredDocumentation","src":"418:67:16","text":" @dev Returns the smallest of two signed numbers."},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"499:3:16","nodeType":"FunctionDefinition","parameters":{"id":2920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2917,"mutability":"mutable","name":"a","nameLocation":"510:1:16","nodeType":"VariableDeclaration","scope":2932,"src":"503:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2916,"name":"int256","nodeType":"ElementaryTypeName","src":"503:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2919,"mutability":"mutable","name":"b","nameLocation":"520:1:16","nodeType":"VariableDeclaration","scope":2932,"src":"513:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2918,"name":"int256","nodeType":"ElementaryTypeName","src":"513:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"502:20:16"},"returnParameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2932,"src":"546:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2921,"name":"int256","nodeType":"ElementaryTypeName","src":"546:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"545:8:16"},"scope":2998,"src":"490:101:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2975,"nodeType":"Block","src":"796:162:16","statements":[{"assignments":[2943],"declarations":[{"constant":false,"id":2943,"mutability":"mutable","name":"x","nameLocation":"865:1:16","nodeType":"VariableDeclaration","scope":2975,"src":"858:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2942,"name":"int256","nodeType":"ElementaryTypeName","src":"858:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2956,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2944,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"870:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":2945,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"874:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"870:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"869:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"881:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2949,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"885:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"881:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2951,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"880:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":2952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"891:1:16","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"880:12:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2954,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"879:14:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"869:24:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"858:35:16"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2957,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"910:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2971,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2962,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2943,"src":"930:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"922:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2960,"name":"uint256","nodeType":"ElementaryTypeName","src":"922:7:16","typeDescriptions":{}}},"id":2963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"922:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2964,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"936:3:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"922:17:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2959,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"915:6:16","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2958,"name":"int256","nodeType":"ElementaryTypeName","src":"915:6:16","typeDescriptions":{}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"915:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2967,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2935,"src":"944:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":2968,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2937,"src":"948:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"944:5:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2970,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"943:7:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"915:35:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2972,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"914:37:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"910:41:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":2941,"id":2974,"nodeType":"Return","src":"903:48:16"}]},"documentation":{"id":2933,"nodeType":"StructuredDocumentation","src":"597:126:16","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":2976,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"737:7:16","nodeType":"FunctionDefinition","parameters":{"id":2938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"a","nameLocation":"752:1:16","nodeType":"VariableDeclaration","scope":2976,"src":"745:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2934,"name":"int256","nodeType":"ElementaryTypeName","src":"745:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":2937,"mutability":"mutable","name":"b","nameLocation":"762:1:16","nodeType":"VariableDeclaration","scope":2976,"src":"755:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2936,"name":"int256","nodeType":"ElementaryTypeName","src":"755:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"744:20:16"},"returnParameters":{"id":2941,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2976,"src":"788:6:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2939,"name":"int256","nodeType":"ElementaryTypeName","src":"788:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"787:8:16"},"scope":2998,"src":"728:230:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2996,"nodeType":"Block","src":"1102:158:16","statements":[{"id":2995,"nodeType":"UncheckedBlock","src":"1112:142:16","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2986,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"1227:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":2987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1227:6:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1240:2:16","subExpression":{"id":2990,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"1241:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1227:15:16","trueExpression":{"id":2989,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2979,"src":"1236:1:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2985,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1219:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2984,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:16","typeDescriptions":{}}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1219:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2983,"id":2994,"nodeType":"Return","src":"1212:31:16"}]}]},"documentation":{"id":2977,"nodeType":"StructuredDocumentation","src":"964:78:16","text":" @dev Returns the absolute unsigned value of a signed value."},"id":2997,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1056:3:16","nodeType":"FunctionDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2979,"mutability":"mutable","name":"n","nameLocation":"1067:1:16","nodeType":"VariableDeclaration","scope":2997,"src":"1060:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2978,"name":"int256","nodeType":"ElementaryTypeName","src":"1060:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1059:10:16"},"returnParameters":{"id":2983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2982,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2997,"src":"1093:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2981,"name":"uint256","nodeType":"ElementaryTypeName","src":"1093:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1092:9:16"},"scope":2998,"src":"1047:213:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2999,"src":"215:1047:16","usedErrors":[]}],"src":"109:1154:16"},"id":16},"contracts/RSKNFT.sol":{"ast":{"absolutePath":"contracts/RSKNFT.sol","exportedSymbols":{"Address":[1666],"Context":[1688],"Counters":[1762],"ERC165":[2015],"ERC721":[1019],"ERC721URIStorage":[1309],"IERC165":[2027],"IERC4906":[24],"IERC721":[1135],"IERC721Metadata":[1336],"IERC721Receiver":[1153],"Math":[2893],"RSKNFT":[3926],"ReentrancyGuard":[92],"SignedMath":[2998],"Strings":[1991]},"id":3927,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3000,"literals":["solidity","0.8",".19"],"nodeType":"PragmaDirective","src":"33:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"@openzeppelin/contracts/utils/Counters.sol","id":3001,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3927,"sourceUnit":1763,"src":"60:52:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","file":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol","id":3002,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3927,"sourceUnit":1310,"src":"114:78:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":3003,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3927,"sourceUnit":1020,"src":"194:57:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":3004,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3927,"sourceUnit":93,"src":"253:62:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":3005,"name":"ERC721URIStorage","nameLocations":["340:16:17"],"nodeType":"IdentifierPath","referencedDeclaration":1309,"src":"340:16:17"},"id":3006,"nodeType":"InheritanceSpecifier","src":"340:16:17"},{"baseName":{"id":3007,"name":"ReentrancyGuard","nameLocations":["359:15:17"],"nodeType":"IdentifierPath","referencedDeclaration":92,"src":"359:15:17"},"id":3008,"nodeType":"InheritanceSpecifier","src":"359:15:17"}],"canonicalName":"RSKNFT","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3926,"linearizedBaseContracts":[3926,92,1309,1019,1336,24,1135,2015,2027,1688],"name":"RSKNFT","nameLocation":"330:6:17","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3012,"libraryName":{"id":3009,"name":"Counters","nameLocations":["460:8:17"],"nodeType":"IdentifierPath","referencedDeclaration":1762,"src":"460:8:17"},"nodeType":"UsingForDirective","src":"454:36:17","typeName":{"id":3011,"nodeType":"UserDefinedTypeName","pathNode":{"id":3010,"name":"Counters.Counter","nameLocations":["473:8:17","482:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"473:16:17"},"referencedDeclaration":1694,"src":"473:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":3015,"mutability":"mutable","name":"_tokenId","nameLocation":"521:8:17","nodeType":"VariableDeclaration","scope":3926,"src":"496:33:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3014,"nodeType":"UserDefinedTypeName","pathNode":{"id":3013,"name":"Counters.Counter","nameLocations":["496:8:17","505:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"496:16:17"},"referencedDeclaration":1694,"src":"496:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":false,"id":3018,"mutability":"mutable","name":"_soldItems","nameLocation":"573:10:17","nodeType":"VariableDeclaration","scope":3926,"src":"547:36:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter"},"typeName":{"id":3017,"nodeType":"UserDefinedTypeName","pathNode":{"id":3016,"name":"Counters.Counter","nameLocations":["547:8:17","556:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":1694,"src":"547:16:17"},"referencedDeclaration":1694,"src":"547:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"private"},{"constant":true,"functionSelector":"236d4725","id":3021,"mutability":"constant","name":"OPEN_STATUS","nameLocation":"627:11:17","nodeType":"VariableDeclaration","scope":3926,"src":"605:37:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3019,"name":"uint8","nodeType":"ElementaryTypeName","src":"605:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"31","id":3020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"641:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"15bfa612","id":3024,"mutability":"constant","name":"COMPLETED_STATUS","nameLocation":"686:16:17","nodeType":"VariableDeclaration","scope":3926,"src":"664:42:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3022,"name":"uint8","nodeType":"ElementaryTypeName","src":"664:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"32","id":3023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"705:1:17","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"public"},{"constant":false,"functionSelector":"708d4d35","id":3027,"mutability":"mutable","name":"minAuctionIncrement","nameLocation":"744:19:17","nodeType":"VariableDeclaration","scope":3926,"src":"729:39:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3025,"name":"uint256","nodeType":"ElementaryTypeName","src":"729:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"3130","id":3026,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"766:2:17","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"visibility":"public"},{"constant":false,"id":3029,"mutability":"mutable","name":"owner","nameLocation":"805:5:17","nodeType":"VariableDeclaration","scope":3926,"src":"789:21:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3028,"name":"address","nodeType":"ElementaryTypeName","src":"789:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3034,"mutability":"mutable","name":"NFT_ID","nameLocation":"846:6:17","nodeType":"VariableDeclaration","scope":3926,"src":"821:31:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT)"},"typeName":{"id":3033,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3030,"name":"uint256","nodeType":"ElementaryTypeName","src":"830:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"821:24:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3032,"nodeType":"UserDefinedTypeName","pathNode":{"id":3031,"name":"NFT","nameLocations":["841:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"841:3:17"},"referencedDeclaration":3060,"src":"841:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}}},"visibility":"internal"},{"constant":false,"functionSelector":"de74e57b","id":3039,"mutability":"mutable","name":"listings","nameLocation":"894:8:17","nodeType":"VariableDeclaration","scope":3926,"src":"859:43:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing)"},"typeName":{"id":3038,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"859:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3037,"nodeType":"UserDefinedTypeName","pathNode":{"id":3036,"name":"Listing","nameLocations":["878:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3077,"src":"878:7:17"},"referencedDeclaration":3077,"src":"878:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing"}}},"visibility":"public"},{"constant":false,"functionSelector":"3f1ffcec","id":3045,"mutability":"mutable","name":"bids","nameLocation":"964:4:17","nodeType":"VariableDeclaration","scope":3926,"src":"909:59:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":3044,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3040,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"909:47:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3043,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3041,"name":"address","nodeType":"ElementaryTypeName","src":"936:7:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"928:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"947:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"constant":false,"functionSelector":"451df52e","id":3049,"mutability":"mutable","name":"highestBidder","nameLocation":"1010:13:17","nodeType":"VariableDeclaration","scope":3926,"src":"975:48:17","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":3048,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"983:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"975:27:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":3047,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"public"},{"canonicalName":"RSKNFT.NFT","id":3060,"members":[{"constant":false,"id":3051,"mutability":"mutable","name":"owner","nameLocation":"1082:5:17","nodeType":"VariableDeclaration","scope":3060,"src":"1074:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3050,"name":"address","nodeType":"ElementaryTypeName","src":"1074:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3053,"mutability":"mutable","name":"seller","nameLocation":"1106:6:17","nodeType":"VariableDeclaration","scope":3060,"src":"1098:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3052,"name":"address","nodeType":"ElementaryTypeName","src":"1098:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3055,"mutability":"mutable","name":"price","nameLocation":"1131:5:17","nodeType":"VariableDeclaration","scope":3060,"src":"1123:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3054,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3057,"mutability":"mutable","name":"sold","nameLocation":"1152:4:17","nodeType":"VariableDeclaration","scope":3060,"src":"1147:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3056,"name":"bool","nodeType":"ElementaryTypeName","src":"1147:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3059,"mutability":"mutable","name":"tokenId","nameLocation":"1175:7:17","nodeType":"VariableDeclaration","scope":3060,"src":"1167:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3058,"name":"uint256","nodeType":"ElementaryTypeName","src":"1167:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"NFT","nameLocation":"1059:3:17","nodeType":"StructDefinition","scope":3926,"src":"1052:138:17","visibility":"public"},{"canonicalName":"RSKNFT.Listing","id":3077,"members":[{"constant":false,"id":3062,"mutability":"mutable","name":"seller","nameLocation":"1232:6:17","nodeType":"VariableDeclaration","scope":3077,"src":"1224:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3061,"name":"address","nodeType":"ElementaryTypeName","src":"1224:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3064,"mutability":"mutable","name":"owner","nameLocation":"1257:5:17","nodeType":"VariableDeclaration","scope":3077,"src":"1249:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3063,"name":"address","nodeType":"ElementaryTypeName","src":"1249:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3066,"mutability":"mutable","name":"tokenId","nameLocation":"1281:7:17","nodeType":"VariableDeclaration","scope":3077,"src":"1273:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"1273:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3068,"mutability":"mutable","name":"price","nameLocation":"1307:5:17","nodeType":"VariableDeclaration","scope":3077,"src":"1299:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3070,"mutability":"mutable","name":"netPrice","nameLocation":"1348:8:17","nodeType":"VariableDeclaration","scope":3077,"src":"1340:16:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1340:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3072,"mutability":"mutable","name":"startAt","nameLocation":"1391:7:17","nodeType":"VariableDeclaration","scope":3077,"src":"1383:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3071,"name":"uint256","nodeType":"ElementaryTypeName","src":"1383:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3074,"mutability":"mutable","name":"endAt","nameLocation":"1417:5:17","nodeType":"VariableDeclaration","scope":3077,"src":"1409:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1409:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"status","nameLocation":"1440:6:17","nodeType":"VariableDeclaration","scope":3077,"src":"1434:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3075,"name":"uint8","nodeType":"ElementaryTypeName","src":"1434:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"Listing","nameLocation":"1205:7:17","nodeType":"StructDefinition","scope":3926,"src":"1198:256:17","visibility":"public"},{"anonymous":false,"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"1464:177:17","text":"@notice NFT event action\n @dev handled all events related to nfts in the contract\n @param tokenId, @param owner, @param seller, @param price, @param sold"},"eventSelector":"6abf8fea1f4c585bf426b0fdbd54c0f004a746a4b6dcb76752a2d5d268f8730b","id":3092,"name":"NFT_Action","nameLocation":"1653:10:17","nodeType":"EventDefinition","parameters":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"1682:7:17","nodeType":"VariableDeclaration","scope":3092,"src":"1674:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3079,"name":"uint256","nodeType":"ElementaryTypeName","src":"1674:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3082,"indexed":false,"mutability":"mutable","name":"owner","nameLocation":"1708:5:17","nodeType":"VariableDeclaration","scope":3092,"src":"1700:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3081,"name":"address","nodeType":"ElementaryTypeName","src":"1700:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3084,"indexed":false,"mutability":"mutable","name":"seller","nameLocation":"1732:6:17","nodeType":"VariableDeclaration","scope":3092,"src":"1724:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3083,"name":"address","nodeType":"ElementaryTypeName","src":"1724:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3086,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"1757:5:17","nodeType":"VariableDeclaration","scope":3092,"src":"1749:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3085,"name":"uint256","nodeType":"ElementaryTypeName","src":"1749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3088,"indexed":false,"mutability":"mutable","name":"sold","nameLocation":"1778:4:17","nodeType":"VariableDeclaration","scope":3092,"src":"1773:9:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3087,"name":"bool","nodeType":"ElementaryTypeName","src":"1773:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3090,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"1800:7:17","nodeType":"VariableDeclaration","scope":3092,"src":"1793:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3089,"name":"string","nodeType":"ElementaryTypeName","src":"1793:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1663:151:17"},"src":"1647:168:17"},{"anonymous":false,"documentation":{"id":3093,"nodeType":"StructuredDocumentation","src":"1823:149:17","text":"@dev Auction creation events\n @param listingId, @param seller, @param price, @param tokenId, @param startAt, @param endAt, @param message"},"eventSelector":"e3b4d5ceeb9bd4281ba3f05bf499516adb0de51dd1bbfc4516efbdb369ab7305","id":3109,"name":"AuctionCreated","nameLocation":"1984:14:17","nodeType":"EventDefinition","parameters":{"id":3108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3095,"indexed":false,"mutability":"mutable","name":"listingId","nameLocation":"2017:9:17","nodeType":"VariableDeclaration","scope":3109,"src":"2009:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2009:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3097,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"2054:6:17","nodeType":"VariableDeclaration","scope":3109,"src":"2038:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3096,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3099,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"2080:5:17","nodeType":"VariableDeclaration","scope":3109,"src":"2072:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3098,"name":"uint256","nodeType":"ElementaryTypeName","src":"2072:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3101,"indexed":false,"mutability":"mutable","name":"tokenId","nameLocation":"2105:7:17","nodeType":"VariableDeclaration","scope":3109,"src":"2097:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3100,"name":"uint256","nodeType":"ElementaryTypeName","src":"2097:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3103,"indexed":false,"mutability":"mutable","name":"startAt","nameLocation":"2132:7:17","nodeType":"VariableDeclaration","scope":3109,"src":"2124:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3105,"indexed":false,"mutability":"mutable","name":"endAt","nameLocation":"2159:5:17","nodeType":"VariableDeclaration","scope":3109,"src":"2151:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3104,"name":"uint256","nodeType":"ElementaryTypeName","src":"2151:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3107,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"2182:7:17","nodeType":"VariableDeclaration","scope":3109,"src":"2175:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3106,"name":"string","nodeType":"ElementaryTypeName","src":"2175:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1998:202:17"},"src":"1978:223:17"},{"anonymous":false,"documentation":{"id":3110,"nodeType":"StructuredDocumentation","src":"2209:118:17","text":"@dev Auction completed event\n @param listingId, @param seller ,  @param bidder, @param bid, @param message"},"eventSelector":"7e7751e116c86dcb924f03557ed09ee35423dfcfd5cb5c84da25efb40bbc291e","id":3122,"name":"AuctionCompleted","nameLocation":"2339:16:17","nodeType":"EventDefinition","parameters":{"id":3121,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3112,"indexed":false,"mutability":"mutable","name":"listingId","nameLocation":"2374:9:17","nodeType":"VariableDeclaration","scope":3122,"src":"2366:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3111,"name":"uint256","nodeType":"ElementaryTypeName","src":"2366:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3114,"indexed":true,"mutability":"mutable","name":"seller","nameLocation":"2410:6:17","nodeType":"VariableDeclaration","scope":3122,"src":"2394:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3113,"name":"address","nodeType":"ElementaryTypeName","src":"2394:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3116,"indexed":true,"mutability":"mutable","name":"bidder","nameLocation":"2444:6:17","nodeType":"VariableDeclaration","scope":3122,"src":"2428:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"2428:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3118,"indexed":false,"mutability":"mutable","name":"bid","nameLocation":"2470:3:17","nodeType":"VariableDeclaration","scope":3122,"src":"2462:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"2462:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3120,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"2491:7:17","nodeType":"VariableDeclaration","scope":3122,"src":"2484:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3119,"name":"string","nodeType":"ElementaryTypeName","src":"2484:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2355:150:17"},"src":"2333:173:17"},{"anonymous":false,"documentation":{"id":3123,"nodeType":"StructuredDocumentation","src":"2514:91:17","text":"@dev bidding event\n @param listingId, @param bidder, @param bid, @param message"},"eventSelector":"793c2bc8ccf2234e5e1cbd74248a00015d32ccc7c062247f5120abdbb911e80b","id":3133,"name":"BidCreated","nameLocation":"2617:10:17","nodeType":"EventDefinition","parameters":{"id":3132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3125,"indexed":false,"mutability":"mutable","name":"listingId","nameLocation":"2646:9:17","nodeType":"VariableDeclaration","scope":3133,"src":"2638:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3124,"name":"uint256","nodeType":"ElementaryTypeName","src":"2638:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3127,"indexed":true,"mutability":"mutable","name":"bidder","nameLocation":"2683:6:17","nodeType":"VariableDeclaration","scope":3133,"src":"2667:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3126,"name":"address","nodeType":"ElementaryTypeName","src":"2667:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3129,"indexed":false,"mutability":"mutable","name":"bid","nameLocation":"2709:3:17","nodeType":"VariableDeclaration","scope":3133,"src":"2701:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"2701:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3131,"indexed":false,"mutability":"mutable","name":"message","nameLocation":"2730:7:17","nodeType":"VariableDeclaration","scope":3133,"src":"2723:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3130,"name":"string","nodeType":"ElementaryTypeName","src":"2723:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2627:117:17"},"src":"2611:134:17"},{"body":{"id":3148,"nodeType":"Block","src":"2794:46:17","statements":[{"expression":{"id":3146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3140,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3029,"src":"2805:5:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2821:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2825:6:17","memberName":"sender","nodeType":"MemberAccess","src":"2821:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2813:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3141,"name":"address","nodeType":"ElementaryTypeName","src":"2813:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2813:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2805:27:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3147,"nodeType":"ExpressionStatement","src":"2805:27:17"}]},"id":3149,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"43656c6f4e4654","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2777:9:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_aa7b600c9a7d240082ff7919a4eed4f6842027199474a6cc3cc43c7ecfd2aa0c","typeString":"literal_string \"CeloNFT\""},"value":"CeloNFT"},{"hexValue":"415347","id":3137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2788:5:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_ac186d5038e417ee2e7a032a2b3f18a9d22d843acf1e2f9e25277480fc0a6273","typeString":"literal_string \"ASG\""},"value":"ASG"}],"id":3138,"kind":"baseConstructorSpecifier","modifierName":{"id":3135,"name":"ERC721","nameLocations":["2770:6:17"],"nodeType":"IdentifierPath","referencedDeclaration":1019,"src":"2770:6:17"},"nodeType":"ModifierInvocation","src":"2770:24:17"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3134,"nodeType":"ParameterList","parameters":[],"src":"2767:2:17"},"returnParameters":{"id":3139,"nodeType":"ParameterList","parameters":[],"src":"2794:0:17"},"scope":3926,"src":"2756:84:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3188,"nodeType":"Block","src":"3110:345:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3159,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3121:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3130:9:17","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"3121:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1694_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3121:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3163,"nodeType":"ExpressionStatement","src":"3121:20:17"},{"assignments":[3165],"declarations":[{"constant":false,"id":3165,"mutability":"mutable","name":"currentTokenId","nameLocation":"3181:14:17","nodeType":"VariableDeclaration","scope":3188,"src":"3173:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3164,"name":"uint256","nodeType":"ElementaryTypeName","src":"3173:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3169,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3166,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3198:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3167,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3207:7:17","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"3198:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1694_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3198:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3173:43:17"},{"expression":{"arguments":[{"expression":{"id":3171,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3256:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3260:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3256:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3173,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"3267:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3170,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3250:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3250:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3175,"nodeType":"ExpressionStatement","src":"3250:32:17"},{"expression":{"arguments":[{"id":3177,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"3320:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3178,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3152,"src":"3335:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3176,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3307:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3307:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"ExpressionStatement","src":"3307:38:17"},{"expression":{"arguments":[{"id":3182,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"3394:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3183,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"3409:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3181,"name":"createNFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"3384:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:31:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3185,"nodeType":"ExpressionStatement","src":"3384:31:17"},{"expression":{"id":3186,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3165,"src":"3433:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3158,"id":3187,"nodeType":"Return","src":"3426:21:17"}]},"documentation":{"id":3150,"nodeType":"StructuredDocumentation","src":"2850:169:17","text":"@dev mint token , set tokenURI and return currentTokenId\n @param _tokenURI, a tokenURI obtained from IPFS\n @return currentTokenId, current token id"},"functionSelector":"c046372c","id":3189,"implemented":true,"kind":"function","modifiers":[],"name":"mintToken","nameLocation":"3034:9:17","nodeType":"FunctionDefinition","parameters":{"id":3155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3152,"mutability":"mutable","name":"_tokenURI","nameLocation":"3058:9:17","nodeType":"VariableDeclaration","scope":3189,"src":"3044:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3151,"name":"string","nodeType":"ElementaryTypeName","src":"3044:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3154,"mutability":"mutable","name":"price","nameLocation":"3077:5:17","nodeType":"VariableDeclaration","scope":3189,"src":"3069:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"3069:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3043:40:17"},"returnParameters":{"id":3158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3189,"src":"3101:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3156,"name":"uint256","nodeType":"ElementaryTypeName","src":"3101:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3100:9:17"},"scope":3926,"src":"3025:430:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3231,"nodeType":"Block","src":"3758:374:17","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3201,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3769:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3778:9:17","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"3769:18:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1694_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3769:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3205,"nodeType":"ExpressionStatement","src":"3769:20:17"},{"assignments":[3207],"declarations":[{"constant":false,"id":3207,"mutability":"mutable","name":"currentTokenId","nameLocation":"3829:14:17","nodeType":"VariableDeclaration","scope":3231,"src":"3821:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"3821:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3211,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3208,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"3846:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3855:7:17","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"3846:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1694_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3846:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3821:43:17"},{"expression":{"arguments":[{"expression":{"id":3213,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3904:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3908:6:17","memberName":"sender","nodeType":"MemberAccess","src":"3904:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3215,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"3915:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3212,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":693,"src":"3898:5:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":3216,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3898:32:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3217,"nodeType":"ExpressionStatement","src":"3898:32:17"},{"expression":{"arguments":[{"id":3219,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"3968:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3220,"name":"_tokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3192,"src":"3983:9:17","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3218,"name":"_setTokenURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"3955:12:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3955:38:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3222,"nodeType":"ExpressionStatement","src":"3955:38:17"},{"expression":{"arguments":[{"id":3224,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3194,"src":"4053:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3225,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"4059:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3226,"name":"durationInSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3196,"src":"4074:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3223,"name":"createAuctionListing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"4032:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) returns (uint256)"}},"id":3227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:60:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3228,"nodeType":"ExpressionStatement","src":"4032:60:17"},{"expression":{"id":3229,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"4110:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3200,"id":3230,"nodeType":"Return","src":"4103:21:17"}]},"documentation":{"id":3190,"nodeType":"StructuredDocumentation","src":"3464:169:17","text":"@dev mint token , set tokenURI and return currentTokenId\n @param _tokenURI, a tokenURI obtained from IPFS\n @return currentTokenId, current token id"},"functionSelector":"bbb52fff","id":3232,"implemented":true,"kind":"function","modifiers":[],"name":"mintAuctionToken","nameLocation":"3648:16:17","nodeType":"FunctionDefinition","parameters":{"id":3197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3192,"mutability":"mutable","name":"_tokenURI","nameLocation":"3679:9:17","nodeType":"VariableDeclaration","scope":3232,"src":"3665:23:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3191,"name":"string","nodeType":"ElementaryTypeName","src":"3665:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3194,"mutability":"mutable","name":"price","nameLocation":"3698:5:17","nodeType":"VariableDeclaration","scope":3232,"src":"3690:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3193,"name":"uint256","nodeType":"ElementaryTypeName","src":"3690:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3196,"mutability":"mutable","name":"durationInSeconds","nameLocation":"3713:17:17","nodeType":"VariableDeclaration","scope":3232,"src":"3705:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3195,"name":"uint256","nodeType":"ElementaryTypeName","src":"3705:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3664:67:17"},"returnParameters":{"id":3200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3199,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3232,"src":"3749:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"3749:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3748:9:17"},"scope":3926,"src":"3639:493:17","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3290,"nodeType":"Block","src":"4200:519:17","statements":[{"assignments":[3240],"declarations":[{"constant":false,"id":3240,"mutability":"mutable","name":"currentTokenId","nameLocation":"4215:14:17","nodeType":"VariableDeclaration","scope":3290,"src":"4207:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3239,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3244,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3241,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"4232:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3242,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4241:7:17","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"4232:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1694_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4232:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4207:43:17"},{"expression":{"id":3265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3245,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"4257:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3247,"indexExpression":{"id":3246,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3240,"src":"4264:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4257:22:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"id":3253,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4312:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4304:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3251,"name":"address","nodeType":"ElementaryTypeName","src":"4304:7:17","typeDescriptions":{}}},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4304:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4296:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3249,"name":"address","nodeType":"ElementaryTypeName","src":"4296:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4296:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"expression":{"id":3258,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4337:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4341:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4337:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4329:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3256,"name":"address","nodeType":"ElementaryTypeName","src":"4329:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4329:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3261,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"4359:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3262,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4375:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"id":3263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4391:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3248,"name":"NFT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"4282:3:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_NFT_$3060_storage_ptr_$","typeString":"type(struct RSKNFT.NFT storage pointer)"}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4282:123:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"src":"4257:148:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3266,"nodeType":"ExpressionStatement","src":"4257:148:17"},{"expression":{"arguments":[{"expression":{"id":3268,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4428:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4432:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4428:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3272,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4447:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4439:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3270,"name":"address","nodeType":"ElementaryTypeName","src":"4439:7:17","typeDescriptions":{}}},"id":3273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4439:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3274,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4453:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3267,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"4418:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4418:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3276,"nodeType":"ExpressionStatement","src":"4418:43:17"},{"eventCall":{"arguments":[{"id":3278,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"4558:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3281,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4588:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4580:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3279,"name":"address","nodeType":"ElementaryTypeName","src":"4580:7:17","typeDescriptions":{}}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4580:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3283,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4608:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4612:6:17","memberName":"sender","nodeType":"MemberAccess","src":"4608:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3285,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3236,"src":"4633:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"66616c7365","id":3286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4653:5:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"4e46542063726561746564207375636365737366756c79","id":3287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4673:25:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4","typeString":"literal_string \"NFT created successfuly\""},"value":"NFT created successfuly"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4","typeString":"literal_string \"NFT created successfuly\""}],"id":3277,"name":"NFT_Action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"4533:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,uint256,bool,string memory)"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4533:176:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3289,"nodeType":"EmitStatement","src":"4528:181:17"}]},"id":3291,"implemented":true,"kind":"function","modifiers":[],"name":"createNFT","nameLocation":"4149:9:17","nodeType":"FunctionDefinition","parameters":{"id":3237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3234,"mutability":"mutable","name":"tokenId","nameLocation":"4167:7:17","nodeType":"VariableDeclaration","scope":3291,"src":"4159:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3233,"name":"uint256","nodeType":"ElementaryTypeName","src":"4159:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3236,"mutability":"mutable","name":"price","nameLocation":"4184:5:17","nodeType":"VariableDeclaration","scope":3291,"src":"4176:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3235,"name":"uint256","nodeType":"ElementaryTypeName","src":"4176:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4158:32:17"},"returnParameters":{"id":3238,"nodeType":"ParameterList","parameters":[],"src":"4200:0:17"},"scope":3926,"src":"4140:579:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3372,"nodeType":"Block","src":"4985:844:17","statements":[{"assignments":[3304],"declarations":[{"constant":false,"id":3304,"mutability":"mutable","name":"currentTokenId","nameLocation":"5004:14:17","nodeType":"VariableDeclaration","scope":3372,"src":"4996:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"4996:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3308,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3305,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"5021:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5030:7:17","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"5021:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1694_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5021:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4996:43:17"},{"assignments":[3310],"declarations":[{"constant":false,"id":3310,"mutability":"mutable","name":"listingId","nameLocation":"5058:9:17","nodeType":"VariableDeclaration","scope":3372,"src":"5050:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3309,"name":"uint256","nodeType":"ElementaryTypeName","src":"5050:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3312,"initialValue":{"id":3311,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"5070:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5050:34:17"},{"assignments":[3314],"declarations":[{"constant":false,"id":3314,"mutability":"mutable","name":"startAt","nameLocation":"5103:7:17","nodeType":"VariableDeclaration","scope":3372,"src":"5095:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3313,"name":"uint256","nodeType":"ElementaryTypeName","src":"5095:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3317,"initialValue":{"expression":{"id":3315,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5113:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5119:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"5113:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5095:33:17"},{"assignments":[3319],"declarations":[{"constant":false,"id":3319,"mutability":"mutable","name":"endAt","nameLocation":"5147:5:17","nodeType":"VariableDeclaration","scope":3372,"src":"5139:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3318,"name":"uint256","nodeType":"ElementaryTypeName","src":"5139:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3323,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3320,"name":"startAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"5155:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3321,"name":"durationInSeconds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3298,"src":"5165:17:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5155:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5139:43:17"},{"expression":{"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3324,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"5195:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing storage ref)"}},"id":3326,"indexExpression":{"id":3325,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5204:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5195:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage","typeString":"struct RSKNFT.Listing storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"expression":{"id":3330,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5256:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5260:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5256:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5248:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3328,"name":"address","nodeType":"ElementaryTypeName","src":"5248:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5248:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"arguments":[{"id":3337,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5306:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5298:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3335,"name":"address","nodeType":"ElementaryTypeName","src":"5298:7:17","typeDescriptions":{}}},"id":3338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5298:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5290:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3333,"name":"address","nodeType":"ElementaryTypeName","src":"5290:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5290:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3340,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"5336:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3341,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"5365:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3342,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"5395:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3343,"name":"OPEN_STATUS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"5423:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":3344,"name":"startAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"5458:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3345,"name":"endAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"5487:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3327,"name":"Listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5217:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Listing_$3077_storage_ptr_$","typeString":"type(struct RSKNFT.Listing storage pointer)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5240:6:17","5282:5:17","5327:7:17","5358:5:17","5385:8:17","5415:6:17","5449:7:17","5480:5:17"],"names":["seller","owner","tokenId","price","netPrice","status","startAt","endAt"],"nodeType":"FunctionCall","src":"5217:287:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_memory_ptr","typeString":"struct RSKNFT.Listing memory"}},"src":"5195:309:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage","typeString":"struct RSKNFT.Listing storage ref"}},"id":3348,"nodeType":"ExpressionStatement","src":"5195:309:17"},{"expression":{"arguments":[{"expression":{"id":3350,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5527:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5531:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5527:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3354,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5547:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3352,"name":"address","nodeType":"ElementaryTypeName","src":"5539:7:17","typeDescriptions":{}}},"id":3355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5539:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3356,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"5554:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3349,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"5517:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:45:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3358,"nodeType":"ExpressionStatement","src":"5517:45:17"},{"eventCall":{"arguments":[{"id":3360,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5609:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3361,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5634:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5638:6:17","memberName":"sender","nodeType":"MemberAccess","src":"5634:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3363,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3294,"src":"5660:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3364,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3296,"src":"5681:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3365,"name":"startAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"5704:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3366,"name":"endAt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3319,"src":"5727:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41756374696f6e2063726561746564207375636365737366756c6c79","id":3367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5747:30:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f","typeString":"literal_string \"Auction created successfully\""},"value":"Auction created successfully"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f","typeString":"literal_string \"Auction created successfully\""}],"id":3359,"name":"AuctionCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3109,"src":"5580:14:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,uint256,uint256,uint256,string memory)"}},"id":3368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5580:212:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3369,"nodeType":"EmitStatement","src":"5575:217:17"},{"expression":{"id":3370,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"5812:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3302,"id":3371,"nodeType":"Return","src":"5805:16:17"}]},"documentation":{"id":3292,"nodeType":"StructuredDocumentation","src":"4733:130:17","text":"@dev create auction listing\n @param price, @param tokenId, @param durationInSeconds\n @return listingId"},"functionSelector":"4c22f381","id":3373,"implemented":true,"kind":"function","modifiers":[],"name":"createAuctionListing","nameLocation":"4879:20:17","nodeType":"FunctionDefinition","parameters":{"id":3299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3294,"mutability":"mutable","name":"price","nameLocation":"4909:5:17","nodeType":"VariableDeclaration","scope":3373,"src":"4901:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3293,"name":"uint256","nodeType":"ElementaryTypeName","src":"4901:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3296,"mutability":"mutable","name":"tokenId","nameLocation":"4924:7:17","nodeType":"VariableDeclaration","scope":3373,"src":"4916:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3295,"name":"uint256","nodeType":"ElementaryTypeName","src":"4916:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3298,"mutability":"mutable","name":"durationInSeconds","nameLocation":"4941:17:17","nodeType":"VariableDeclaration","scope":3373,"src":"4933:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3297,"name":"uint256","nodeType":"ElementaryTypeName","src":"4933:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4900:59:17"},"returnParameters":{"id":3302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3373,"src":"4976:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"4976:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4975:9:17"},"scope":3926,"src":"4870:959:17","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3490,"nodeType":"Block","src":"5998:966:17","statements":[{"expression":{"arguments":[{"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6017:25:17","subExpression":{"arguments":[{"id":3383,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6032:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3382,"name":"isAuctionOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"6018:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6018:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"61756374696f6e206973207374696c6c206f70656e","id":3386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6044:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353","typeString":"literal_string \"auction is still open\""},"value":"auction is still open"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353","typeString":"literal_string \"auction is still open\""}],"id":3381,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6009:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6009:59:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3388,"nodeType":"ExpressionStatement","src":"6009:59:17"},{"assignments":[3391],"declarations":[{"constant":false,"id":3391,"mutability":"mutable","name":"listing","nameLocation":"6097:7:17","nodeType":"VariableDeclaration","scope":3490,"src":"6081:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing"},"typeName":{"id":3390,"nodeType":"UserDefinedTypeName","pathNode":{"id":3389,"name":"Listing","nameLocations":["6081:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3077,"src":"6081:7:17"},"referencedDeclaration":3077,"src":"6081:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing"}},"visibility":"internal"}],"id":3395,"initialValue":{"baseExpression":{"id":3392,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"6107:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing storage ref)"}},"id":3394,"indexExpression":{"id":3393,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6116:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6107:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage","typeString":"struct RSKNFT.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6081:45:17"},{"assignments":[3397],"declarations":[{"constant":false,"id":3397,"mutability":"mutable","name":"winner","nameLocation":"6145:6:17","nodeType":"VariableDeclaration","scope":3490,"src":"6137:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3396,"name":"address","nodeType":"ElementaryTypeName","src":"6137:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3401,"initialValue":{"baseExpression":{"id":3398,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"6154:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3400,"indexExpression":{"id":3399,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6168:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6154:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6137:41:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3403,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6212:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6216:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6212:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3405,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6226:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3406,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6234:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3062,"src":"6226:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6212:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3408,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6244:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6248:6:17","memberName":"sender","nodeType":"MemberAccess","src":"6244:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3410,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6258:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6244:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6212:52:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"6f6e6c792073656c6c6572206f722077696e6e65722063616e20636f6d706c6574652061756374696f6e","id":3413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6280:44:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a","typeString":"literal_string \"only seller or winner can complete auction\""},"value":"only seller or winner can complete auction"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a","typeString":"literal_string \"only seller or winner can complete auction\""}],"id":3402,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6190:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6190:145:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3415,"nodeType":"ExpressionStatement","src":"6190:145:17"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6351:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6361:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3417,"name":"address","nodeType":"ElementaryTypeName","src":"6361:7:17","typeDescriptions":{}}},"id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6361:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6351:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3469,"nodeType":"Block","src":"6617:84:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3461,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6650:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6642:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3459,"name":"address","nodeType":"ElementaryTypeName","src":"6642:7:17","typeDescriptions":{}}},"id":3462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6642:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3463,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6657:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6665:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3062,"src":"6657:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3465,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6673:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6681:7:17","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":3066,"src":"6673:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3458,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6632:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6632:57:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3468,"nodeType":"ExpressionStatement","src":"6632:57:17"}]},"id":3470,"nodeType":"IfStatement","src":"6348:353:17","trueBody":{"id":3457,"nodeType":"Block","src":"6373:238:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3425,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6405:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6397:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3423,"name":"address","nodeType":"ElementaryTypeName","src":"6397:7:17","typeDescriptions":{}}},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6397:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3427,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6412:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3428,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6420:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3429,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6428:7:17","memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":3066,"src":"6420:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3422,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"6387:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6387:49:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3431,"nodeType":"ExpressionStatement","src":"6387:49:17"},{"assignments":[3433],"declarations":[{"constant":false,"id":3433,"mutability":"mutable","name":"amount","nameLocation":"6461:6:17","nodeType":"VariableDeclaration","scope":3457,"src":"6453:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3432,"name":"uint256","nodeType":"ElementaryTypeName","src":"6453:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3439,"initialValue":{"baseExpression":{"baseExpression":{"id":3434,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6470:4:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":3436,"indexExpression":{"id":3435,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6475:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3438,"indexExpression":{"id":3437,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6486:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6470:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6453:40:17"},{"expression":{"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3440,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6509:4:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":3443,"indexExpression":{"id":3441,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6514:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6509:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3444,"indexExpression":{"id":3442,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6525:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6509:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6535:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6509:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3447,"nodeType":"ExpressionStatement","src":"6509:27:17"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3451,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6573:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3452,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6581:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3062,"src":"6573:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6565:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3449,"name":"address","nodeType":"ElementaryTypeName","src":"6565:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6565:23:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":3454,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3433,"src":"6590:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3448,"name":"_transferFund","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3925,"src":"6551:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_payable_$_t_uint256_$returns$__$","typeString":"function (address payable,uint256)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6551:46:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3456,"nodeType":"ExpressionStatement","src":"6551:46:17"}]}},{"expression":{"id":3475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3471,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6713:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3473,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6721:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3076,"src":"6713:14:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3474,"name":"COMPLETED_STATUS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3024,"src":"6730:16:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6713:33:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3476,"nodeType":"ExpressionStatement","src":"6713:33:17"},{"eventCall":{"arguments":[{"id":3478,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6795:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3479,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3391,"src":"6819:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3480,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6827:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3062,"src":"6819:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3481,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6849:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"baseExpression":{"id":3482,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"6871:4:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":3484,"indexExpression":{"id":3483,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"6876:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6871:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3486,"indexExpression":{"id":3485,"name":"winner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"6887:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6871:23:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"41756374696f6e20636f6d706c65746564207375636365737366756c6c79","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6909:32:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f","typeString":"literal_string \"Auction completed successfully\""},"value":"Auction completed successfully"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f","typeString":"literal_string \"Auction completed successfully\""}],"id":3477,"name":"AuctionCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"6764:16:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,uint256,string memory)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6764:192:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3489,"nodeType":"EmitStatement","src":"6759:197:17"}]},"documentation":{"id":3374,"nodeType":"StructuredDocumentation","src":"5837:83:17","text":"@dev Nft auction completion functionality\n @param listingId , listingId"},"functionSelector":"21b62886","id":3491,"implemented":true,"kind":"function","modifiers":[{"id":3379,"kind":"modifierInvocation","modifierName":{"id":3378,"name":"nonReentrant","nameLocations":["5985:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"5985:12:17"},"nodeType":"ModifierInvocation","src":"5985:12:17"}],"name":"completeAuction","nameLocation":"5935:15:17","nodeType":"FunctionDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3376,"mutability":"mutable","name":"listingId","nameLocation":"5959:9:17","nodeType":"VariableDeclaration","scope":3491,"src":"5951:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"5951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5950:19:17"},"returnParameters":{"id":3380,"nodeType":"ParameterList","parameters":[],"src":"5998:0:17"},"scope":3926,"src":"5926:1038:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3582,"nodeType":"Block","src":"7032:741:17","statements":[{"expression":{"arguments":[{"arguments":[{"id":3500,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"7065:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3499,"name":"isAuctionOpen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3887,"src":"7051:13:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256) view returns (bool)"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:24:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"61756374696f6e2068617320656e646564","id":3502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7077:19:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef","typeString":"literal_string \"auction has ended\""},"value":"auction has ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef","typeString":"literal_string \"auction has ended\""}],"id":3498,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7043:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7043:54:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3504,"nodeType":"ExpressionStatement","src":"7043:54:17"},{"assignments":[3507],"declarations":[{"constant":false,"id":3507,"mutability":"mutable","name":"listing","nameLocation":"7124:7:17","nodeType":"VariableDeclaration","scope":3582,"src":"7108:23:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing"},"typeName":{"id":3506,"nodeType":"UserDefinedTypeName","pathNode":{"id":3505,"name":"Listing","nameLocations":["7108:7:17"],"nodeType":"IdentifierPath","referencedDeclaration":3077,"src":"7108:7:17"},"referencedDeclaration":3077,"src":"7108:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing"}},"visibility":"internal"}],"id":3511,"initialValue":{"baseExpression":{"id":3508,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"7134:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing storage ref)"}},"id":3510,"indexExpression":{"id":3509,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"7143:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7134:19:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage","typeString":"struct RSKNFT.Listing storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7108:45:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3513,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7172:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7176:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7172:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3515,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7186:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3516,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7194:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3062,"src":"7186:14:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7172:28:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f7420626964206f6e207768617420796f75206f776e","id":3518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7202:28:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e","typeString":"literal_string \"cannot bid on what you own\""},"value":"cannot bid on what you own"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e","typeString":"literal_string \"cannot bid on what you own\""}],"id":3512,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7164:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7164:67:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3520,"nodeType":"ExpressionStatement","src":"7164:67:17"},{"assignments":[3522],"declarations":[{"constant":false,"id":3522,"mutability":"mutable","name":"newBid","nameLocation":"7252:6:17","nodeType":"VariableDeclaration","scope":3582,"src":"7244:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3521,"name":"uint256","nodeType":"ElementaryTypeName","src":"7244:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3532,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":3523,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"7261:4:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":3525,"indexExpression":{"id":3524,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"7266:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7261:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3528,"indexExpression":{"expression":{"id":3526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7277:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7281:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7277:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7261:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"expression":{"id":3529,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7291:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7295:5:17","memberName":"value","nodeType":"MemberAccess","src":"7291:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7261:39:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7244:56:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3534,"name":"newBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"7319:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"id":3535,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7329:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3536,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7337:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3068,"src":"7329:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7319:23:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"63616e6e6f74206269642062656c6f7720746865206c61746573742062696464696e67207072696365","id":3538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7344:43:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10","typeString":"literal_string \"cannot bid below the latest bidding price\""},"value":"cannot bid below the latest bidding price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10","typeString":"literal_string \"cannot bid below the latest bidding price\""}],"id":3533,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7311:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7311:77:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3540,"nodeType":"ExpressionStatement","src":"7311:77:17"},{"expression":{"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":3541,"name":"bids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"7401:4:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":3545,"indexExpression":{"id":3542,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"7406:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7401:15:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":3546,"indexExpression":{"expression":{"id":3543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7417:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7421:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7417:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7401:27:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"expression":{"id":3547,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7432:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3548,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7436:5:17","memberName":"value","nodeType":"MemberAccess","src":"7432:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7401:40:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3550,"nodeType":"ExpressionStatement","src":"7401:40:17"},{"expression":{"id":3556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3551,"name":"highestBidder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3049,"src":"7452:13:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":3553,"indexExpression":{"id":3552,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"7466:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7452:24:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3554,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7479:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7483:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7479:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7452:37:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3557,"nodeType":"ExpressionStatement","src":"7452:37:17"},{"assignments":[3559],"declarations":[{"constant":false,"id":3559,"mutability":"mutable","name":"incentive","nameLocation":"7510:9:17","nodeType":"VariableDeclaration","scope":3582,"src":"7502:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3558,"name":"uint256","nodeType":"ElementaryTypeName","src":"7502:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3564,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3560,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7522:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7530:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3068,"src":"7522:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3562,"name":"minAuctionIncrement","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"7538:19:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7522:35:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7502:55:17"},{"expression":{"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3565,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7568:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3567,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"7576:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3068,"src":"7568:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3568,"name":"listing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3507,"src":"7584:7:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage_ptr","typeString":"struct RSKNFT.Listing storage pointer"}},"id":3569,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7592:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3068,"src":"7584:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3570,"name":"incentive","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3559,"src":"7600:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7584:25:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7568:41:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3573,"nodeType":"ExpressionStatement","src":"7568:41:17"},{"eventCall":{"arguments":[{"id":3575,"name":"listingId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3493,"src":"7652:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3576,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7677:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7681:6:17","memberName":"sender","nodeType":"MemberAccess","src":"7677:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3578,"name":"newBid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3522,"src":"7703:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"4269642063726561746564207375636365737366756c6c79","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7724:26:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5","typeString":"literal_string \"Bid created successfully\""},"value":"Bid created successfully"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5","typeString":"literal_string \"Bid created successfully\""}],"id":3574,"name":"BidCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3133,"src":"7627:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,uint256,string memory)"}},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7627:138:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3581,"nodeType":"EmitStatement","src":"7622:143:17"}]},"functionSelector":"454a2ab3","id":3583,"implemented":true,"kind":"function","modifiers":[{"id":3496,"kind":"modifierInvocation","modifierName":{"id":3495,"name":"nonReentrant","nameLocations":["7019:12:17"],"nodeType":"IdentifierPath","referencedDeclaration":57,"src":"7019:12:17"},"nodeType":"ModifierInvocation","src":"7019:12:17"}],"name":"bid","nameLocation":"6981:3:17","nodeType":"FunctionDefinition","parameters":{"id":3494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3493,"mutability":"mutable","name":"listingId","nameLocation":"6993:9:17","nodeType":"VariableDeclaration","scope":3583,"src":"6985:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3492,"name":"uint256","nodeType":"ElementaryTypeName","src":"6985:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6984:19:17"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[],"src":"7032:0:17"},"scope":3926,"src":"6972:801:17","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3687,"nodeType":"Block","src":"7940:792:17","statements":[{"assignments":[3590],"declarations":[{"constant":false,"id":3590,"mutability":"mutable","name":"_price","nameLocation":"7959:6:17","nodeType":"VariableDeclaration","scope":3687,"src":"7951:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3589,"name":"uint256","nodeType":"ElementaryTypeName","src":"7951:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3595,"initialValue":{"expression":{"baseExpression":{"id":3591,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"7968:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3593,"indexExpression":{"id":3592,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"7975:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7968:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3594,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7984:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3055,"src":"7968:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7951:38:17"},{"assignments":[3597],"declarations":[{"constant":false,"id":3597,"mutability":"mutable","name":"seller","nameLocation":"8008:6:17","nodeType":"VariableDeclaration","scope":3687,"src":"8000:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3596,"name":"address","nodeType":"ElementaryTypeName","src":"8000:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3602,"initialValue":{"expression":{"baseExpression":{"id":3598,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8017:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3600,"indexExpression":{"id":3599,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8024:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8017:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8033:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"8017:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8000:39:17"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3604,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8058:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8062:5:17","memberName":"value","nodeType":"MemberAccess","src":"8058:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3606,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"8071:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8058:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"696e636f727265637420616d6f756e74","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8079:18:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970","typeString":"literal_string \"incorrect amount\""},"value":"incorrect amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970","typeString":"literal_string \"incorrect amount\""}],"id":3603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8050:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8050:48:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3610,"nodeType":"ExpressionStatement","src":"8050:48:17"},{"assignments":[3612,null],"declarations":[{"constant":false,"id":3612,"mutability":"mutable","name":"success","nameLocation":"8115:7:17","nodeType":"VariableDeclaration","scope":3687,"src":"8110:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3611,"name":"bool","nodeType":"ElementaryTypeName","src":"8110:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3622,"initialValue":{"arguments":[{"hexValue":"","id":3620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8164:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"arguments":[{"id":3615,"name":"seller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3597,"src":"8135:6:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8127:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3613,"name":"address","nodeType":"ElementaryTypeName","src":"8127:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8127:15:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8143:4:17","memberName":"call","nodeType":"MemberAccess","src":"8127:20:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3618,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"8156:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8127:36:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8127:40:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"8109:58:17"},{"expression":{"arguments":[{"id":3624,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3612,"src":"8212:7:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"7061796d656e74206661696c6564","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8221:16:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","typeString":"literal_string \"payment failed\""},"value":"payment failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","typeString":"literal_string \"payment failed\""}],"id":3623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8204:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8204:34:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"ExpressionStatement","src":"8204:34:17"},{"expression":{"id":3637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3628,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8249:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3630,"indexExpression":{"id":3629,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8256:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8249:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8265:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"8249:21:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8281:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8285:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8281:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3633,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8273:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3632,"name":"address","nodeType":"ElementaryTypeName","src":"8273:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8273:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"8249:43:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3638,"nodeType":"ExpressionStatement","src":"8249:43:17"},{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3639,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8303:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3641,"indexExpression":{"id":3640,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8310:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8303:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8319:6:17","memberName":"seller","nodeType":"MemberAccess","referencedDeclaration":3053,"src":"8303:22:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"hexValue":"30","id":3647,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8344:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8336:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3645,"name":"address","nodeType":"ElementaryTypeName","src":"8336:7:17","typeDescriptions":{}}},"id":3648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8336:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8328:8:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":3643,"name":"address","nodeType":"ElementaryTypeName","src":"8328:8:17","stateMutability":"payable","typeDescriptions":{}}},"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8328:19:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"8303:44:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3651,"nodeType":"ExpressionStatement","src":"8303:44:17"},{"expression":{"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":3652,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"8389:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3654,"indexExpression":{"id":3653,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8396:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8389:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8405:4:17","memberName":"sold","nodeType":"MemberAccess","referencedDeclaration":3057,"src":"8389:20:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8412:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8389:27:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3658,"nodeType":"ExpressionStatement","src":"8389:27:17"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3659,"name":"_soldItems","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3018,"src":"8427:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3661,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8438:9:17","memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1720,"src":"8427:20:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1694_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":3662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8427:22:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3663,"nodeType":"ExpressionStatement","src":"8427:22:17"},{"expression":{"arguments":[{"arguments":[{"id":3667,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8478:4:17","typeDescriptions":{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_RSKNFT_$3926","typeString":"contract RSKNFT"}],"id":3666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8470:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3665,"name":"address","nodeType":"ElementaryTypeName","src":"8470:7:17","typeDescriptions":{}}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8470:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3669,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8484:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8488:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8484:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3671,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8495:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3664,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":845,"src":"8460:9:17","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8460:43:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3673,"nodeType":"ExpressionStatement","src":"8460:43:17"},{"eventCall":{"arguments":[{"id":3675,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3586,"src":"8578:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3676,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8600:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8604:6:17","memberName":"sender","nodeType":"MemberAccess","src":"8600:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8633:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3679,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8625:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3678,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:17","typeDescriptions":{}}},"id":3681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8625:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3682,"name":"_price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3590,"src":"8650:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8671:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"536f6c64204e4654207375636365737366756c6c79","id":3684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8690:23:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580","typeString":"literal_string \"Sold NFT successfully\""},"value":"Sold NFT successfully"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580","typeString":"literal_string \"Sold NFT successfully\""}],"id":3674,"name":"NFT_Action","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3092,"src":"8553:10:17","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,address,uint256,bool,string memory)"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8553:171:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3686,"nodeType":"EmitStatement","src":"8548:176:17"}]},"documentation":{"id":3584,"nodeType":"StructuredDocumentation","src":"7782:101:17","text":"@dev NFT sales functionality and process payment to seller\n @param tokenId,  NFT token id"},"functionSelector":"ee9cdfb3","id":3688,"implemented":true,"kind":"function","modifiers":[],"name":"sellNFT","nameLocation":"7898:7:17","nodeType":"FunctionDefinition","parameters":{"id":3587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3586,"mutability":"mutable","name":"tokenId","nameLocation":"7914:7:17","nodeType":"VariableDeclaration","scope":3688,"src":"7906:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3585,"name":"uint256","nodeType":"ElementaryTypeName","src":"7906:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7905:17:17"},"returnParameters":{"id":3588,"nodeType":"ParameterList","parameters":[],"src":"7940:0:17"},"scope":3926,"src":"7889:843:17","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3739,"nodeType":"Block","src":"8858:242:17","statements":[{"assignments":[3697],"declarations":[{"constant":false,"id":3697,"mutability":"mutable","name":"currentTokenId","nameLocation":"8874:14:17","nodeType":"VariableDeclaration","scope":3739,"src":"8869:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3696,"name":"uint","nodeType":"ElementaryTypeName","src":"8869:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3701,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3698,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"8891:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3699,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8900:7:17","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"8891:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1694_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8891:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8869:40:17"},{"assignments":[3706],"declarations":[{"constant":false,"id":3706,"mutability":"mutable","name":"items","nameLocation":"8933:5:17","nodeType":"VariableDeclaration","scope":3739,"src":"8920:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT[]"},"typeName":{"baseType":{"id":3704,"nodeType":"UserDefinedTypeName","pathNode":{"id":3703,"name":"NFT","nameLocations":["8920:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"8920:3:17"},"referencedDeclaration":3060,"src":"8920:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"id":3705,"nodeType":"ArrayTypeName","src":"8920:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_storage_$dyn_storage_ptr","typeString":"struct RSKNFT.NFT[]"}},"visibility":"internal"}],"id":3713,"initialValue":{"arguments":[{"id":3711,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3697,"src":"8951:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8941:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct RSKNFT.NFT memory[] memory)"},"typeName":{"baseType":{"id":3708,"nodeType":"UserDefinedTypeName","pathNode":{"id":3707,"name":"NFT","nameLocations":["8945:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"8945:3:17"},"referencedDeclaration":3060,"src":"8945:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"id":3709,"nodeType":"ArrayTypeName","src":"8945:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_storage_$dyn_storage_ptr","typeString":"struct RSKNFT.NFT[]"}}},"id":3712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8941:25:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8920:46:17"},{"body":{"id":3735,"nodeType":"Block","src":"9017:51:17","statements":[{"expression":{"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3725,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"9032:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"id":3727,"indexExpression":{"id":3726,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9038:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9032:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3728,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9043:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3732,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3729,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9050:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9050:5:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9043:13:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"src":"9032:24:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"id":3734,"nodeType":"ExpressionStatement","src":"9032:24:17"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3718,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"8994:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3719,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"8998:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9004:6:17","memberName":"length","nodeType":"MemberAccess","src":"8998:12:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8994:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3736,"initializationExpression":{"assignments":[3715],"declarations":[{"constant":false,"id":3715,"mutability":"mutable","name":"i","nameLocation":"8987:1:17","nodeType":"VariableDeclaration","scope":3736,"src":"8982:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint","nodeType":"ElementaryTypeName","src":"8982:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3717,"initialValue":{"hexValue":"30","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8991:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8982:10:17"},"loopExpression":{"expression":{"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9012:3:17","subExpression":{"id":3722,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3715,"src":"9012:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3724,"nodeType":"ExpressionStatement","src":"9012:3:17"},"nodeType":"ForStatement","src":"8977:91:17"},{"expression":{"id":3737,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3706,"src":"9087:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"functionReturnParameters":3695,"id":3738,"nodeType":"Return","src":"9080:12:17"}]},"documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"8742:54:17","text":"@notice All nfts retrieval,\n @return props"},"functionSelector":"f2b8aa6f","id":3740,"implemented":true,"kind":"function","modifiers":[],"name":"allNfts","nameLocation":"8811:7:17","nodeType":"FunctionDefinition","parameters":{"id":3690,"nodeType":"ParameterList","parameters":[],"src":"8818:2:17"},"returnParameters":{"id":3695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3694,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3740,"src":"8844:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT[]"},"typeName":{"baseType":{"id":3692,"nodeType":"UserDefinedTypeName","pathNode":{"id":3691,"name":"NFT","nameLocations":["8844:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"8844:3:17"},"referencedDeclaration":3060,"src":"8844:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"id":3693,"nodeType":"ArrayTypeName","src":"8844:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_storage_$dyn_storage_ptr","typeString":"struct RSKNFT.NFT[]"}},"visibility":"internal"}],"src":"8843:14:17"},"scope":3926,"src":"8802:298:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3755,"nodeType":"Block","src":"9248:42:17","statements":[{"expression":{"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3749,"name":"props","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3747,"src":"9259:5:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3750,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9267:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3752,"indexExpression":{"id":3751,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"9274:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9267:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"src":"9259:23:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"id":3754,"nodeType":"ExpressionStatement","src":"9259:23:17"}]},"documentation":{"id":3741,"nodeType":"StructuredDocumentation","src":"9109:58:17","text":"@notice retrieval of single nft\n @return props"},"functionSelector":"043a2df4","id":3756,"implemented":true,"kind":"function","modifiers":[],"name":"singleNFT","nameLocation":"9182:9:17","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3743,"mutability":"mutable","name":"tokenId","nameLocation":"9200:7:17","nodeType":"VariableDeclaration","scope":3756,"src":"9192:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"9192:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9191:17:17"},"returnParameters":{"id":3748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3747,"mutability":"mutable","name":"props","nameLocation":"9242:5:17","nodeType":"VariableDeclaration","scope":3756,"src":"9231:16:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT"},"typeName":{"id":3746,"nodeType":"UserDefinedTypeName","pathNode":{"id":3745,"name":"NFT","nameLocations":["9231:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"9231:3:17"},"referencedDeclaration":3060,"src":"9231:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"visibility":"internal"}],"src":"9230:18:17"},"scope":3926,"src":"9173:117:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3848,"nodeType":"Block","src":"9451:538:17","statements":[{"assignments":[3765],"declarations":[{"constant":false,"id":3765,"mutability":"mutable","name":"currentTokenId","nameLocation":"9463:14:17","nodeType":"VariableDeclaration","scope":3848,"src":"9458:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3764,"name":"uint","nodeType":"ElementaryTypeName","src":"9458:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3769,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3766,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3015,"src":"9480:8:17","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1694_storage","typeString":"struct Counters.Counter storage ref"}},"id":3767,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9489:7:17","memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1706,"src":"9480:16:17","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1694_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1694_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":3768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9480:18:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9458:40:17"},{"assignments":[3771],"declarations":[{"constant":false,"id":3771,"mutability":"mutable","name":"itemCount","nameLocation":"9510:9:17","nodeType":"VariableDeclaration","scope":3848,"src":"9505:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3770,"name":"uint","nodeType":"ElementaryTypeName","src":"9505:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3773,"initialValue":{"hexValue":"30","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9522:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9505:18:17"},{"body":{"id":3796,"nodeType":"Block","src":"9575:91:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3784,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9590:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3786,"indexExpression":{"id":3785,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"9597:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9590:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3787,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9600:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"9590:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9609:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9613:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9609:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9590:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"9586:73:17","trueBody":{"id":3794,"nodeType":"Block","src":"9621:38:17","statements":[{"expression":{"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9636:11:17","subExpression":{"id":3791,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9636:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3793,"nodeType":"ExpressionStatement","src":"9636:11:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3778,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"9549:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3779,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"9554:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9549:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3797,"initializationExpression":{"assignments":[3775],"declarations":[{"constant":false,"id":3775,"mutability":"mutable","name":"i","nameLocation":"9542:1:17","nodeType":"VariableDeclaration","scope":3797,"src":"9537:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3774,"name":"uint","nodeType":"ElementaryTypeName","src":"9537:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3777,"initialValue":{"hexValue":"31","id":3776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9546:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"9537:10:17"},"loopExpression":{"expression":{"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9570:3:17","subExpression":{"id":3781,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3775,"src":"9570:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3783,"nodeType":"ExpressionStatement","src":"9570:3:17"},"nodeType":"ForStatement","src":"9532:134:17"},{"assignments":[3802],"declarations":[{"constant":false,"id":3802,"mutability":"mutable","name":"items","nameLocation":"9687:5:17","nodeType":"VariableDeclaration","scope":3848,"src":"9674:18:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT[]"},"typeName":{"baseType":{"id":3800,"nodeType":"UserDefinedTypeName","pathNode":{"id":3799,"name":"NFT","nameLocations":["9674:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"9674:3:17"},"referencedDeclaration":3060,"src":"9674:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"id":3801,"nodeType":"ArrayTypeName","src":"9674:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_storage_$dyn_storage_ptr","typeString":"struct RSKNFT.NFT[]"}},"visibility":"internal"}],"id":3809,"initialValue":{"arguments":[{"id":3807,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9705:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"9695:9:17","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct RSKNFT.NFT memory[] memory)"},"typeName":{"baseType":{"id":3804,"nodeType":"UserDefinedTypeName","pathNode":{"id":3803,"name":"NFT","nameLocations":["9699:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"9699:3:17"},"referencedDeclaration":3060,"src":"9699:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"id":3805,"nodeType":"ArrayTypeName","src":"9699:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_storage_$dyn_storage_ptr","typeString":"struct RSKNFT.NFT[]"}}},"id":3808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9695:20:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"9674:41:17"},{"expression":{"id":3812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3810,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9722:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9734:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9722:13:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3813,"nodeType":"ExpressionStatement","src":"9722:13:17"},{"body":{"id":3844,"nodeType":"Block","src":"9831:134:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3824,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9846:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3826,"indexExpression":{"id":3825,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"9853:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9846:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:17","memberName":"owner","nodeType":"MemberAccess","referencedDeclaration":3051,"src":"9846:15:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":3828,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9865:3:17","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9869:6:17","memberName":"sender","nodeType":"MemberAccess","src":"9865:10:17","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9846:29:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3843,"nodeType":"IfStatement","src":"9842:116:17","trueBody":{"id":3842,"nodeType":"Block","src":"9877:81:17","statements":[{"expression":{"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3831,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"9892:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"id":3833,"indexExpression":{"id":3832,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9898:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9892:16:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3834,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"9911:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3836,"indexExpression":{"id":3835,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"9918:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9911:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"src":"9892:28:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_memory_ptr","typeString":"struct RSKNFT.NFT memory"}},"id":3838,"nodeType":"ExpressionStatement","src":"9892:28:17"},{"expression":{"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9935:11:17","subExpression":{"id":3839,"name":"itemCount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"9935:9:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3841,"nodeType":"ExpressionStatement","src":"9935:11:17"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3818,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"9805:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3819,"name":"currentTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3765,"src":"9810:14:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9805:19:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3845,"initializationExpression":{"assignments":[3815],"declarations":[{"constant":false,"id":3815,"mutability":"mutable","name":"i","nameLocation":"9798:1:17","nodeType":"VariableDeclaration","scope":3845,"src":"9793:6:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3814,"name":"uint","nodeType":"ElementaryTypeName","src":"9793:4:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3817,"initialValue":{"hexValue":"31","id":3816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9802:1:17","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"9793:10:17"},"loopExpression":{"expression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9826:3:17","subExpression":{"id":3821,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3815,"src":"9826:1:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3823,"nodeType":"ExpressionStatement","src":"9826:3:17"},"nodeType":"ForStatement","src":"9788:177:17"},{"expression":{"id":3846,"name":"items","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3802,"src":"9980:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT memory[] memory"}},"functionReturnParameters":3763,"id":3847,"nodeType":"Return","src":"9973:12:17"}]},"documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"9300:88:17","text":"@notice retrieval of all purchased nfts that belong to a user\n @return props"},"functionSelector":"051d2b6b","id":3849,"implemented":true,"kind":"function","modifiers":[],"name":"userNfts","nameLocation":"9403:8:17","nodeType":"FunctionDefinition","parameters":{"id":3758,"nodeType":"ParameterList","parameters":[],"src":"9411:2:17"},"returnParameters":{"id":3763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3849,"src":"9437:12:17","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","typeString":"struct RSKNFT.NFT[]"},"typeName":{"baseType":{"id":3760,"nodeType":"UserDefinedTypeName","pathNode":{"id":3759,"name":"NFT","nameLocations":["9437:3:17"],"nodeType":"IdentifierPath","referencedDeclaration":3060,"src":"9437:3:17"},"referencedDeclaration":3060,"src":"9437:3:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage_ptr","typeString":"struct RSKNFT.NFT"}},"id":3761,"nodeType":"ArrayTypeName","src":"9437:5:17","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_NFT_$3060_storage_$dyn_storage_ptr","typeString":"struct RSKNFT.NFT[]"}},"visibility":"internal"}],"src":"9436:14:17"},"scope":3926,"src":"9394:595:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3862,"nodeType":"Block","src":"10159:47:17","statements":[{"expression":{"expression":{"baseExpression":{"id":3857,"name":"NFT_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"10177:6:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_NFT_$3060_storage_$","typeString":"mapping(uint256 => struct RSKNFT.NFT storage ref)"}},"id":3859,"indexExpression":{"id":3858,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3852,"src":"10184:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10177:15:17","typeDescriptions":{"typeIdentifier":"t_struct$_NFT_$3060_storage","typeString":"struct RSKNFT.NFT storage ref"}},"id":3860,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10193:5:17","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":3055,"src":"10177:21:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3856,"id":3861,"nodeType":"Return","src":"10170:28:17"}]},"documentation":{"id":3850,"nodeType":"StructuredDocumentation","src":"9997:88:17","text":"@notice retrieve nft price\n @param tokenId ,tokenId\n @return uint256"},"functionSelector":"7bf0989a","id":3863,"implemented":true,"kind":"function","modifiers":[],"name":"getNftPrice","nameLocation":"10100:11:17","nodeType":"FunctionDefinition","parameters":{"id":3853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3852,"mutability":"mutable","name":"tokenId","nameLocation":"10120:7:17","nodeType":"VariableDeclaration","scope":3863,"src":"10112:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3851,"name":"uint256","nodeType":"ElementaryTypeName","src":"10112:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10111:17:17"},"returnParameters":{"id":3856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3863,"src":"10151:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3854,"name":"uint256","nodeType":"ElementaryTypeName","src":"10151:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10150:9:17"},"scope":3926,"src":"10091:115:17","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":3886,"nodeType":"Block","src":"10347:126:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3871,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"10378:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing storage ref)"}},"id":3873,"indexExpression":{"id":3872,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"10387:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10378:12:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage","typeString":"struct RSKNFT.Listing storage ref"}},"id":3874,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10391:6:17","memberName":"status","nodeType":"MemberAccess","referencedDeclaration":3076,"src":"10378:19:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3875,"name":"OPEN_STATUS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3021,"src":"10401:11:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10378:34:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":3877,"name":"listings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"10429:8:17","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Listing_$3077_storage_$","typeString":"mapping(uint256 => struct RSKNFT.Listing storage ref)"}},"id":3879,"indexExpression":{"id":3878,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3866,"src":"10438:2:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10429:12:17","typeDescriptions":{"typeIdentifier":"t_struct$_Listing_$3077_storage","typeString":"struct RSKNFT.Listing storage ref"}},"id":3880,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10442:5:17","memberName":"endAt","nodeType":"MemberAccess","referencedDeclaration":3074,"src":"10429:18:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":3881,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10450:5:17","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10456:9:17","memberName":"timestamp","nodeType":"MemberAccess","src":"10450:15:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10429:36:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10378:87:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3870,"id":3885,"nodeType":"Return","src":"10358:107:17"}]},"documentation":{"id":3864,"nodeType":"StructuredDocumentation","src":"10214:65:17","text":"@dev check if auction is open\n @param id , auction id"},"functionSelector":"0ad48628","id":3887,"implemented":true,"kind":"function","modifiers":[],"name":"isAuctionOpen","nameLocation":"10294:13:17","nodeType":"FunctionDefinition","parameters":{"id":3867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3866,"mutability":"mutable","name":"id","nameLocation":"10316:2:17","nodeType":"VariableDeclaration","scope":3887,"src":"10308:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"10308:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10307:12:17"},"returnParameters":{"id":3870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3887,"src":"10341:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3868,"name":"bool","nodeType":"ElementaryTypeName","src":"10341:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10340:6:17"},"scope":3926,"src":"10285:188:17","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3924,"nodeType":"Block","src":"10549:270:17","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3894,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"10564:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10574:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10564:11:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3899,"nodeType":"IfStatement","src":"10560:50:17","trueBody":{"id":3898,"nodeType":"Block","src":"10577:33:17","statements":[{"functionReturnParameters":3893,"id":3897,"nodeType":"Return","src":"10592:7:17"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3901,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"10628:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10642:1:17","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10634:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3902,"name":"address","nodeType":"ElementaryTypeName","src":"10634:7:17","typeDescriptions":{}}},"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10634:10:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10628:16:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4572726f722c2063616e6e6f74207472616e7366657220746f2061646472657373283029","id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10646:38:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59","typeString":"literal_string \"Error, cannot transfer to address(0)\""},"value":"Error, cannot transfer to address(0)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59","typeString":"literal_string \"Error, cannot transfer to address(0)\""}],"id":3900,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10620:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10620:65:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3909,"nodeType":"ExpressionStatement","src":"10620:65:17"},{"assignments":[3911,null],"declarations":[{"constant":false,"id":3911,"mutability":"mutable","name":"transferSent","nameLocation":"10704:12:17","nodeType":"VariableDeclaration","scope":3924,"src":"10699:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3910,"name":"bool","nodeType":"ElementaryTypeName","src":"10699:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":3918,"initialValue":{"arguments":[{"hexValue":"","id":3916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10745:2:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":3912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3889,"src":"10722:2:17","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10725:4:17","memberName":"call","nodeType":"MemberAccess","src":"10722:7:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":3914,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"10737:6:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"10722:22:17","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10722:26:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"10698:50:17"},{"expression":{"arguments":[{"id":3920,"name":"transferSent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3911,"src":"10767:12:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4572726f722c206661696c656420746f2073656e64204574686572","id":3921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10781:29:17","typeDescriptions":{"typeIdentifier":"t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1","typeString":"literal_string \"Error, failed to send Ether\""},"value":"Error, failed to send Ether"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1","typeString":"literal_string \"Error, failed to send Ether\""}],"id":3919,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10759:7:17","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10759:52:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3923,"nodeType":"ExpressionStatement","src":"10759:52:17"}]},"id":3925,"implemented":true,"kind":"function","modifiers":[],"name":"_transferFund","nameLocation":"10490:13:17","nodeType":"FunctionDefinition","parameters":{"id":3892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3889,"mutability":"mutable","name":"to","nameLocation":"10520:2:17","nodeType":"VariableDeclaration","scope":3925,"src":"10504:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":3888,"name":"address","nodeType":"ElementaryTypeName","src":"10504:15:17","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":3891,"mutability":"mutable","name":"amount","nameLocation":"10532:6:17","nodeType":"VariableDeclaration","scope":3925,"src":"10524:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"10524:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10503:36:17"},"returnParameters":{"id":3893,"nodeType":"ParameterList","parameters":[],"src":"10549:0:17"},"scope":3926,"src":"10481:338:17","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3927,"src":"321:10511:17","usedErrors":[]}],"src":"33:10799:17"},"id":17}},"contracts":{"@openzeppelin/contracts/interfaces/IERC4906.sol":{"IERC4906":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"EIP-721 Metadata Update Extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\nimport \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":38,"contract":"@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"constructor":{"details":"Initializes the contract by setting a `name` and a `symbol` to the token collection."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_155":{"entryPoint":null,"id":155,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":376,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":451,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":502,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":99,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":278,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":746,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":635,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":1067,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":1028,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":902,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1222,"id":null,"parameterSlots":2,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":332,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":693,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1192,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":193,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":892,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1160,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":646,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":146,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":942,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":119,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":124,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":114,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":109,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":129,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":783,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1147,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":1000,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":796,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":952,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":995,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8574:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"423:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:18"},"nodeType":"YulFunctionCall","src":"433:12:18"},"nodeType":"YulExpressionStatement","src":"433:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:18"},{"body":{"nodeType":"YulBlock","src":"546:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:18"},"nodeType":"YulFunctionCall","src":"556:12:18"},"nodeType":"YulExpressionStatement","src":"556:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:18"},{"body":{"nodeType":"YulBlock","src":"628:54:18","statements":[{"nodeType":"YulAssignment","src":"638:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:18"},"nodeType":"YulFunctionCall","src":"652:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:18"},"nodeType":"YulFunctionCall","src":"668:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:18"},"nodeType":"YulFunctionCall","src":"648:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:18","type":""}],"src":"580:102:18"},{"body":{"nodeType":"YulBlock","src":"716:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:18"},"nodeType":"YulFunctionCall","src":"726:88:18"},"nodeType":"YulExpressionStatement","src":"726:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:18"},"nodeType":"YulFunctionCall","src":"823:15:18"},"nodeType":"YulExpressionStatement","src":"823:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:18"},"nodeType":"YulFunctionCall","src":"847:15:18"},"nodeType":"YulExpressionStatement","src":"847:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:18"},{"body":{"nodeType":"YulBlock","src":"917:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:18"},"nodeType":"YulFunctionCall","src":"957:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:18"},"nodeType":"YulFunctionCall","src":"945:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:18"},"nodeType":"YulFunctionCall","src":"1098:18:18"},"nodeType":"YulExpressionStatement","src":"1098:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:18"},"nodeType":"YulFunctionCall","src":"1036:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:18"},"nodeType":"YulFunctionCall","src":"1072:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:18"},"nodeType":"YulFunctionCall","src":"1033:62:18"},"nodeType":"YulIf","src":"1030:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:18"},"nodeType":"YulFunctionCall","src":"1127:22:18"},"nodeType":"YulExpressionStatement","src":"1127:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:18","type":""}],"src":"874:281:18"},{"body":{"nodeType":"YulBlock","src":"1202:88:18","statements":[{"nodeType":"YulAssignment","src":"1212:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:18"},"nodeType":"YulFunctionCall","src":"1222:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:18"},"nodeType":"YulFunctionCall","src":"1251:33:18"},"nodeType":"YulExpressionStatement","src":"1251:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:18","type":""}],"src":"1161:129:18"},{"body":{"nodeType":"YulBlock","src":"1363:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:18"},"nodeType":"YulFunctionCall","src":"1470:18:18"},"nodeType":"YulExpressionStatement","src":"1470:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:18"},"nodeType":"YulFunctionCall","src":"1437:30:18"},"nodeType":"YulIf","src":"1434:56:18"},{"nodeType":"YulAssignment","src":"1500:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:18"},"nodeType":"YulFunctionCall","src":"1508:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:18"}]},{"nodeType":"YulAssignment","src":"1574:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:18"},"nodeType":"YulFunctionCall","src":"1582:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:18","type":""}],"src":"1296:308:18"},{"body":{"nodeType":"YulBlock","src":"1672:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1682:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1691:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1686:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1751:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1776:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1781:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:18"},"nodeType":"YulFunctionCall","src":"1772:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1795:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1800:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1791:3:18"},"nodeType":"YulFunctionCall","src":"1791:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1785:5:18"},"nodeType":"YulFunctionCall","src":"1785:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1765:6:18"},"nodeType":"YulFunctionCall","src":"1765:39:18"},"nodeType":"YulExpressionStatement","src":"1765:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1715:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1709:2:18"},"nodeType":"YulFunctionCall","src":"1709:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1723:19:18","statements":[{"nodeType":"YulAssignment","src":"1725:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1734:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1737:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:18"},"nodeType":"YulFunctionCall","src":"1730:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1725:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1705:3:18","statements":[]},"src":"1701:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1834:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1839:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1830:3:18"},"nodeType":"YulFunctionCall","src":"1830:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"1848:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1823:6:18"},"nodeType":"YulFunctionCall","src":"1823:27:18"},"nodeType":"YulExpressionStatement","src":"1823:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1654:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1659:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1664:6:18","type":""}],"src":"1610:246:18"},{"body":{"nodeType":"YulBlock","src":"1957:339:18","statements":[{"nodeType":"YulAssignment","src":"1967:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2034:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"1992:41:18"},"nodeType":"YulFunctionCall","src":"1992:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"1976:15:18"},"nodeType":"YulFunctionCall","src":"1976:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1967:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2058:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"2065:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2051:6:18"},"nodeType":"YulFunctionCall","src":"2051:21:18"},"nodeType":"YulExpressionStatement","src":"2051:21:18"},{"nodeType":"YulVariableDeclaration","src":"2081:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2096:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2103:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2092:3:18"},"nodeType":"YulFunctionCall","src":"2092:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2085:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"2146:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2148:77:18"},"nodeType":"YulFunctionCall","src":"2148:79:18"},"nodeType":"YulExpressionStatement","src":"2148:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2127:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2132:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2123:3:18"},"nodeType":"YulFunctionCall","src":"2123:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"2141:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2120:2:18"},"nodeType":"YulFunctionCall","src":"2120:25:18"},"nodeType":"YulIf","src":"2117:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2273:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"2278:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2283:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2238:34:18"},"nodeType":"YulFunctionCall","src":"2238:52:18"},"nodeType":"YulExpressionStatement","src":"2238:52:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1930:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1935:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1943:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"1951:5:18","type":""}],"src":"1862:434:18"},{"body":{"nodeType":"YulBlock","src":"2389:282:18","statements":[{"body":{"nodeType":"YulBlock","src":"2438:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2440:77:18"},"nodeType":"YulFunctionCall","src":"2440:79:18"},"nodeType":"YulExpressionStatement","src":"2440:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2417:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2425:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2413:3:18"},"nodeType":"YulFunctionCall","src":"2413:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"2432:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2409:3:18"},"nodeType":"YulFunctionCall","src":"2409:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2402:6:18"},"nodeType":"YulFunctionCall","src":"2402:35:18"},"nodeType":"YulIf","src":"2399:122:18"},{"nodeType":"YulVariableDeclaration","src":"2530:27:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2550:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2544:5:18"},"nodeType":"YulFunctionCall","src":"2544:13:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2534:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2566:99:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2638:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"2646:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2634:3:18"},"nodeType":"YulFunctionCall","src":"2634:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"2653:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"2661:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2575:58:18"},"nodeType":"YulFunctionCall","src":"2575:90:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2566:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2367:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2375:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2383:5:18","type":""}],"src":"2316:355:18"},{"body":{"nodeType":"YulBlock","src":"2791:739:18","statements":[{"body":{"nodeType":"YulBlock","src":"2837:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2839:77:18"},"nodeType":"YulFunctionCall","src":"2839:79:18"},"nodeType":"YulExpressionStatement","src":"2839:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2812:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2821:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2808:3:18"},"nodeType":"YulFunctionCall","src":"2808:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"2833:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2804:3:18"},"nodeType":"YulFunctionCall","src":"2804:32:18"},"nodeType":"YulIf","src":"2801:119:18"},{"nodeType":"YulBlock","src":"2930:291:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2945:38:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2969:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2980:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2965:3:18"},"nodeType":"YulFunctionCall","src":"2965:17:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2959:5:18"},"nodeType":"YulFunctionCall","src":"2959:24:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2949:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3030:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3032:77:18"},"nodeType":"YulFunctionCall","src":"3032:79:18"},"nodeType":"YulExpressionStatement","src":"3032:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3002:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3010:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2999:2:18"},"nodeType":"YulFunctionCall","src":"2999:30:18"},"nodeType":"YulIf","src":"2996:117:18"},{"nodeType":"YulAssignment","src":"3127:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3183:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3194:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3179:3:18"},"nodeType":"YulFunctionCall","src":"3179:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3203:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3137:41:18"},"nodeType":"YulFunctionCall","src":"3137:74:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3127:6:18"}]}]},{"nodeType":"YulBlock","src":"3231:292:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3246:39:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3270:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"3281:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3266:3:18"},"nodeType":"YulFunctionCall","src":"3266:18:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3260:5:18"},"nodeType":"YulFunctionCall","src":"3260:25:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3250:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3332:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3334:77:18"},"nodeType":"YulFunctionCall","src":"3334:79:18"},"nodeType":"YulExpressionStatement","src":"3334:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3304:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3312:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3301:2:18"},"nodeType":"YulFunctionCall","src":"3301:30:18"},"nodeType":"YulIf","src":"3298:117:18"},{"nodeType":"YulAssignment","src":"3429:84:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3485:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3496:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3481:3:18"},"nodeType":"YulFunctionCall","src":"3481:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3505:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3439:41:18"},"nodeType":"YulFunctionCall","src":"3439:74:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3429:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2753:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2764:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2776:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2784:6:18","type":""}],"src":"2677:853:18"},{"body":{"nodeType":"YulBlock","src":"3595:40:18","statements":[{"nodeType":"YulAssignment","src":"3606:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3622:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3616:5:18"},"nodeType":"YulFunctionCall","src":"3616:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3606:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3588:6:18","type":""}],"src":"3536:99:18"},{"body":{"nodeType":"YulBlock","src":"3669:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3686:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3689:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:18"},"nodeType":"YulFunctionCall","src":"3679:88:18"},"nodeType":"YulExpressionStatement","src":"3679:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3783:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3786:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3776:6:18"},"nodeType":"YulFunctionCall","src":"3776:15:18"},"nodeType":"YulExpressionStatement","src":"3776:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3807:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3810:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3800:6:18"},"nodeType":"YulFunctionCall","src":"3800:15:18"},"nodeType":"YulExpressionStatement","src":"3800:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3641:180:18"},{"body":{"nodeType":"YulBlock","src":"3878:269:18","statements":[{"nodeType":"YulAssignment","src":"3888:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3902:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3908:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3898:3:18"},"nodeType":"YulFunctionCall","src":"3898:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3888:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"3919:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3949:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"3955:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3945:3:18"},"nodeType":"YulFunctionCall","src":"3945:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3923:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3996:51:18","statements":[{"nodeType":"YulAssignment","src":"4010:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4024:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4032:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4020:3:18"},"nodeType":"YulFunctionCall","src":"4020:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4010:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3976:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3969:6:18"},"nodeType":"YulFunctionCall","src":"3969:26:18"},"nodeType":"YulIf","src":"3966:81:18"},{"body":{"nodeType":"YulBlock","src":"4099:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4113:16:18"},"nodeType":"YulFunctionCall","src":"4113:18:18"},"nodeType":"YulExpressionStatement","src":"4113:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4063:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4086:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4094:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4083:2:18"},"nodeType":"YulFunctionCall","src":"4083:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4060:2:18"},"nodeType":"YulFunctionCall","src":"4060:38:18"},"nodeType":"YulIf","src":"4057:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3862:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3871:6:18","type":""}],"src":"3827:320:18"},{"body":{"nodeType":"YulBlock","src":"4207:87:18","statements":[{"nodeType":"YulAssignment","src":"4217:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4225:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4217:4:18"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4245:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"4248:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4238:6:18"},"nodeType":"YulFunctionCall","src":"4238:14:18"},"nodeType":"YulExpressionStatement","src":"4238:14:18"},{"nodeType":"YulAssignment","src":"4261:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4279:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4282:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4269:9:18"},"nodeType":"YulFunctionCall","src":"4269:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4261:4:18"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4194:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4202:4:18","type":""}],"src":"4153:141:18"},{"body":{"nodeType":"YulBlock","src":"4344:49:18","statements":[{"nodeType":"YulAssignment","src":"4354:33:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4372:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4379:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4368:3:18"},"nodeType":"YulFunctionCall","src":"4368:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"4384:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4364:3:18"},"nodeType":"YulFunctionCall","src":"4364:23:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4354:6:18"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4327:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4337:6:18","type":""}],"src":"4300:93:18"},{"body":{"nodeType":"YulBlock","src":"4452:54:18","statements":[{"nodeType":"YulAssignment","src":"4462:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"4487:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"4493:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4483:3:18"},"nodeType":"YulFunctionCall","src":"4483:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"4462:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"4427:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"4433:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"4443:8:18","type":""}],"src":"4399:107:18"},{"body":{"nodeType":"YulBlock","src":"4588:317:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4598:35:18","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"4619:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"4631:1:18","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4615:3:18"},"nodeType":"YulFunctionCall","src":"4615:18:18"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"4602:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4642:109:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4673:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4684:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4654:18:18"},"nodeType":"YulFunctionCall","src":"4654:97:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4646:4:18","type":""}]},{"nodeType":"YulAssignment","src":"4760:51:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"4791:9:18"},{"name":"toInsert","nodeType":"YulIdentifier","src":"4802:8:18"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"4772:18:18"},"nodeType":"YulFunctionCall","src":"4772:39:18"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4760:8:18"}]},{"nodeType":"YulAssignment","src":"4820:30:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4833:5:18"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"4844:4:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4840:3:18"},"nodeType":"YulFunctionCall","src":"4840:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4829:3:18"},"nodeType":"YulFunctionCall","src":"4829:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4820:5:18"}]},{"nodeType":"YulAssignment","src":"4859:40:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4872:5:18"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"4883:8:18"},{"name":"mask","nodeType":"YulIdentifier","src":"4893:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4879:3:18"},"nodeType":"YulFunctionCall","src":"4879:19:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4869:2:18"},"nodeType":"YulFunctionCall","src":"4869:30:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4859:6:18"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4549:5:18","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"4556:10:18","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"4568:8:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4581:6:18","type":""}],"src":"4512:393:18"},{"body":{"nodeType":"YulBlock","src":"4956:32:18","statements":[{"nodeType":"YulAssignment","src":"4966:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"4977:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4966:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4938:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4948:7:18","type":""}],"src":"4911:77:18"},{"body":{"nodeType":"YulBlock","src":"5026:28:18","statements":[{"nodeType":"YulAssignment","src":"5036:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5043:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5036:3:18"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5012:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5022:3:18","type":""}],"src":"4994:60:18"},{"body":{"nodeType":"YulBlock","src":"5120:82:18","statements":[{"nodeType":"YulAssignment","src":"5130:66:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5188:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5170:17:18"},"nodeType":"YulFunctionCall","src":"5170:24:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"5161:8:18"},"nodeType":"YulFunctionCall","src":"5161:34:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5143:17:18"},"nodeType":"YulFunctionCall","src":"5143:53:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"5130:9:18"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5100:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"5110:9:18","type":""}],"src":"5060:142:18"},{"body":{"nodeType":"YulBlock","src":"5255:28:18","statements":[{"nodeType":"YulAssignment","src":"5265:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"5272:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5265:3:18"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5241:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5251:3:18","type":""}],"src":"5208:75:18"},{"body":{"nodeType":"YulBlock","src":"5365:193:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5375:63:18","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"5430:7:18"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5399:30:18"},"nodeType":"YulFunctionCall","src":"5399:39:18"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"5379:16:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5454:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5494:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5488:5:18"},"nodeType":"YulFunctionCall","src":"5488:11:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5501:6:18"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"5533:16:18"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"5509:23:18"},"nodeType":"YulFunctionCall","src":"5509:41:18"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"5460:27:18"},"nodeType":"YulFunctionCall","src":"5460:91:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5447:6:18"},"nodeType":"YulFunctionCall","src":"5447:105:18"},"nodeType":"YulExpressionStatement","src":"5447:105:18"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5342:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5348:6:18","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"5356:7:18","type":""}],"src":"5289:269:18"},{"body":{"nodeType":"YulBlock","src":"5613:24:18","statements":[{"nodeType":"YulAssignment","src":"5623:8:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5630:1:18","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5623:3:18"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5609:3:18","type":""}],"src":"5564:73:18"},{"body":{"nodeType":"YulBlock","src":"5696:136:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5706:46:18","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"5720:30:18"},"nodeType":"YulFunctionCall","src":"5720:32:18"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"5710:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5805:4:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5811:6:18"},{"name":"zero_0","nodeType":"YulIdentifier","src":"5819:6:18"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5761:43:18"},"nodeType":"YulFunctionCall","src":"5761:65:18"},"nodeType":"YulExpressionStatement","src":"5761:65:18"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"5682:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"5688:6:18","type":""}],"src":"5643:189:18"},{"body":{"nodeType":"YulBlock","src":"5888:136:18","statements":[{"body":{"nodeType":"YulBlock","src":"5955:63:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5999:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"6006:1:18","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"5969:29:18"},"nodeType":"YulFunctionCall","src":"5969:39:18"},"nodeType":"YulExpressionStatement","src":"5969:39:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5908:5:18"},{"name":"end","nodeType":"YulIdentifier","src":"5915:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5905:2:18"},"nodeType":"YulFunctionCall","src":"5905:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5920:26:18","statements":[{"nodeType":"YulAssignment","src":"5922:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"5935:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5942:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5931:3:18"},"nodeType":"YulFunctionCall","src":"5931:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"5922:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"5902:2:18","statements":[]},"src":"5898:120:18"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"5876:5:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"5883:3:18","type":""}],"src":"5838:186:18"},{"body":{"nodeType":"YulBlock","src":"6109:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"6135:431:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6149:54:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6197:5:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"6165:31:18"},"nodeType":"YulFunctionCall","src":"6165:38:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"6153:8:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6216:63:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6239:8:18"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6267:10:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6249:17:18"},"nodeType":"YulFunctionCall","src":"6249:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6235:3:18"},"nodeType":"YulFunctionCall","src":"6235:44:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"6220:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6436:27:18","statements":[{"nodeType":"YulAssignment","src":"6438:23:18","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"6453:8:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6438:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"6420:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"6432:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6417:2:18"},"nodeType":"YulFunctionCall","src":"6417:18:18"},"nodeType":"YulIf","src":"6414:49:18"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"6505:11:18"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"6522:8:18"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6550:3:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"6532:17:18"},"nodeType":"YulFunctionCall","src":"6532:22:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6518:3:18"},"nodeType":"YulFunctionCall","src":"6518:37:18"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"6476:28:18"},"nodeType":"YulFunctionCall","src":"6476:80:18"},"nodeType":"YulExpressionStatement","src":"6476:80:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"6126:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6131:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6123:2:18"},"nodeType":"YulFunctionCall","src":"6123:11:18"},"nodeType":"YulIf","src":"6120:446:18"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"6085:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"6092:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"6097:10:18","type":""}],"src":"6030:543:18"},{"body":{"nodeType":"YulBlock","src":"6642:54:18","statements":[{"nodeType":"YulAssignment","src":"6652:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"6677:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"6683:5:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6673:3:18"},"nodeType":"YulFunctionCall","src":"6673:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"6652:8:18"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"6617:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"6623:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"6633:8:18","type":""}],"src":"6579:117:18"},{"body":{"nodeType":"YulBlock","src":"6753:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6763:68:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6812:1:18","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"6815:5:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6808:3:18"},"nodeType":"YulFunctionCall","src":"6808:13:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6827:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6823:3:18"},"nodeType":"YulFunctionCall","src":"6823:6:18"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"6779:28:18"},"nodeType":"YulFunctionCall","src":"6779:51:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6775:3:18"},"nodeType":"YulFunctionCall","src":"6775:56:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"6767:4:18","type":""}]},{"nodeType":"YulAssignment","src":"6840:25:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6854:4:18"},{"name":"mask","nodeType":"YulIdentifier","src":"6860:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6850:3:18"},"nodeType":"YulFunctionCall","src":"6850:15:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"6840:6:18"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6730:4:18","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"6736:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"6746:6:18","type":""}],"src":"6702:169:18"},{"body":{"nodeType":"YulBlock","src":"6957:214:18","statements":[{"nodeType":"YulAssignment","src":"7090:37:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7117:4:18"},{"name":"len","nodeType":"YulIdentifier","src":"7123:3:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"7098:18:18"},"nodeType":"YulFunctionCall","src":"7098:29:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"7090:4:18"}]},{"nodeType":"YulAssignment","src":"7136:29:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"7147:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7157:1:18","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"7160:3:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7153:3:18"},"nodeType":"YulFunctionCall","src":"7153:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7144:2:18"},"nodeType":"YulFunctionCall","src":"7144:21:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"7136:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6938:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"6944:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"6952:4:18","type":""}],"src":"6876:295:18"},{"body":{"nodeType":"YulBlock","src":"7268:1303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7279:51:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7326:3:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7293:32:18"},"nodeType":"YulFunctionCall","src":"7293:37:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"7283:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7415:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7417:16:18"},"nodeType":"YulFunctionCall","src":"7417:18:18"},"nodeType":"YulExpressionStatement","src":"7417:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7387:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7395:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7384:2:18"},"nodeType":"YulFunctionCall","src":"7384:30:18"},"nodeType":"YulIf","src":"7381:56:18"},{"nodeType":"YulVariableDeclaration","src":"7447:52:18","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7493:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"7487:5:18"},"nodeType":"YulFunctionCall","src":"7487:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"7461:25:18"},"nodeType":"YulFunctionCall","src":"7461:38:18"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"7451:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7592:4:18"},{"name":"oldLen","nodeType":"YulIdentifier","src":"7598:6:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"7606:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"7546:45:18"},"nodeType":"YulFunctionCall","src":"7546:67:18"},"nodeType":"YulExpressionStatement","src":"7546:67:18"},{"nodeType":"YulVariableDeclaration","src":"7623:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7640:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"7627:9:18","type":""}]},{"nodeType":"YulAssignment","src":"7651:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7664:4:18","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"7651:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"7715:611:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7729:37:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7748:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7760:4:18","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7756:3:18"},"nodeType":"YulFunctionCall","src":"7756:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7744:3:18"},"nodeType":"YulFunctionCall","src":"7744:22:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"7733:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7780:51:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"7826:4:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"7794:31:18"},"nodeType":"YulFunctionCall","src":"7794:37:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"7784:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7844:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7853:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7848:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7912:163:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7937:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7955:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"7960:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7951:3:18"},"nodeType":"YulFunctionCall","src":"7951:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7945:5:18"},"nodeType":"YulFunctionCall","src":"7945:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"7930:6:18"},"nodeType":"YulFunctionCall","src":"7930:42:18"},"nodeType":"YulExpressionStatement","src":"7930:42:18"},{"nodeType":"YulAssignment","src":"7989:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8003:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8011:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7999:3:18"},"nodeType":"YulFunctionCall","src":"7999:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"7989:6:18"}]},{"nodeType":"YulAssignment","src":"8030:31:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8047:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8058:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8043:3:18"},"nodeType":"YulFunctionCall","src":"8043:18:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"8030:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7878:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"7881:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7875:2:18"},"nodeType":"YulFunctionCall","src":"7875:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7890:21:18","statements":[{"nodeType":"YulAssignment","src":"7892:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7901:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7904:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7897:3:18"},"nodeType":"YulFunctionCall","src":"7897:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7892:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7871:3:18","statements":[]},"src":"7867:208:18"},{"body":{"nodeType":"YulBlock","src":"8111:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8129:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8156:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8161:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8152:3:18"},"nodeType":"YulFunctionCall","src":"8152:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8146:5:18"},"nodeType":"YulFunctionCall","src":"8146:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"8133:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"8196:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"8223:9:18"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8238:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8246:4:18","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8234:3:18"},"nodeType":"YulFunctionCall","src":"8234:17:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"8204:18:18"},"nodeType":"YulFunctionCall","src":"8204:48:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8189:6:18"},"nodeType":"YulFunctionCall","src":"8189:64:18"},"nodeType":"YulExpressionStatement","src":"8189:64:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"8094:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"8103:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8091:2:18"},"nodeType":"YulFunctionCall","src":"8091:19:18"},"nodeType":"YulIf","src":"8088:179:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8287:4:18"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"8301:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8309:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8297:3:18"},"nodeType":"YulFunctionCall","src":"8297:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"8313:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8293:3:18"},"nodeType":"YulFunctionCall","src":"8293:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8280:6:18"},"nodeType":"YulFunctionCall","src":"8280:36:18"},"nodeType":"YulExpressionStatement","src":"8280:36:18"}]},"nodeType":"YulCase","src":"7708:618:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7713:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"8343:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8357:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"8370:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8361:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8394:67:18","statements":[{"nodeType":"YulAssignment","src":"8412:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8431:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"8436:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8427:3:18"},"nodeType":"YulFunctionCall","src":"8427:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8421:5:18"},"nodeType":"YulFunctionCall","src":"8421:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"8412:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"8387:6:18"},"nodeType":"YulIf","src":"8384:77:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"8481:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8540:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"8547:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"8487:52:18"},"nodeType":"YulFunctionCall","src":"8487:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"8474:6:18"},"nodeType":"YulFunctionCall","src":"8474:81:18"},"nodeType":"YulExpressionStatement","src":"8474:81:18"}]},"nodeType":"YulCase","src":"8335:230:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"7688:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7696:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7685:2:18"},"nodeType":"YulFunctionCall","src":"7685:14:18"},"nodeType":"YulSwitch","src":"7678:887:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"7257:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"7263:3:18","type":""}],"src":"7176:1395:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b50604051620026dd380380620026dd8339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61212080620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220284ee25fe50ff5ed6a8afdce160046c560382a7e6d15a931f6fb4ad3d1649e4464736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x26DD CODESIZE SUB DUP1 PUSH3 0x26DD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2120 DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x4E 0xE2 0x5F 0xE5 0xF CREATE2 0xED PUSH11 0x8AFDCE160046C560382A7E PUSH14 0x15A931F6FB4AD3D1649E4464736F PUSH13 0x63430008130033000000000000 ","sourceMap":"628:16377:4:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:16377;;7:75:18;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;628:16377:4:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1003":{"entryPoint":4485,"id":1003,"parameterSlots":4,"returnSlots":0},"@_approve_869":{"entryPoint":2573,"id":869,"parameterSlots":2,"returnSlots":0},"@_baseURI_306":{"entryPoint":4185,"id":306,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_990":{"entryPoint":4479,"id":990,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_977":{"entryPoint":4491,"id":977,"parameterSlots":4,"returnSlots":1},"@_exists_538":{"entryPoint":4414,"id":538,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_572":{"entryPoint":2758,"id":572,"parameterSlots":2,"returnSlots":1},"@_msgSender_1678":{"entryPoint":2565,"id":1678,"parameterSlots":0,"returnSlots":1},"@_ownerOf_520":{"entryPoint":3668,"id":520,"parameterSlots":1,"returnSlots":1},"@_requireMinted_915":{"entryPoint":2490,"id":915,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_507":{"entryPoint":4093,"id":507,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_901":{"entryPoint":3729,"id":901,"parameterSlots":3,"returnSlots":0},"@_transfer_845":{"entryPoint":2907,"id":845,"parameterSlots":3,"returnSlots":0},"@approve_349":{"entryPoint":1142,"id":349,"parameterSlots":2,"returnSlots":0},"@balanceOf_210":{"entryPoint":1683,"id":210,"parameterSlots":1,"returnSlots":1},"@getApproved_367":{"entryPoint":1072,"id":367,"parameterSlots":1,"returnSlots":1},"@isApprovedForAll_402":{"entryPoint":2236,"id":402,"parameterSlots":2,"returnSlots":1},"@isContract_1354":{"entryPoint":5221,"id":1354,"parameterSlots":1,"returnSlots":1},"@log10_2730":{"entryPoint":4882,"id":2730,"parameterSlots":1,"returnSlots":1},"@name_248":{"entryPoint":926,"id":248,"parameterSlots":0,"returnSlots":1},"@ownerOf_238":{"entryPoint":1549,"id":238,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_448":{"entryPoint":1517,"id":448,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_478":{"entryPoint":2034,"id":478,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_384":{"entryPoint":2012,"id":384,"parameterSlots":2,"returnSlots":0},"@supportsInterface_186":{"entryPoint":700,"id":186,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2014":{"entryPoint":2384,"id":2014,"parameterSlots":1,"returnSlots":1},"@symbol_258":{"entryPoint":1866,"id":258,"parameterSlots":0,"returnSlots":1},"@toString_1821":{"entryPoint":4208,"id":1821,"parameterSlots":1,"returnSlots":1},"@tokenURI_297":{"entryPoint":2132,"id":297,"parameterSlots":1,"returnSlots":1},"@transferFrom_429":{"entryPoint":1421,"id":429,"parameterSlots":3,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":6415,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":5855,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":6133,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":5343,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8360,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":6481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":5674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":6023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":6658,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":5940,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":6527,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":6154,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":5876,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":5364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8381,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":5695,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":5790,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":5421,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8227,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":5550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":7189,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":8085,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":7685,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":7831,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":7939,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":7443,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":7297,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":6897,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":7043,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":6068,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":7570,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":5805,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8284,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":5436,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5607,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7224,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8120,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7720,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7974,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7478,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7332,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6932,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":7078,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":6083,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":6324,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":5256,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":6351,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8199,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":5463,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8210,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":5474,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":7510,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":5772,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":5409,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":5276,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":5740,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":5641,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":6400,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":5491,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":6769,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6275,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x12":{"entryPoint":8152,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":6722,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":6228,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":6218,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":6223,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":5271,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":5266,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":5533,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":7110,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":8006,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":7606,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":7752,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":7898,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":7364,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":7256,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":6818,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":6964,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":5832,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":6110,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":5320,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":5651,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:23150:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"378:105:18","statements":[{"nodeType":"YulAssignment","src":"388:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:18","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:18"},"nodeType":"YulFunctionCall","src":"399:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:18"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:18","type":""}],"src":"334:149:18"},{"body":{"nodeType":"YulBlock","src":"531:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:18"},"nodeType":"YulFunctionCall","src":"589:12:18"},"nodeType":"YulExpressionStatement","src":"589:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:18"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:18"},"nodeType":"YulFunctionCall","src":"561:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:18"},"nodeType":"YulFunctionCall","src":"551:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:18"},"nodeType":"YulFunctionCall","src":"544:42:18"},"nodeType":"YulIf","src":"541:62:18"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:18","type":""}],"src":"489:120:18"},{"body":{"nodeType":"YulBlock","src":"666:86:18","statements":[{"nodeType":"YulAssignment","src":"676:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:18"},"nodeType":"YulFunctionCall","src":"685:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:18"},"nodeType":"YulFunctionCall","src":"714:32:18"},"nodeType":"YulExpressionStatement","src":"714:32:18"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:18","type":""}],"src":"615:137:18"},{"body":{"nodeType":"YulBlock","src":"823:262:18","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:18"},"nodeType":"YulFunctionCall","src":"871:79:18"},"nodeType":"YulExpressionStatement","src":"871:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:18"},"nodeType":"YulFunctionCall","src":"840:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:18"},"nodeType":"YulFunctionCall","src":"836:32:18"},"nodeType":"YulIf","src":"833:119:18"},{"nodeType":"YulBlock","src":"962:116:18","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:18"},"nodeType":"YulFunctionCall","src":"1036:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:18"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:18"},"nodeType":"YulFunctionCall","src":"1016:52:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:18","type":""}],"src":"758:327:18"},{"body":{"nodeType":"YulBlock","src":"1133:48:18","statements":[{"nodeType":"YulAssignment","src":"1143:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:18"},"nodeType":"YulFunctionCall","src":"1161:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:18"},"nodeType":"YulFunctionCall","src":"1154:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:18","type":""}],"src":"1091:90:18"},{"body":{"nodeType":"YulBlock","src":"1246:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:18"},"nodeType":"YulFunctionCall","src":"1268:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:18"},"nodeType":"YulFunctionCall","src":"1256:34:18"},"nodeType":"YulExpressionStatement","src":"1256:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:18","type":""}],"src":"1187:109:18"},{"body":{"nodeType":"YulBlock","src":"1394:118:18","statements":[{"nodeType":"YulAssignment","src":"1404:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:18"},"nodeType":"YulFunctionCall","src":"1412:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:18"},"nodeType":"YulFunctionCall","src":"1487:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:18"},"nodeType":"YulFunctionCall","src":"1440:65:18"},"nodeType":"YulExpressionStatement","src":"1440:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:18","type":""}],"src":"1302:210:18"},{"body":{"nodeType":"YulBlock","src":"1577:40:18","statements":[{"nodeType":"YulAssignment","src":"1588:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:18"},"nodeType":"YulFunctionCall","src":"1598:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:18","type":""}],"src":"1518:99:18"},{"body":{"nodeType":"YulBlock","src":"1719:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:18"},"nodeType":"YulFunctionCall","src":"1729:19:18"},"nodeType":"YulExpressionStatement","src":"1729:19:18"},{"nodeType":"YulAssignment","src":"1757:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:18"},"nodeType":"YulFunctionCall","src":"1772:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:18","type":""}],"src":"1623:169:18"},{"body":{"nodeType":"YulBlock","src":"1860:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:18"},"nodeType":"YulFunctionCall","src":"1960:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:18"},"nodeType":"YulFunctionCall","src":"1979:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:18"},"nodeType":"YulFunctionCall","src":"1973:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:18"},"nodeType":"YulFunctionCall","src":"1953:39:18"},"nodeType":"YulExpressionStatement","src":"1953:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:18"},"nodeType":"YulFunctionCall","src":"1897:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:18","statements":[{"nodeType":"YulAssignment","src":"1913:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:18"},"nodeType":"YulFunctionCall","src":"1918:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:18","statements":[]},"src":"1889:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:18"},"nodeType":"YulFunctionCall","src":"2018:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:18"},"nodeType":"YulFunctionCall","src":"2011:27:18"},"nodeType":"YulExpressionStatement","src":"2011:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:18","type":""}],"src":"1798:246:18"},{"body":{"nodeType":"YulBlock","src":"2098:54:18","statements":[{"nodeType":"YulAssignment","src":"2108:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:18"},"nodeType":"YulFunctionCall","src":"2122:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:18"},"nodeType":"YulFunctionCall","src":"2138:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:18"},"nodeType":"YulFunctionCall","src":"2118:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:18","type":""}],"src":"2050:102:18"},{"body":{"nodeType":"YulBlock","src":"2250:285:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:18"},"nodeType":"YulFunctionCall","src":"2274:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:18"},"nodeType":"YulFunctionCall","src":"2329:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:18"},"nodeType":"YulFunctionCall","src":"2444:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:18"},"nodeType":"YulFunctionCall","src":"2409:65:18"},"nodeType":"YulExpressionStatement","src":"2409:65:18"},{"nodeType":"YulAssignment","src":"2483:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:18"},"nodeType":"YulFunctionCall","src":"2499:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:18"},"nodeType":"YulFunctionCall","src":"2490:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:18","type":""}],"src":"2158:377:18"},{"body":{"nodeType":"YulBlock","src":"2659:195:18","statements":[{"nodeType":"YulAssignment","src":"2669:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:18"},"nodeType":"YulFunctionCall","src":"2677:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:18"},"nodeType":"YulFunctionCall","src":"2712:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:18"},"nodeType":"YulFunctionCall","src":"2731:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:18"},"nodeType":"YulFunctionCall","src":"2705:47:18"},"nodeType":"YulExpressionStatement","src":"2705:47:18"},{"nodeType":"YulAssignment","src":"2761:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:18"},"nodeType":"YulFunctionCall","src":"2769:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:18","type":""}],"src":"2541:313:18"},{"body":{"nodeType":"YulBlock","src":"2905:32:18","statements":[{"nodeType":"YulAssignment","src":"2915:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:18","type":""}],"src":"2860:77:18"},{"body":{"nodeType":"YulBlock","src":"2986:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:18"},"nodeType":"YulFunctionCall","src":"3045:12:18"},"nodeType":"YulExpressionStatement","src":"3045:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:18"},"nodeType":"YulFunctionCall","src":"3016:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:18"},"nodeType":"YulFunctionCall","src":"3006:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:18"},"nodeType":"YulFunctionCall","src":"2999:43:18"},"nodeType":"YulIf","src":"2996:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:18","type":""}],"src":"2943:122:18"},{"body":{"nodeType":"YulBlock","src":"3123:87:18","statements":[{"nodeType":"YulAssignment","src":"3133:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:18"},"nodeType":"YulFunctionCall","src":"3142:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:18"},"nodeType":"YulFunctionCall","src":"3171:33:18"},"nodeType":"YulExpressionStatement","src":"3171:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:18","type":""}],"src":"3071:139:18"},{"body":{"nodeType":"YulBlock","src":"3282:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:18"},"nodeType":"YulFunctionCall","src":"3330:79:18"},"nodeType":"YulExpressionStatement","src":"3330:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:18"},"nodeType":"YulFunctionCall","src":"3299:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:18"},"nodeType":"YulFunctionCall","src":"3295:32:18"},"nodeType":"YulIf","src":"3292:119:18"},{"nodeType":"YulBlock","src":"3421:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:18","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:18"},"nodeType":"YulFunctionCall","src":"3496:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:18"},"nodeType":"YulFunctionCall","src":"3475:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:18","type":""}],"src":"3216:329:18"},{"body":{"nodeType":"YulBlock","src":"3596:81:18","statements":[{"nodeType":"YulAssignment","src":"3606:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:18"},"nodeType":"YulFunctionCall","src":"3617:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:18","type":""}],"src":"3551:126:18"},{"body":{"nodeType":"YulBlock","src":"3728:51:18","statements":[{"nodeType":"YulAssignment","src":"3738:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:18"},"nodeType":"YulFunctionCall","src":"3749:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:18","type":""}],"src":"3683:96:18"},{"body":{"nodeType":"YulBlock","src":"3850:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:18"},"nodeType":"YulFunctionCall","src":"3872:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:18"},"nodeType":"YulFunctionCall","src":"3860:37:18"},"nodeType":"YulExpressionStatement","src":"3860:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:18","type":""}],"src":"3785:118:18"},{"body":{"nodeType":"YulBlock","src":"4007:124:18","statements":[{"nodeType":"YulAssignment","src":"4017:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:18"},"nodeType":"YulFunctionCall","src":"4025:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:18"},"nodeType":"YulFunctionCall","src":"4106:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:18"},"nodeType":"YulFunctionCall","src":"4053:71:18"},"nodeType":"YulExpressionStatement","src":"4053:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:18","type":""}],"src":"3909:222:18"},{"body":{"nodeType":"YulBlock","src":"4180:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:18"},"nodeType":"YulFunctionCall","src":"4239:12:18"},"nodeType":"YulExpressionStatement","src":"4239:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:18"},"nodeType":"YulFunctionCall","src":"4210:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:18"},"nodeType":"YulFunctionCall","src":"4200:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:18"},"nodeType":"YulFunctionCall","src":"4193:43:18"},"nodeType":"YulIf","src":"4190:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:18","type":""}],"src":"4137:122:18"},{"body":{"nodeType":"YulBlock","src":"4317:87:18","statements":[{"nodeType":"YulAssignment","src":"4327:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:18"},"nodeType":"YulFunctionCall","src":"4336:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:18"},"nodeType":"YulFunctionCall","src":"4365:33:18"},"nodeType":"YulExpressionStatement","src":"4365:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:18","type":""}],"src":"4265:139:18"},{"body":{"nodeType":"YulBlock","src":"4493:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:18"},"nodeType":"YulFunctionCall","src":"4541:79:18"},"nodeType":"YulExpressionStatement","src":"4541:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:18"},"nodeType":"YulFunctionCall","src":"4510:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:18"},"nodeType":"YulFunctionCall","src":"4506:32:18"},"nodeType":"YulIf","src":"4503:119:18"},{"nodeType":"YulBlock","src":"4632:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:18"},"nodeType":"YulFunctionCall","src":"4707:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:18"},"nodeType":"YulFunctionCall","src":"4686:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:18"}]}]},{"nodeType":"YulBlock","src":"4759:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:18","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:18"},"nodeType":"YulFunctionCall","src":"4835:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:18"},"nodeType":"YulFunctionCall","src":"4814:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:18","type":""}],"src":"4410:474:18"},{"body":{"nodeType":"YulBlock","src":"4990:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"5036:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5038:77:18"},"nodeType":"YulFunctionCall","src":"5038:79:18"},"nodeType":"YulExpressionStatement","src":"5038:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5011:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5020:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5007:3:18"},"nodeType":"YulFunctionCall","src":"5007:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5032:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5003:3:18"},"nodeType":"YulFunctionCall","src":"5003:32:18"},"nodeType":"YulIf","src":"5000:119:18"},{"nodeType":"YulBlock","src":"5129:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5144:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5158:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5148:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5173:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5208:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5219:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5204:3:18"},"nodeType":"YulFunctionCall","src":"5204:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5228:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5183:20:18"},"nodeType":"YulFunctionCall","src":"5183:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5173:6:18"}]}]},{"nodeType":"YulBlock","src":"5256:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5271:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5285:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5275:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5301:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5336:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5347:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5332:3:18"},"nodeType":"YulFunctionCall","src":"5332:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5356:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5311:20:18"},"nodeType":"YulFunctionCall","src":"5311:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5301:6:18"}]}]},{"nodeType":"YulBlock","src":"5384:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5399:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5413:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5403:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5429:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5464:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5475:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5460:3:18"},"nodeType":"YulFunctionCall","src":"5460:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5484:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5439:20:18"},"nodeType":"YulFunctionCall","src":"5439:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5429:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4944:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4955:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4967:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4975:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4983:6:18","type":""}],"src":"4890:619:18"},{"body":{"nodeType":"YulBlock","src":"5581:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"5627:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5629:77:18"},"nodeType":"YulFunctionCall","src":"5629:79:18"},"nodeType":"YulExpressionStatement","src":"5629:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5602:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"5611:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5598:3:18"},"nodeType":"YulFunctionCall","src":"5598:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"5623:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5594:3:18"},"nodeType":"YulFunctionCall","src":"5594:32:18"},"nodeType":"YulIf","src":"5591:119:18"},{"nodeType":"YulBlock","src":"5720:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5735:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5749:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5739:6:18","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:18"},"nodeType":"YulFunctionCall","src":"5795:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5774:20:18"},"nodeType":"YulFunctionCall","src":"5774:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5764:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5551:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5562:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5574:6:18","type":""}],"src":"5515:329:18"},{"body":{"nodeType":"YulBlock","src":"5915:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:18"},"nodeType":"YulFunctionCall","src":"5937:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:18"},"nodeType":"YulFunctionCall","src":"5925:37:18"},"nodeType":"YulExpressionStatement","src":"5925:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:18","type":""}],"src":"5850:118:18"},{"body":{"nodeType":"YulBlock","src":"6072:124:18","statements":[{"nodeType":"YulAssignment","src":"6082:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:18"},"nodeType":"YulFunctionCall","src":"6090:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:18"},"nodeType":"YulFunctionCall","src":"6171:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:18"},"nodeType":"YulFunctionCall","src":"6118:71:18"},"nodeType":"YulExpressionStatement","src":"6118:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:18","type":""}],"src":"5974:222:18"},{"body":{"nodeType":"YulBlock","src":"6242:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:18"},"nodeType":"YulFunctionCall","src":"6298:12:18"},"nodeType":"YulExpressionStatement","src":"6298:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:18"},"nodeType":"YulFunctionCall","src":"6272:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:18"},"nodeType":"YulFunctionCall","src":"6262:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:18"},"nodeType":"YulFunctionCall","src":"6255:40:18"},"nodeType":"YulIf","src":"6252:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:18","type":""}],"src":"6202:116:18"},{"body":{"nodeType":"YulBlock","src":"6373:84:18","statements":[{"nodeType":"YulAssignment","src":"6383:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:18"},"nodeType":"YulFunctionCall","src":"6392:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:18"},"nodeType":"YulFunctionCall","src":"6421:30:18"},"nodeType":"YulExpressionStatement","src":"6421:30:18"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:18","type":""}],"src":"6324:133:18"},{"body":{"nodeType":"YulBlock","src":"6543:388:18","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:18"},"nodeType":"YulFunctionCall","src":"6591:79:18"},"nodeType":"YulExpressionStatement","src":"6591:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:18"},"nodeType":"YulFunctionCall","src":"6560:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:18"},"nodeType":"YulFunctionCall","src":"6556:32:18"},"nodeType":"YulIf","src":"6553:119:18"},{"nodeType":"YulBlock","src":"6682:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:18"},"nodeType":"YulFunctionCall","src":"6757:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:18"},"nodeType":"YulFunctionCall","src":"6736:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:18"}]}]},{"nodeType":"YulBlock","src":"6809:115:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:18"},"nodeType":"YulFunctionCall","src":"6882:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:18"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:18"},"nodeType":"YulFunctionCall","src":"6864:50:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:18","type":""}],"src":"6463:468:18"},{"body":{"nodeType":"YulBlock","src":"7026:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:18"},"nodeType":"YulFunctionCall","src":"7036:12:18"},"nodeType":"YulExpressionStatement","src":"7036:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:18"},{"body":{"nodeType":"YulBlock","src":"7149:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:18"},"nodeType":"YulFunctionCall","src":"7159:12:18"},"nodeType":"YulExpressionStatement","src":"7159:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:18"},{"body":{"nodeType":"YulBlock","src":"7211:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:18"},"nodeType":"YulFunctionCall","src":"7221:88:18"},"nodeType":"YulExpressionStatement","src":"7221:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:18"},"nodeType":"YulFunctionCall","src":"7318:15:18"},"nodeType":"YulExpressionStatement","src":"7318:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:18"},"nodeType":"YulFunctionCall","src":"7342:15:18"},"nodeType":"YulExpressionStatement","src":"7342:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:18"},{"body":{"nodeType":"YulBlock","src":"7412:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:18"},"nodeType":"YulFunctionCall","src":"7452:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:18"},"nodeType":"YulFunctionCall","src":"7440:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:18"},"nodeType":"YulFunctionCall","src":"7593:18:18"},"nodeType":"YulExpressionStatement","src":"7593:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:18"},"nodeType":"YulFunctionCall","src":"7531:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:18"},"nodeType":"YulFunctionCall","src":"7567:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:18"},"nodeType":"YulFunctionCall","src":"7528:62:18"},"nodeType":"YulIf","src":"7525:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:18"},"nodeType":"YulFunctionCall","src":"7622:22:18"},"nodeType":"YulExpressionStatement","src":"7622:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:18","type":""}],"src":"7369:281:18"},{"body":{"nodeType":"YulBlock","src":"7697:88:18","statements":[{"nodeType":"YulAssignment","src":"7707:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:18"},"nodeType":"YulFunctionCall","src":"7717:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:18"},"nodeType":"YulFunctionCall","src":"7746:33:18"},"nodeType":"YulExpressionStatement","src":"7746:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:18","type":""}],"src":"7656:129:18"},{"body":{"nodeType":"YulBlock","src":"7857:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:18"},"nodeType":"YulFunctionCall","src":"7964:18:18"},"nodeType":"YulExpressionStatement","src":"7964:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:18"},"nodeType":"YulFunctionCall","src":"7931:30:18"},"nodeType":"YulIf","src":"7928:56:18"},{"nodeType":"YulAssignment","src":"7994:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:18"},"nodeType":"YulFunctionCall","src":"8002:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:18"}]},{"nodeType":"YulAssignment","src":"8068:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:18"},"nodeType":"YulFunctionCall","src":"8076:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:18"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:18","type":""}],"src":"7791:307:18"},{"body":{"nodeType":"YulBlock","src":"8168:82:18","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:18"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:18"},"nodeType":"YulFunctionCall","src":"8178:30:18"},"nodeType":"YulExpressionStatement","src":"8178:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:18"},"nodeType":"YulFunctionCall","src":"8224:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:18"},"nodeType":"YulFunctionCall","src":"8217:27:18"},"nodeType":"YulExpressionStatement","src":"8217:27:18"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:18","type":""}],"src":"8104:146:18"},{"body":{"nodeType":"YulBlock","src":"8339:340:18","statements":[{"nodeType":"YulAssignment","src":"8349:74:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:18"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:18"},"nodeType":"YulFunctionCall","src":"8374:48:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:18"},"nodeType":"YulFunctionCall","src":"8358:65:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:18"},"nodeType":"YulFunctionCall","src":"8432:21:18"},"nodeType":"YulExpressionStatement","src":"8432:21:18"},{"nodeType":"YulVariableDeclaration","src":"8462:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:18"},"nodeType":"YulFunctionCall","src":"8473:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:18"},"nodeType":"YulFunctionCall","src":"8529:79:18"},"nodeType":"YulExpressionStatement","src":"8529:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:18"},"nodeType":"YulFunctionCall","src":"8504:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:18"},"nodeType":"YulFunctionCall","src":"8501:25:18"},"nodeType":"YulIf","src":"8498:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:18"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:18"},"nodeType":"YulFunctionCall","src":"8619:54:18"},"nodeType":"YulExpressionStatement","src":"8619:54:18"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:18","type":""}],"src":"8256:423:18"},{"body":{"nodeType":"YulBlock","src":"8759:277:18","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:18"},"nodeType":"YulFunctionCall","src":"8810:79:18"},"nodeType":"YulExpressionStatement","src":"8810:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:18"},"nodeType":"YulFunctionCall","src":"8783:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:18"},"nodeType":"YulFunctionCall","src":"8779:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:18"},"nodeType":"YulFunctionCall","src":"8772:35:18"},"nodeType":"YulIf","src":"8769:122:18"},{"nodeType":"YulVariableDeclaration","src":"8900:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:18"},"nodeType":"YulFunctionCall","src":"8914:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:18"},"nodeType":"YulFunctionCall","src":"8999:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:18"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:18"},"nodeType":"YulFunctionCall","src":"8952:78:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:18"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:18","type":""}],"src":"8698:338:18"},{"body":{"nodeType":"YulBlock","src":"9168:817:18","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:18"},"nodeType":"YulFunctionCall","src":"9217:79:18"},"nodeType":"YulExpressionStatement","src":"9217:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:18"},"nodeType":"YulFunctionCall","src":"9185:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:18"},"nodeType":"YulFunctionCall","src":"9181:33:18"},"nodeType":"YulIf","src":"9178:120:18"},{"nodeType":"YulBlock","src":"9308:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:18"},"nodeType":"YulFunctionCall","src":"9383:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:18"},"nodeType":"YulFunctionCall","src":"9362:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:18"}]}]},{"nodeType":"YulBlock","src":"9435:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:18"},"nodeType":"YulFunctionCall","src":"9511:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:18"},"nodeType":"YulFunctionCall","src":"9490:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:18"}]}]},{"nodeType":"YulBlock","src":"9563:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:18"},"nodeType":"YulFunctionCall","src":"9639:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:18"},"nodeType":"YulFunctionCall","src":"9618:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:18"}]}]},{"nodeType":"YulBlock","src":"9691:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:18"},"nodeType":"YulFunctionCall","src":"9733:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:18"},"nodeType":"YulFunctionCall","src":"9720:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:18"},"nodeType":"YulFunctionCall","src":"9801:79:18"},"nodeType":"YulExpressionStatement","src":"9801:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:18"},"nodeType":"YulFunctionCall","src":"9768:30:18"},"nodeType":"YulIf","src":"9765:117:18"},{"nodeType":"YulAssignment","src":"9896:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:18"},"nodeType":"YulFunctionCall","src":"9936:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:18"},"nodeType":"YulFunctionCall","src":"9906:62:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:18","type":""}],"src":"9042:943:18"},{"body":{"nodeType":"YulBlock","src":"10074:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:18"},"nodeType":"YulFunctionCall","src":"10122:79:18"},"nodeType":"YulExpressionStatement","src":"10122:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:18"},"nodeType":"YulFunctionCall","src":"10091:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:18"},"nodeType":"YulFunctionCall","src":"10087:32:18"},"nodeType":"YulIf","src":"10084:119:18"},{"nodeType":"YulBlock","src":"10213:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:18"},"nodeType":"YulFunctionCall","src":"10288:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:18"},"nodeType":"YulFunctionCall","src":"10267:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:18"}]}]},{"nodeType":"YulBlock","src":"10340:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:18"},"nodeType":"YulFunctionCall","src":"10416:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:18"},"nodeType":"YulFunctionCall","src":"10395:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:18","type":""}],"src":"9991:474:18"},{"body":{"nodeType":"YulBlock","src":"10499:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:18"},"nodeType":"YulFunctionCall","src":"10509:88:18"},"nodeType":"YulExpressionStatement","src":"10509:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:18"},"nodeType":"YulFunctionCall","src":"10606:15:18"},"nodeType":"YulExpressionStatement","src":"10606:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:18"},"nodeType":"YulFunctionCall","src":"10630:15:18"},"nodeType":"YulExpressionStatement","src":"10630:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:18"},{"body":{"nodeType":"YulBlock","src":"10708:269:18","statements":[{"nodeType":"YulAssignment","src":"10718:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:18"},"nodeType":"YulFunctionCall","src":"10728:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:18"},"nodeType":"YulFunctionCall","src":"10775:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:18","statements":[{"nodeType":"YulAssignment","src":"10840:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:18"},"nodeType":"YulFunctionCall","src":"10850:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:18"},"nodeType":"YulFunctionCall","src":"10799:26:18"},"nodeType":"YulIf","src":"10796:81:18"},{"body":{"nodeType":"YulBlock","src":"10929:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:18"},"nodeType":"YulFunctionCall","src":"10943:18:18"},"nodeType":"YulExpressionStatement","src":"10943:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:18"},"nodeType":"YulFunctionCall","src":"10913:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:18"},"nodeType":"YulFunctionCall","src":"10890:38:18"},"nodeType":"YulIf","src":"10887:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:18","type":""}],"src":"10657:320:18"},{"body":{"nodeType":"YulBlock","src":"11089:114:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11111:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11119:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:18"},"nodeType":"YulFunctionCall","src":"11107:14:18"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"11123:34:18","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:18"},"nodeType":"YulFunctionCall","src":"11100:58:18"},"nodeType":"YulExpressionStatement","src":"11100:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11179:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"11187:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11175:3:18"},"nodeType":"YulFunctionCall","src":"11175:15:18"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"11192:3:18","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11168:6:18"},"nodeType":"YulFunctionCall","src":"11168:28:18"},"nodeType":"YulExpressionStatement","src":"11168:28:18"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11081:6:18","type":""}],"src":"10983:220:18"},{"body":{"nodeType":"YulBlock","src":"11355:220:18","statements":[{"nodeType":"YulAssignment","src":"11365:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11431:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"11436:2:18","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11372:58:18"},"nodeType":"YulFunctionCall","src":"11372:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11365:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11537:3:18"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"11448:88:18"},"nodeType":"YulFunctionCall","src":"11448:93:18"},"nodeType":"YulExpressionStatement","src":"11448:93:18"},{"nodeType":"YulAssignment","src":"11550:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11561:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"11566:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11557:3:18"},"nodeType":"YulFunctionCall","src":"11557:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11550:3:18"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11343:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11351:3:18","type":""}],"src":"11209:366:18"},{"body":{"nodeType":"YulBlock","src":"11752:248:18","statements":[{"nodeType":"YulAssignment","src":"11762:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11774:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11785:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11770:3:18"},"nodeType":"YulFunctionCall","src":"11770:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11762:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11809:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11820:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11805:3:18"},"nodeType":"YulFunctionCall","src":"11805:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11828:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11834:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11824:3:18"},"nodeType":"YulFunctionCall","src":"11824:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11798:6:18"},"nodeType":"YulFunctionCall","src":"11798:47:18"},"nodeType":"YulExpressionStatement","src":"11798:47:18"},{"nodeType":"YulAssignment","src":"11854:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11988:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11862:124:18"},"nodeType":"YulFunctionCall","src":"11862:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11854:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11732:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11747:4:18","type":""}],"src":"11581:419:18"},{"body":{"nodeType":"YulBlock","src":"12112:142:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12134:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12142:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12130:3:18"},"nodeType":"YulFunctionCall","src":"12130:14:18"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"12146:34:18","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12123:6:18"},"nodeType":"YulFunctionCall","src":"12123:58:18"},"nodeType":"YulExpressionStatement","src":"12123:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12202:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"12210:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12198:3:18"},"nodeType":"YulFunctionCall","src":"12198:15:18"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"12215:31:18","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12191:6:18"},"nodeType":"YulFunctionCall","src":"12191:56:18"},"nodeType":"YulExpressionStatement","src":"12191:56:18"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12104:6:18","type":""}],"src":"12006:248:18"},{"body":{"nodeType":"YulBlock","src":"12406:220:18","statements":[{"nodeType":"YulAssignment","src":"12416:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12482:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12487:2:18","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12423:58:18"},"nodeType":"YulFunctionCall","src":"12423:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12416:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12588:3:18"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"12499:88:18"},"nodeType":"YulFunctionCall","src":"12499:93:18"},"nodeType":"YulExpressionStatement","src":"12499:93:18"},{"nodeType":"YulAssignment","src":"12601:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12612:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"12617:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12608:3:18"},"nodeType":"YulFunctionCall","src":"12608:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12601:3:18"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12394:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12402:3:18","type":""}],"src":"12260:366:18"},{"body":{"nodeType":"YulBlock","src":"12803:248:18","statements":[{"nodeType":"YulAssignment","src":"12813:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12825:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12836:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12821:3:18"},"nodeType":"YulFunctionCall","src":"12821:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12813:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12860:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"12871:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12856:3:18"},"nodeType":"YulFunctionCall","src":"12856:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12879:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12885:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12875:3:18"},"nodeType":"YulFunctionCall","src":"12875:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12849:6:18"},"nodeType":"YulFunctionCall","src":"12849:47:18"},"nodeType":"YulExpressionStatement","src":"12849:47:18"},{"nodeType":"YulAssignment","src":"12905:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13039:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12913:124:18"},"nodeType":"YulFunctionCall","src":"12913:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12905:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12783:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12798:4:18","type":""}],"src":"12632:419:18"},{"body":{"nodeType":"YulBlock","src":"13163:126:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13185:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13193:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13181:3:18"},"nodeType":"YulFunctionCall","src":"13181:14:18"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"13197:34:18","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13174:6:18"},"nodeType":"YulFunctionCall","src":"13174:58:18"},"nodeType":"YulExpressionStatement","src":"13174:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13253:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"13261:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13249:3:18"},"nodeType":"YulFunctionCall","src":"13249:15:18"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"13266:15:18","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13242:6:18"},"nodeType":"YulFunctionCall","src":"13242:40:18"},"nodeType":"YulExpressionStatement","src":"13242:40:18"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13155:6:18","type":""}],"src":"13057:232:18"},{"body":{"nodeType":"YulBlock","src":"13441:220:18","statements":[{"nodeType":"YulAssignment","src":"13451:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13517:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13522:2:18","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13458:58:18"},"nodeType":"YulFunctionCall","src":"13458:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13451:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13623:3:18"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"13534:88:18"},"nodeType":"YulFunctionCall","src":"13534:93:18"},"nodeType":"YulExpressionStatement","src":"13534:93:18"},{"nodeType":"YulAssignment","src":"13636:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13647:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"13652:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13643:3:18"},"nodeType":"YulFunctionCall","src":"13643:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13636:3:18"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13429:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13437:3:18","type":""}],"src":"13295:366:18"},{"body":{"nodeType":"YulBlock","src":"13838:248:18","statements":[{"nodeType":"YulAssignment","src":"13848:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13860:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13871:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13856:3:18"},"nodeType":"YulFunctionCall","src":"13856:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13848:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13895:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"13906:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13891:3:18"},"nodeType":"YulFunctionCall","src":"13891:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13914:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13920:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13910:3:18"},"nodeType":"YulFunctionCall","src":"13910:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13884:6:18"},"nodeType":"YulFunctionCall","src":"13884:47:18"},"nodeType":"YulExpressionStatement","src":"13884:47:18"},{"nodeType":"YulAssignment","src":"13940:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14074:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13948:124:18"},"nodeType":"YulFunctionCall","src":"13948:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13940:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13818:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13833:4:18","type":""}],"src":"13667:419:18"},{"body":{"nodeType":"YulBlock","src":"14198:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14220:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14228:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14216:3:18"},"nodeType":"YulFunctionCall","src":"14216:14:18"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"14232:26:18","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14209:6:18"},"nodeType":"YulFunctionCall","src":"14209:50:18"},"nodeType":"YulExpressionStatement","src":"14209:50:18"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14190:6:18","type":""}],"src":"14092:174:18"},{"body":{"nodeType":"YulBlock","src":"14418:220:18","statements":[{"nodeType":"YulAssignment","src":"14428:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14494:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"14499:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14435:58:18"},"nodeType":"YulFunctionCall","src":"14435:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14428:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14600:3:18"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"14511:88:18"},"nodeType":"YulFunctionCall","src":"14511:93:18"},"nodeType":"YulExpressionStatement","src":"14511:93:18"},{"nodeType":"YulAssignment","src":"14613:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14624:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"14629:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14620:3:18"},"nodeType":"YulFunctionCall","src":"14620:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14613:3:18"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14406:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14414:3:18","type":""}],"src":"14272:366:18"},{"body":{"nodeType":"YulBlock","src":"14815:248:18","statements":[{"nodeType":"YulAssignment","src":"14825:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14837:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14848:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14833:3:18"},"nodeType":"YulFunctionCall","src":"14833:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14825:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14872:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"14883:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14868:3:18"},"nodeType":"YulFunctionCall","src":"14868:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14891:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"14897:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14887:3:18"},"nodeType":"YulFunctionCall","src":"14887:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14861:6:18"},"nodeType":"YulFunctionCall","src":"14861:47:18"},"nodeType":"YulExpressionStatement","src":"14861:47:18"},{"nodeType":"YulAssignment","src":"14917:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15051:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14925:124:18"},"nodeType":"YulFunctionCall","src":"14925:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14917:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14795:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14810:4:18","type":""}],"src":"14644:419:18"},{"body":{"nodeType":"YulBlock","src":"15175:122:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15197:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15205:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15193:3:18"},"nodeType":"YulFunctionCall","src":"15193:14:18"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"15209:34:18","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15186:6:18"},"nodeType":"YulFunctionCall","src":"15186:58:18"},"nodeType":"YulExpressionStatement","src":"15186:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15265:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15273:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15261:3:18"},"nodeType":"YulFunctionCall","src":"15261:15:18"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"15278:11:18","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15254:6:18"},"nodeType":"YulFunctionCall","src":"15254:36:18"},"nodeType":"YulExpressionStatement","src":"15254:36:18"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15167:6:18","type":""}],"src":"15069:228:18"},{"body":{"nodeType":"YulBlock","src":"15449:220:18","statements":[{"nodeType":"YulAssignment","src":"15459:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15525:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15530:2:18","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15466:58:18"},"nodeType":"YulFunctionCall","src":"15466:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15459:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15631:3:18"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"15542:88:18"},"nodeType":"YulFunctionCall","src":"15542:93:18"},"nodeType":"YulExpressionStatement","src":"15542:93:18"},{"nodeType":"YulAssignment","src":"15644:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15655:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"15660:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15651:3:18"},"nodeType":"YulFunctionCall","src":"15651:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15644:3:18"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15437:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15445:3:18","type":""}],"src":"15303:366:18"},{"body":{"nodeType":"YulBlock","src":"15846:248:18","statements":[{"nodeType":"YulAssignment","src":"15856:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15868:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15879:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15864:3:18"},"nodeType":"YulFunctionCall","src":"15864:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15856:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15903:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"15914:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15899:3:18"},"nodeType":"YulFunctionCall","src":"15899:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15922:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"15928:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15918:3:18"},"nodeType":"YulFunctionCall","src":"15918:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15892:6:18"},"nodeType":"YulFunctionCall","src":"15892:47:18"},"nodeType":"YulExpressionStatement","src":"15892:47:18"},{"nodeType":"YulAssignment","src":"15948:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16082:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15956:124:18"},"nodeType":"YulFunctionCall","src":"15956:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15948:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15826:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15841:4:18","type":""}],"src":"15675:419:18"},{"body":{"nodeType":"YulBlock","src":"16214:34:18","statements":[{"nodeType":"YulAssignment","src":"16224:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"16239:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16224:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16186:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"16191:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16202:11:18","type":""}],"src":"16100:148:18"},{"body":{"nodeType":"YulBlock","src":"16364:280:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16374:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16421:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16388:32:18"},"nodeType":"YulFunctionCall","src":"16388:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16378:6:18","type":""}]},{"nodeType":"YulAssignment","src":"16436:96:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16520:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"16525:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16443:76:18"},"nodeType":"YulFunctionCall","src":"16443:89:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16436:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16580:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"16587:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16576:3:18"},"nodeType":"YulFunctionCall","src":"16576:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"16594:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"16599:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"16541:34:18"},"nodeType":"YulFunctionCall","src":"16541:65:18"},"nodeType":"YulExpressionStatement","src":"16541:65:18"},{"nodeType":"YulAssignment","src":"16615:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16626:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"16631:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16622:3:18"},"nodeType":"YulFunctionCall","src":"16622:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16615:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16345:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16352:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16360:3:18","type":""}],"src":"16254:390:18"},{"body":{"nodeType":"YulBlock","src":"16834:251:18","statements":[{"nodeType":"YulAssignment","src":"16845:102:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16934:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"16943:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16852:81:18"},"nodeType":"YulFunctionCall","src":"16852:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16845:3:18"}]},{"nodeType":"YulAssignment","src":"16957:102:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17046:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"17055:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"16964:81:18"},"nodeType":"YulFunctionCall","src":"16964:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16957:3:18"}]},{"nodeType":"YulAssignment","src":"17069:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"17076:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17069:3:18"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16805:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16811:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16819:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16830:3:18","type":""}],"src":"16650:435:18"},{"body":{"nodeType":"YulBlock","src":"17197:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17219:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17227:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17215:3:18"},"nodeType":"YulFunctionCall","src":"17215:14:18"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"17231:34:18","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17208:6:18"},"nodeType":"YulFunctionCall","src":"17208:58:18"},"nodeType":"YulExpressionStatement","src":"17208:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17287:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17295:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17283:3:18"},"nodeType":"YulFunctionCall","src":"17283:15:18"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"17300:7:18","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17276:6:18"},"nodeType":"YulFunctionCall","src":"17276:32:18"},"nodeType":"YulExpressionStatement","src":"17276:32:18"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17189:6:18","type":""}],"src":"17091:224:18"},{"body":{"nodeType":"YulBlock","src":"17467:220:18","statements":[{"nodeType":"YulAssignment","src":"17477:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17543:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17548:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17484:58:18"},"nodeType":"YulFunctionCall","src":"17484:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17477:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17649:3:18"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"17560:88:18"},"nodeType":"YulFunctionCall","src":"17560:93:18"},"nodeType":"YulExpressionStatement","src":"17560:93:18"},{"nodeType":"YulAssignment","src":"17662:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17673:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"17678:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17669:3:18"},"nodeType":"YulFunctionCall","src":"17669:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17662:3:18"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17455:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17463:3:18","type":""}],"src":"17321:366:18"},{"body":{"nodeType":"YulBlock","src":"17864:248:18","statements":[{"nodeType":"YulAssignment","src":"17874:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17886:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17897:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17882:3:18"},"nodeType":"YulFunctionCall","src":"17882:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17874:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17921:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"17932:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17917:3:18"},"nodeType":"YulFunctionCall","src":"17917:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17940:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"17946:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17936:3:18"},"nodeType":"YulFunctionCall","src":"17936:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17910:6:18"},"nodeType":"YulFunctionCall","src":"17910:47:18"},"nodeType":"YulExpressionStatement","src":"17910:47:18"},{"nodeType":"YulAssignment","src":"17966:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18100:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17974:124:18"},"nodeType":"YulFunctionCall","src":"17974:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17966:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17844:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17859:4:18","type":""}],"src":"17693:419:18"},{"body":{"nodeType":"YulBlock","src":"18224:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18246:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18254:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18242:3:18"},"nodeType":"YulFunctionCall","src":"18242:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"18258:34:18","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18235:6:18"},"nodeType":"YulFunctionCall","src":"18235:58:18"},"nodeType":"YulExpressionStatement","src":"18235:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18314:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18322:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18310:3:18"},"nodeType":"YulFunctionCall","src":"18310:15:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"18327:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18303:6:18"},"nodeType":"YulFunctionCall","src":"18303:31:18"},"nodeType":"YulExpressionStatement","src":"18303:31:18"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18216:6:18","type":""}],"src":"18118:223:18"},{"body":{"nodeType":"YulBlock","src":"18493:220:18","statements":[{"nodeType":"YulAssignment","src":"18503:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18569:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18574:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18510:58:18"},"nodeType":"YulFunctionCall","src":"18510:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18503:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18675:3:18"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"18586:88:18"},"nodeType":"YulFunctionCall","src":"18586:93:18"},"nodeType":"YulExpressionStatement","src":"18586:93:18"},{"nodeType":"YulAssignment","src":"18688:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18699:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"18704:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18695:3:18"},"nodeType":"YulFunctionCall","src":"18695:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18688:3:18"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18481:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18489:3:18","type":""}],"src":"18347:366:18"},{"body":{"nodeType":"YulBlock","src":"18890:248:18","statements":[{"nodeType":"YulAssignment","src":"18900:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18912:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18923:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18908:3:18"},"nodeType":"YulFunctionCall","src":"18908:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18900:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18947:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18958:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18943:3:18"},"nodeType":"YulFunctionCall","src":"18943:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18966:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"18972:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18962:3:18"},"nodeType":"YulFunctionCall","src":"18962:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18936:6:18"},"nodeType":"YulFunctionCall","src":"18936:47:18"},"nodeType":"YulExpressionStatement","src":"18936:47:18"},{"nodeType":"YulAssignment","src":"18992:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19126:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19000:124:18"},"nodeType":"YulFunctionCall","src":"19000:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18992:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18870:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18885:4:18","type":""}],"src":"18719:419:18"},{"body":{"nodeType":"YulBlock","src":"19250:69:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"19272:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"19280:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19268:3:18"},"nodeType":"YulFunctionCall","src":"19268:14:18"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"19284:27:18","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19261:6:18"},"nodeType":"YulFunctionCall","src":"19261:51:18"},"nodeType":"YulExpressionStatement","src":"19261:51:18"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"19242:6:18","type":""}],"src":"19144:175:18"},{"body":{"nodeType":"YulBlock","src":"19471:220:18","statements":[{"nodeType":"YulAssignment","src":"19481:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19547:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19552:2:18","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19488:58:18"},"nodeType":"YulFunctionCall","src":"19488:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19481:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19653:3:18"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"19564:88:18"},"nodeType":"YulFunctionCall","src":"19564:93:18"},"nodeType":"YulExpressionStatement","src":"19564:93:18"},{"nodeType":"YulAssignment","src":"19666:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19677:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"19682:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19673:3:18"},"nodeType":"YulFunctionCall","src":"19673:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19666:3:18"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"19459:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"19467:3:18","type":""}],"src":"19325:366:18"},{"body":{"nodeType":"YulBlock","src":"19868:248:18","statements":[{"nodeType":"YulAssignment","src":"19878:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19890:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19901:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19886:3:18"},"nodeType":"YulFunctionCall","src":"19886:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19878:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19925:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19936:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19921:3:18"},"nodeType":"YulFunctionCall","src":"19921:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19944:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"19950:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19940:3:18"},"nodeType":"YulFunctionCall","src":"19940:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19914:6:18"},"nodeType":"YulFunctionCall","src":"19914:47:18"},"nodeType":"YulExpressionStatement","src":"19914:47:18"},{"nodeType":"YulAssignment","src":"19970:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20104:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19978:124:18"},"nodeType":"YulFunctionCall","src":"19978:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19970:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19848:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19863:4:18","type":""}],"src":"19697:419:18"},{"body":{"nodeType":"YulBlock","src":"20228:131:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20250:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20258:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20246:3:18"},"nodeType":"YulFunctionCall","src":"20246:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"20262:34:18","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20239:6:18"},"nodeType":"YulFunctionCall","src":"20239:58:18"},"nodeType":"YulExpressionStatement","src":"20239:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"20318:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"20326:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20314:3:18"},"nodeType":"YulFunctionCall","src":"20314:15:18"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"20331:20:18","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20307:6:18"},"nodeType":"YulFunctionCall","src":"20307:45:18"},"nodeType":"YulExpressionStatement","src":"20307:45:18"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"20220:6:18","type":""}],"src":"20122:237:18"},{"body":{"nodeType":"YulBlock","src":"20511:220:18","statements":[{"nodeType":"YulAssignment","src":"20521:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20587:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20592:2:18","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20528:58:18"},"nodeType":"YulFunctionCall","src":"20528:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20521:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20693:3:18"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"20604:88:18"},"nodeType":"YulFunctionCall","src":"20604:93:18"},"nodeType":"YulExpressionStatement","src":"20604:93:18"},{"nodeType":"YulAssignment","src":"20706:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20717:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"20722:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20713:3:18"},"nodeType":"YulFunctionCall","src":"20713:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"20706:3:18"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20499:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"20507:3:18","type":""}],"src":"20365:366:18"},{"body":{"nodeType":"YulBlock","src":"20908:248:18","statements":[{"nodeType":"YulAssignment","src":"20918:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20930:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20941:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20926:3:18"},"nodeType":"YulFunctionCall","src":"20926:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20918:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20965:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20976:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20961:3:18"},"nodeType":"YulFunctionCall","src":"20961:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20984:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"20990:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20980:3:18"},"nodeType":"YulFunctionCall","src":"20980:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20954:6:18"},"nodeType":"YulFunctionCall","src":"20954:47:18"},"nodeType":"YulExpressionStatement","src":"20954:47:18"},{"nodeType":"YulAssignment","src":"21010:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"21144:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21018:124:18"},"nodeType":"YulFunctionCall","src":"21018:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21010:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20888:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20903:4:18","type":""}],"src":"20737:419:18"},{"body":{"nodeType":"YulBlock","src":"21190:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21207:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21210:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21200:6:18"},"nodeType":"YulFunctionCall","src":"21200:88:18"},"nodeType":"YulExpressionStatement","src":"21200:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21304:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21307:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21297:6:18"},"nodeType":"YulFunctionCall","src":"21297:15:18"},"nodeType":"YulExpressionStatement","src":"21297:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21328:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21331:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21321:6:18"},"nodeType":"YulFunctionCall","src":"21321:15:18"},"nodeType":"YulExpressionStatement","src":"21321:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"21162:180:18"},{"body":{"nodeType":"YulBlock","src":"21406:40:18","statements":[{"nodeType":"YulAssignment","src":"21417:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21433:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21427:5:18"},"nodeType":"YulFunctionCall","src":"21427:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21417:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21389:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21399:6:18","type":""}],"src":"21348:98:18"},{"body":{"nodeType":"YulBlock","src":"21547:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21564:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"21569:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21557:6:18"},"nodeType":"YulFunctionCall","src":"21557:19:18"},"nodeType":"YulExpressionStatement","src":"21557:19:18"},{"nodeType":"YulAssignment","src":"21585:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21604:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"21609:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21600:3:18"},"nodeType":"YulFunctionCall","src":"21600:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21585:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21519:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"21524:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21535:11:18","type":""}],"src":"21452:168:18"},{"body":{"nodeType":"YulBlock","src":"21716:283:18","statements":[{"nodeType":"YulVariableDeclaration","src":"21726:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21772:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"21740:31:18"},"nodeType":"YulFunctionCall","src":"21740:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21730:6:18","type":""}]},{"nodeType":"YulAssignment","src":"21787:77:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21852:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"21857:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"21794:57:18"},"nodeType":"YulFunctionCall","src":"21794:70:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"21787:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21912:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"21919:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21908:3:18"},"nodeType":"YulFunctionCall","src":"21908:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"21926:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"21931:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"21873:34:18"},"nodeType":"YulFunctionCall","src":"21873:65:18"},"nodeType":"YulExpressionStatement","src":"21873:65:18"},{"nodeType":"YulAssignment","src":"21947:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21958:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21985:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"21963:21:18"},"nodeType":"YulFunctionCall","src":"21963:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21954:3:18"},"nodeType":"YulFunctionCall","src":"21954:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21947:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21697:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21704:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21712:3:18","type":""}],"src":"21626:373:18"},{"body":{"nodeType":"YulBlock","src":"22205:440:18","statements":[{"nodeType":"YulAssignment","src":"22215:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22227:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22238:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22223:3:18"},"nodeType":"YulFunctionCall","src":"22223:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22215:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22296:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22309:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22320:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22305:3:18"},"nodeType":"YulFunctionCall","src":"22305:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22252:43:18"},"nodeType":"YulFunctionCall","src":"22252:71:18"},"nodeType":"YulExpressionStatement","src":"22252:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"22377:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22390:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22401:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22386:3:18"},"nodeType":"YulFunctionCall","src":"22386:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"22333:43:18"},"nodeType":"YulFunctionCall","src":"22333:72:18"},"nodeType":"YulExpressionStatement","src":"22333:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"22459:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22472:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22483:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22468:3:18"},"nodeType":"YulFunctionCall","src":"22468:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"22415:43:18"},"nodeType":"YulFunctionCall","src":"22415:72:18"},"nodeType":"YulExpressionStatement","src":"22415:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22508:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22519:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22504:3:18"},"nodeType":"YulFunctionCall","src":"22504:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22528:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22534:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22524:3:18"},"nodeType":"YulFunctionCall","src":"22524:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22497:6:18"},"nodeType":"YulFunctionCall","src":"22497:48:18"},"nodeType":"YulExpressionStatement","src":"22497:48:18"},{"nodeType":"YulAssignment","src":"22554:84:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"22624:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"22633:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22562:61:18"},"nodeType":"YulFunctionCall","src":"22562:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22554:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22153:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22165:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22173:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22181:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22189:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22200:4:18","type":""}],"src":"22005:640:18"},{"body":{"nodeType":"YulBlock","src":"22713:79:18","statements":[{"nodeType":"YulAssignment","src":"22723:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22738:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22732:5:18"},"nodeType":"YulFunctionCall","src":"22732:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"22723:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22780:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"22754:25:18"},"nodeType":"YulFunctionCall","src":"22754:32:18"},"nodeType":"YulExpressionStatement","src":"22754:32:18"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22691:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"22699:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"22707:5:18","type":""}],"src":"22651:141:18"},{"body":{"nodeType":"YulBlock","src":"22874:273:18","statements":[{"body":{"nodeType":"YulBlock","src":"22920:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22922:77:18"},"nodeType":"YulFunctionCall","src":"22922:79:18"},"nodeType":"YulExpressionStatement","src":"22922:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22895:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22904:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22891:3:18"},"nodeType":"YulFunctionCall","src":"22891:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"22916:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22887:3:18"},"nodeType":"YulFunctionCall","src":"22887:32:18"},"nodeType":"YulIf","src":"22884:119:18"},{"nodeType":"YulBlock","src":"23013:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"23028:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"23042:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23032:6:18","type":""}]},{"nodeType":"YulAssignment","src":"23057:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23102:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"23113:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23098:3:18"},"nodeType":"YulFunctionCall","src":"23098:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23122:7:18"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"23067:30:18"},"nodeType":"YulFunctionCall","src":"23067:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23057:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22844:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22855:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22867:6:18","type":""}],"src":"22798:349:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e991906114f4565b6102bc565b6040516100fb919061153c565b60405180910390f35b61010c61039e565b60405161011991906115e7565b60405180910390f35b61013c6004803603810190610137919061163f565b610430565b60405161014991906116ad565b60405180910390f35b61016c600480360381019061016791906116f4565b610476565b005b61018860048036038101906101839190611734565b61058d565b005b6101a4600480360381019061019f9190611734565b6105ed565b005b6101c060048036038101906101bb919061163f565b61060d565b6040516101cd91906116ad565b60405180910390f35b6101f060048036038101906101eb9190611787565b610693565b6040516101fd91906117c3565b60405180910390f35b61020e61074a565b60405161021b91906115e7565b60405180910390f35b61023e6004803603810190610239919061180a565b6107dc565b005b61025a6004803603810190610255919061197f565b6107f2565b005b6102766004803603810190610271919061163f565b610854565b60405161028391906115e7565b60405180910390f35b6102a660048036038101906102a19190611a02565b6108bc565b6040516102b3919061153c565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610397575061039682610950565b5b9050919050565b6060600080546103ad90611a71565b80601f01602080910402602001604051908101604052809291908181526020018280546103d990611a71565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b826109ba565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e890611b14565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610a05565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610a05565b6108bc565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611ba6565b60405180910390fd5b6105888383610a0d565b505050565b61059e610598610a05565b82610ac6565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611c38565b60405180910390fd5b6105e8838383610b5b565b505050565b610608838383604051806020016040528060008152506107f2565b505050565b60008061061983610e54565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611ca4565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611d36565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461075990611a71565b80601f016020809104026020016040519081016040528092919081815260200182805461078590611a71565b80156107d25780601f106107a7576101008083540402835291602001916107d2565b820191906000526020600020905b8154815290600101906020018083116107b557829003601f168201915b5050505050905090565b6107ee6107e7610a05565b8383610e91565b5050565b6108036107fd610a05565b83610ac6565b610842576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083990611c38565b60405180910390fd5b61084e84848484610ffd565b50505050565b606061085f826109ba565b6000610869611059565b9050600081511161088957604051806020016040528060008152506108b4565b8061089384611070565b6040516020016108a4929190611d92565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109c38161113e565b610a02576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f990611ca4565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a808361060d565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610ad28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b145750610b1381856108bc565b5b80610b5257508373ffffffffffffffffffffffffffffffffffffffff16610b3a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b7b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610bd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bc890611e28565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c40576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3790611eba565b60405180910390fd5b610c4d838383600161117f565b8273ffffffffffffffffffffffffffffffffffffffff16610c6d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610cc3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cba90611e28565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610e4f8383836001611185565b505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ef690611f26565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ff0919061153c565b60405180910390a3505050565b611008848484610b5b565b6110148484848461118b565b611053576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104a90611fb8565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b60606000600161107f84611312565b01905060008167ffffffffffffffff81111561109e5761109d611854565b5b6040519080825280601f01601f1916602001820160405280156110d05781602001600182028036833780820191505090505b509050600082602001820190505b600115611133578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161112757611126611fd8565b5b049450600085036110de575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff1661116083610e54565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b60006111ac8473ffffffffffffffffffffffffffffffffffffffff16611465565b15611305578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111d5610a05565b8786866040518563ffffffff1660e01b81526004016111f7949392919061205c565b6020604051808303816000875af192505050801561123357506040513d601f19601f8201168201806040525081019061123091906120bd565b60015b6112b5573d8060008114611263576040519150601f19603f3d011682016040523d82523d6000602084013e611268565b606091505b5060008151036112ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a490611fb8565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161491505061130a565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611370577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161136657611365611fd8565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106113ad576d04ee2d6d415b85acef810000000083816113a3576113a2611fd8565b5b0492506020810190505b662386f26fc1000083106113dc57662386f26fc1000083816113d2576113d1611fd8565b5b0492506010810190505b6305f5e1008310611405576305f5e10083816113fb576113fa611fd8565b5b0492506008810190505b612710831061142a5761271083816114205761141f611fd8565b5b0492506004810190505b6064831061144d576064838161144357611442611fd8565b5b0492506002810190505b600a831061145c576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6114d18161149c565b81146114dc57600080fd5b50565b6000813590506114ee816114c8565b92915050565b60006020828403121561150a57611509611492565b5b6000611518848285016114df565b91505092915050565b60008115159050919050565b61153681611521565b82525050565b6000602082019050611551600083018461152d565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611591578082015181840152602081019050611576565b60008484015250505050565b6000601f19601f8301169050919050565b60006115b982611557565b6115c38185611562565b93506115d3818560208601611573565b6115dc8161159d565b840191505092915050565b6000602082019050818103600083015261160181846115ae565b905092915050565b6000819050919050565b61161c81611609565b811461162757600080fd5b50565b60008135905061163981611613565b92915050565b60006020828403121561165557611654611492565b5b60006116638482850161162a565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006116978261166c565b9050919050565b6116a78161168c565b82525050565b60006020820190506116c2600083018461169e565b92915050565b6116d18161168c565b81146116dc57600080fd5b50565b6000813590506116ee816116c8565b92915050565b6000806040838503121561170b5761170a611492565b5b6000611719858286016116df565b925050602061172a8582860161162a565b9150509250929050565b60008060006060848603121561174d5761174c611492565b5b600061175b868287016116df565b935050602061176c868287016116df565b925050604061177d8682870161162a565b9150509250925092565b60006020828403121561179d5761179c611492565b5b60006117ab848285016116df565b91505092915050565b6117bd81611609565b82525050565b60006020820190506117d860008301846117b4565b92915050565b6117e781611521565b81146117f257600080fd5b50565b600081359050611804816117de565b92915050565b6000806040838503121561182157611820611492565b5b600061182f858286016116df565b9250506020611840858286016117f5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61188c8261159d565b810181811067ffffffffffffffff821117156118ab576118aa611854565b5b80604052505050565b60006118be611488565b90506118ca8282611883565b919050565b600067ffffffffffffffff8211156118ea576118e9611854565b5b6118f38261159d565b9050602081019050919050565b82818337600083830152505050565b600061192261191d846118cf565b6118b4565b90508281526020810184848401111561193e5761193d61184f565b5b611949848285611900565b509392505050565b600082601f8301126119665761196561184a565b5b813561197684826020860161190f565b91505092915050565b6000806000806080858703121561199957611998611492565b5b60006119a7878288016116df565b94505060206119b8878288016116df565b93505060406119c98782880161162a565b925050606085013567ffffffffffffffff8111156119ea576119e9611497565b5b6119f687828801611951565b91505092959194509250565b60008060408385031215611a1957611a18611492565b5b6000611a27858286016116df565b9250506020611a38858286016116df565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611a8957607f821691505b602082108103611a9c57611a9b611a42565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000611afe602183611562565b9150611b0982611aa2565b604082019050919050565b60006020820190508181036000830152611b2d81611af1565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611b90603d83611562565b9150611b9b82611b34565b604082019050919050565b60006020820190508181036000830152611bbf81611b83565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611c22602d83611562565b9150611c2d82611bc6565b604082019050919050565b60006020820190508181036000830152611c5181611c15565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611c8e601883611562565b9150611c9982611c58565b602082019050919050565b60006020820190508181036000830152611cbd81611c81565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611d20602983611562565b9150611d2b82611cc4565b604082019050919050565b60006020820190508181036000830152611d4f81611d13565b9050919050565b600081905092915050565b6000611d6c82611557565b611d768185611d56565b9350611d86818560208601611573565b80840191505092915050565b6000611d9e8285611d61565b9150611daa8284611d61565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611e12602583611562565b9150611e1d82611db6565b604082019050919050565b60006020820190508181036000830152611e4181611e05565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611ea4602483611562565b9150611eaf82611e48565b604082019050919050565b60006020820190508181036000830152611ed381611e97565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611f10601983611562565b9150611f1b82611eda565b602082019050919050565b60006020820190508181036000830152611f3f81611f03565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611fa2603283611562565b9150611fad82611f46565b604082019050919050565b60006020820190508181036000830152611fd181611f95565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600081519050919050565b600082825260208201905092915050565b600061202e82612007565b6120388185612012565b9350612048818560208601611573565b6120518161159d565b840191505092915050565b6000608082019050612071600083018761169e565b61207e602083018661169e565b61208b60408301856117b4565b818103606083015261209d8184612023565b905095945050505050565b6000815190506120b7816114c8565b92915050565b6000602082840312156120d3576120d2611492565b5b60006120e1848285016120a8565b9150509291505056fea2646970667358221220284ee25fe50ff5ed6a8afdce160046c560382a7e6d15a931f6fb4ad3d1649e4464736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x14F4 JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x16F4 JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x1734 JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x17C3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x74A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x180A JUMP JUMPDEST PUSH2 0x7DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x197F JUMP JUMPDEST PUSH2 0x7F2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x163F JUMP JUMPDEST PUSH2 0x854 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x15E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1A02 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x950 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x1B14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0xA05 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0xA05 JUMP JUMPDEST PUSH2 0x8BC JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1BA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0xA0D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0xA05 JUMP JUMPDEST DUP3 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xB5B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xE54 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1D36 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x759 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x785 SWAP1 PUSH2 0x1A71 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7D2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7A7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7D2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7B5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7EE PUSH2 0x7E7 PUSH2 0xA05 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xE91 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x803 PUSH2 0x7FD PUSH2 0xA05 JUMP JUMPDEST DUP4 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0x842 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x839 SWAP1 PUSH2 0x1C38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x84E DUP5 DUP5 DUP5 DUP5 PUSH2 0xFFD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x85F DUP3 PUSH2 0x9BA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x869 PUSH2 0x1059 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x889 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8B4 JUMP JUMPDEST DUP1 PUSH2 0x893 DUP5 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8A4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D92 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9C3 DUP2 PUSH2 0x113E JUMP JUMPDEST PUSH2 0xA02 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F9 SWAP1 PUSH2 0x1CA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA80 DUP4 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xAD2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB14 JUMPI POP PUSH2 0xB13 DUP2 DUP6 PUSH2 0x8BC JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xB52 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB7B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBD1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC37 SWAP1 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC4D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x117F JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC6D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCBA SWAP1 PUSH2 0x1E28 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE4F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1185 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEFF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF6 SWAP1 PUSH2 0x1F26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xFF0 SWAP2 SWAP1 PUSH2 0x153C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x1008 DUP5 DUP5 DUP5 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x1014 DUP5 DUP5 DUP5 DUP5 PUSH2 0x118B JUMP JUMPDEST PUSH2 0x1053 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x104A SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x107F DUP5 PUSH2 0x1312 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x109E JUMPI PUSH2 0x109D PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x10D0 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x1133 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x1127 JUMPI PUSH2 0x1126 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x10DE JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1160 DUP4 PUSH2 0xE54 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11AC DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1465 JUMP JUMPDEST ISZERO PUSH2 0x1305 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x11D5 PUSH2 0xA05 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F7 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x205C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1233 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1230 SWAP2 SWAP1 PUSH2 0x20BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12B5 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1263 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1268 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x12AD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A4 SWAP1 PUSH2 0x1FB8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x130A JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x1370 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x1366 JUMPI PUSH2 0x1365 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x13AD JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x13A3 JUMPI PUSH2 0x13A2 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x13DC JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x13D2 JUMPI PUSH2 0x13D1 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x1405 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x13FB JUMPI PUSH2 0x13FA PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x142A JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1420 JUMPI PUSH2 0x141F PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x144D JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x1443 JUMPI PUSH2 0x1442 PUSH2 0x1FD8 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x145C JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x14D1 DUP2 PUSH2 0x149C JUMP JUMPDEST DUP2 EQ PUSH2 0x14DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14EE DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1518 DUP5 DUP3 DUP6 ADD PUSH2 0x14DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1536 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1551 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x152D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1591 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1576 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15B9 DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x15C3 DUP2 DUP6 PUSH2 0x1562 JUMP JUMPDEST SWAP4 POP PUSH2 0x15D3 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x15DC DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1601 DUP2 DUP5 PUSH2 0x15AE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP2 EQ PUSH2 0x1627 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1639 DUP2 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1655 JUMPI PUSH2 0x1654 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1663 DUP5 DUP3 DUP6 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1697 DUP3 PUSH2 0x166C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16A7 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16C2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x169E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16D1 DUP2 PUSH2 0x168C JUMP JUMPDEST DUP2 EQ PUSH2 0x16DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x16EE DUP2 PUSH2 0x16C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x170B JUMPI PUSH2 0x170A PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1719 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x172A DUP6 DUP3 DUP7 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x174D JUMPI PUSH2 0x174C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x175B DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x176C DUP7 DUP3 DUP8 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x177D DUP7 DUP3 DUP8 ADD PUSH2 0x162A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x179D JUMPI PUSH2 0x179C PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17AB DUP5 DUP3 DUP6 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17BD DUP2 PUSH2 0x1609 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x17D8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x17B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 PUSH2 0x1521 JUMP JUMPDEST DUP2 EQ PUSH2 0x17F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1804 DUP2 PUSH2 0x17DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1821 JUMPI PUSH2 0x1820 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x182F DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1840 DUP6 DUP3 DUP7 ADD PUSH2 0x17F5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x188C DUP3 PUSH2 0x159D JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x18AB JUMPI PUSH2 0x18AA PUSH2 0x1854 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18BE PUSH2 0x1488 JUMP JUMPDEST SWAP1 POP PUSH2 0x18CA DUP3 DUP3 PUSH2 0x1883 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x18EA JUMPI PUSH2 0x18E9 PUSH2 0x1854 JUMP JUMPDEST JUMPDEST PUSH2 0x18F3 DUP3 PUSH2 0x159D JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1922 PUSH2 0x191D DUP5 PUSH2 0x18CF JUMP JUMPDEST PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x193E JUMPI PUSH2 0x193D PUSH2 0x184F JUMP JUMPDEST JUMPDEST PUSH2 0x1949 DUP5 DUP3 DUP6 PUSH2 0x1900 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1966 JUMPI PUSH2 0x1965 PUSH2 0x184A JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1976 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x190F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1999 JUMPI PUSH2 0x1998 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x19A7 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x19B8 DUP8 DUP3 DUP9 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x19C9 DUP8 DUP3 DUP9 ADD PUSH2 0x162A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x19EA JUMPI PUSH2 0x19E9 PUSH2 0x1497 JUMP JUMPDEST JUMPDEST PUSH2 0x19F6 DUP8 DUP3 DUP9 ADD PUSH2 0x1951 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A19 JUMPI PUSH2 0x1A18 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A27 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1A38 DUP6 DUP3 DUP7 ADD PUSH2 0x16DF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1A89 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1A9C JUMPI PUSH2 0x1A9B PUSH2 0x1A42 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AFE PUSH1 0x21 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B09 DUP3 PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B2D DUP2 PUSH2 0x1AF1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B90 PUSH1 0x3D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B9B DUP3 PUSH2 0x1B34 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BBF DUP2 PUSH2 0x1B83 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C22 PUSH1 0x2D DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2D DUP3 PUSH2 0x1BC6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1C51 DUP2 PUSH2 0x1C15 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C8E PUSH1 0x18 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C99 DUP3 PUSH2 0x1C58 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CBD DUP2 PUSH2 0x1C81 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D20 PUSH1 0x29 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D2B DUP3 PUSH2 0x1CC4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D4F DUP2 PUSH2 0x1D13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D6C DUP3 PUSH2 0x1557 JUMP JUMPDEST PUSH2 0x1D76 DUP2 DUP6 PUSH2 0x1D56 JUMP JUMPDEST SWAP4 POP PUSH2 0x1D86 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D9E DUP3 DUP6 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DAA DUP3 DUP5 PUSH2 0x1D61 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E12 PUSH1 0x25 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E1D DUP3 PUSH2 0x1DB6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E41 DUP2 PUSH2 0x1E05 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1EA4 PUSH1 0x24 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EAF DUP3 PUSH2 0x1E48 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1ED3 DUP2 PUSH2 0x1E97 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F10 PUSH1 0x19 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F1B DUP3 PUSH2 0x1EDA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1F3F DUP2 PUSH2 0x1F03 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FA2 PUSH1 0x32 DUP4 PUSH2 0x1562 JUMP JUMPDEST SWAP2 POP PUSH2 0x1FAD DUP3 PUSH2 0x1F46 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1FD1 DUP2 PUSH2 0x1F95 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x202E DUP3 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x2038 DUP2 DUP6 PUSH2 0x2012 JUMP JUMPDEST SWAP4 POP PUSH2 0x2048 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1573 JUMP JUMPDEST PUSH2 0x2051 DUP2 PUSH2 0x159D JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2071 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x207E PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x169E JUMP JUMPDEST PUSH2 0x208B PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x17B4 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x209D DUP2 DUP5 PUSH2 0x2023 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x20B7 DUP2 PUSH2 0x14C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D3 JUMPI PUSH2 0x20D2 PUSH2 0x1492 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x20E1 DUP5 DUP3 DUP6 ADD PUSH2 0x20A8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 0x4E 0xE2 0x5F 0xE5 0xF CREATE2 0xED PUSH11 0x8AFDCE160046C560382A7E PUSH14 0x15A931F6FB4AD3D1649E4464736F PUSH13 0x63430008130033000000000000 ","sourceMap":"628:16377:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4612:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2190:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4388:162;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2471:98::-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;4612:296::-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;4974:149::-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;2190:219::-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;1929:204::-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;2633:102::-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;2801:::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;4388:162::-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;829:155:13:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;13240:133:4:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;12572:171:4:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;7404:261::-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;11257:1203::-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;3319:92::-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;447:696:12:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;7120:126:4:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;10139:916:15:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:9:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:148::-;16202:11;16239:3;16224:18;;16100:148;;;;:::o;16254:390::-;16360:3;16388:39;16421:5;16388:39;:::i;:::-;16443:89;16525:6;16520:3;16443:89;:::i;:::-;16436:96;;16541:65;16599:6;16594:3;16587:4;16580:5;16576:16;16541:65;:::i;:::-;16631:6;16626:3;16622:16;16615:23;;16364:280;16254:390;;;;:::o;16650:435::-;16830:3;16852:95;16943:3;16934:6;16852:95;:::i;:::-;16845:102;;16964:95;17055:3;17046:6;16964:95;:::i;:::-;16957:102;;17076:3;17069:10;;16650:435;;;;;:::o;17091:224::-;17231:34;17227:1;17219:6;17215:14;17208:58;17300:7;17295:2;17287:6;17283:15;17276:32;17091:224;:::o;17321:366::-;17463:3;17484:67;17548:2;17543:3;17484:67;:::i;:::-;17477:74;;17560:93;17649:3;17560:93;:::i;:::-;17678:2;17673:3;17669:12;17662:19;;17321:366;;;:::o;17693:419::-;17859:4;17897:2;17886:9;17882:18;17874:26;;17946:9;17940:4;17936:20;17932:1;17921:9;17917:17;17910:47;17974:131;18100:4;17974:131;:::i;:::-;17966:139;;17693:419;;;:::o;18118:223::-;18258:34;18254:1;18246:6;18242:14;18235:58;18327:6;18322:2;18314:6;18310:15;18303:31;18118:223;:::o;18347:366::-;18489:3;18510:67;18574:2;18569:3;18510:67;:::i;:::-;18503:74;;18586:93;18675:3;18586:93;:::i;:::-;18704:2;18699:3;18695:12;18688:19;;18347:366;;;:::o;18719:419::-;18885:4;18923:2;18912:9;18908:18;18900:26;;18972:9;18966:4;18962:20;18958:1;18947:9;18943:17;18936:47;19000:131;19126:4;19000:131;:::i;:::-;18992:139;;18719:419;;;:::o;19144:175::-;19284:27;19280:1;19272:6;19268:14;19261:51;19144:175;:::o;19325:366::-;19467:3;19488:67;19552:2;19547:3;19488:67;:::i;:::-;19481:74;;19564:93;19653:3;19564:93;:::i;:::-;19682:2;19677:3;19673:12;19666:19;;19325:366;;;:::o;19697:419::-;19863:4;19901:2;19890:9;19886:18;19878:26;;19950:9;19944:4;19940:20;19936:1;19925:9;19921:17;19914:47;19978:131;20104:4;19978:131;:::i;:::-;19970:139;;19697:419;;;:::o;20122:237::-;20262:34;20258:1;20250:6;20246:14;20239:58;20331:20;20326:2;20318:6;20314:15;20307:45;20122:237;:::o;20365:366::-;20507:3;20528:67;20592:2;20587:3;20528:67;:::i;:::-;20521:74;;20604:93;20693:3;20604:93;:::i;:::-;20722:2;20717:3;20713:12;20706:19;;20365:366;;;:::o;20737:419::-;20903:4;20941:2;20930:9;20926:18;20918:26;;20990:9;20984:4;20980:20;20976:1;20965:9;20961:17;20954:47;21018:131;21144:4;21018:131;:::i;:::-;21010:139;;20737:419;;;:::o;21162:180::-;21210:77;21207:1;21200:88;21307:4;21304:1;21297:15;21331:4;21328:1;21321:15;21348:98;21399:6;21433:5;21427:12;21417:22;;21348:98;;;:::o;21452:168::-;21535:11;21569:6;21564:3;21557:19;21609:4;21604:3;21600:14;21585:29;;21452:168;;;;:::o;21626:373::-;21712:3;21740:38;21772:5;21740:38;:::i;:::-;21794:70;21857:6;21852:3;21794:70;:::i;:::-;21787:77;;21873:65;21931:6;21926:3;21919:4;21912:5;21908:16;21873:65;:::i;:::-;21963:29;21985:6;21963:29;:::i;:::-;21958:3;21954:39;21947:46;;21716:283;21626:373;;;;:::o;22005:640::-;22200:4;22238:3;22227:9;22223:19;22215:27;;22252:71;22320:1;22309:9;22305:17;22296:6;22252:71;:::i;:::-;22333:72;22401:2;22390:9;22386:18;22377:6;22333:72;:::i;:::-;22415;22483:2;22472:9;22468:18;22459:6;22415:72;:::i;:::-;22534:9;22528:4;22524:20;22519:2;22508:9;22504:18;22497:48;22562:76;22633:4;22624:6;22562:76;:::i;:::-;22554:84;;22005:640;;;;;;;:::o;22651:141::-;22707:5;22738:6;22732:13;22723:22;;22754:32;22780:5;22754:32;:::i;:::-;22651:141;;;;:::o;22798:349::-;22867:6;22916:2;22904:9;22895:7;22891:23;22887:32;22884:119;;;22922:79;;:::i;:::-;22884:119;23042:1;23067:63;23122:7;23113:6;23102:9;23098:22;23067:63;:::i;:::-;23057:73;;23013:127;22798:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"1696000","executionCost":"infinite","totalCost":"infinite"},"external":{"approve(address,uint256)":"infinite","balanceOf(address)":"2921","getApproved(uint256)":"5277","isApprovedForAll(address,address)":"infinite","name()":"infinite","ownerOf(uint256)":"3022","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","setApprovalForAll(address,bool)":"infinite","supportsInterface(bytes4)":"774","symbol()":"infinite","tokenURI(uint256)":"3459","transferFrom(address,address,uint256)":"infinite"},"internal":{"__unsafe_increaseBalance(address,uint256)":"infinite","_afterTokenTransfer(address,address,uint256,uint256)":"17","_approve(address,uint256)":"infinite","_baseURI()":"infinite","_beforeTokenTransfer(address,address,uint256,uint256)":"17","_burn(uint256)":"infinite","_checkOnERC721Received(address,address,uint256,bytes memory)":"infinite","_exists(uint256)":"2312","_isApprovedOrOwner(address,uint256)":"infinite","_mint(address,uint256)":"infinite","_ownerOf(uint256)":"2248","_requireMinted(uint256)":"infinite","_safeMint(address,uint256)":"infinite","_safeMint(address,uint256,bytes memory)":"infinite","_safeTransfer(address,address,uint256,bytes memory)":"infinite","_setApprovalForAll(address,address,bool)":"infinite","_transfer(address,address,uint256)":"infinite"}},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":118,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":120,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":124,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":128,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":132,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":138,"contract":"@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.","kind":"dev","methods":{"onERC721Received(address,address,uint256,bytes)":{"details":"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."}},"title":"ERC721 token receiver interface","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol":{"ERC721URIStorage":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"ERC721 token with storage based token URI management.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\nimport \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../interfaces/IERC4906.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n\\n        emit MetadataUpdate(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":118,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":120,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":124,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":128,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":132,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":138,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1169,"contract":"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056fd6118db9329d909b3aa1e6b5ca8e7e304676ea0f490b31d081f1b67ba092364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP REVERT PUSH2 0x18DB SWAP4 0x29 0xD9 MULMOD 0xB3 0xAA 0x1E PUSH12 0x5CA8E7E304676EA0F490B31D ADDMOD 0x1F SHL PUSH8 0xBA092364736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"194:9169:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122056fd6118db9329d909b3aa1e6b5ca8e7e304676ea0f490b31d081f1b67ba092364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP REVERT PUSH2 0x18DB SWAP4 0x29 0xD9 MULMOD 0xB3 0xAA 0x1E PUSH12 0x5CA8E7E304676EA0F490B31D ADDMOD 0x1F SHL PUSH8 0xBA092364736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"194:9169:9:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_revert(bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite","verifyCallResultFromTarget(address,bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"devdoc":{"author":"Matt Condon (@shrugs)","details":"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`","kind":"dev","methods":{},"title":"Counters","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f0a46b86c3d8318b07c787b7aa03f5f36ca84868349c9c954e57d0afcc7e3ef64736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF EXP CHAINID 0xB8 PUSH13 0x3D8318B07C787B7AA03F5F36CA DUP5 DUP7 DUP4 0x49 0xC9 0xC9 SLOAD 0xE5 PUSH30 0xAFCC7E3EF64736F6C634300081300330000000000000000000000000000 ","sourceMap":"424:971:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200f0a46b86c3d8318b07c787b7aa03f5f36ca84868349c9c954e57d0afcc7e3ef64736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF EXP CHAINID 0xB8 PUSH13 0x3D8318B07C787B7AA03F5F36CA DUP5 DUP7 DUP4 0x49 0xC9 0xC9 SLOAD 0xE5 PUSH30 0xAFCC7E3EF64736F6C634300081300330000000000000000000000000000 ","sourceMap":"424:971:11:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"current(struct Counters.Counter storage pointer)":"infinite","decrement(struct Counters.Counter storage pointer)":"infinite","increment(struct Counters.Counter storage pointer)":"infinite","reset(struct Counters.Counter storage pointer)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202027d6953eea3d2b5ddab5aa096da019e59fa1df9c39b38efa67bbb22208254864736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x27 0xD6 SWAP6 RETURNDATACOPY 0xEA RETURNDATASIZE 0x2B 0x5D 0xDA 0xB5 0xAA MULMOD PUSH14 0xA019E59FA1DF9C39B38EFA67BBB2 0x22 ADDMOD 0x25 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202027d6953eea3d2b5ddab5aa096da019e59fa1df9c39b38efa67bbb22208254864736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 0x27 0xD6 SWAP6 RETURNDATACOPY 0xEA RETURNDATASIZE 0x2B 0x5D 0xDA 0xB5 0xAA MULMOD PUSH14 0xA019E59FA1DF9C39B38EFA67BBB2 0x22 ADDMOD 0x25 BASEFEE PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"220:2559:12:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"equal(string memory,string memory)":"infinite","toHexString(address)":"infinite","toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(int256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205adbd6dcf7c22f8a798ff30cefff39bd875eddb76458fae2eaac814e6b08345364736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xDB 0xD6 0xDC 0xF7 0xC2 0x2F DUP11 PUSH26 0x8FF30CEFFF39BD875EDDB76458FAE2EAAC814E6B08345364736F PUSH13 0x63430008130033000000000000 ","sourceMap":"202:12582:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205adbd6dcf7c22f8a798ff30cefff39bd875eddb76458fae2eaac814e6b08345364736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GAS 0xDB 0xD6 0xDC 0xF7 0xC2 0x2F DUP11 PUSH26 0x8FF30CEFFF39BD875EDDB76458FAE2EAAC814E6B08345364736F PUSH13 0x63430008130033000000000000 ","sourceMap":"202:12582:15:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"average(uint256,uint256)":"infinite","ceilDiv(uint256,uint256)":"infinite","log10(uint256)":"infinite","log10(uint256,enum Math.Rounding)":"infinite","log2(uint256)":"infinite","log2(uint256,enum Math.Rounding)":"infinite","log256(uint256)":"infinite","log256(uint256,enum Math.Rounding)":"infinite","max(uint256,uint256)":"infinite","min(uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256)":"infinite","mulDiv(uint256,uint256,uint256,enum Math.Rounding)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum Math.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3b02db46d5c417aa38134d274af040c0f81d5a339dce336c3e41aade1e5c5a664736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xB0 0x2D 0xB4 PUSH14 0x5C417AA38134D274AF040C0F81D5 LOG3 CODECOPY 0xDC 0xE3 CALLDATASIZE 0xC3 0xE4 BYTE 0xAD 0xE1 0xE5 0xC5 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a3b02db46d5c417aa38134d274af040c0f81d5a339dce336c3e41aade1e5c5a664736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 0xB0 0x2D 0xB4 PUSH14 0x5C417AA38134D274AF040C0F81D5 LOG3 CODECOPY 0xDC 0xE3 CALLDATASIZE 0xC3 0xE4 BYTE 0xAD 0xE1 0xE5 0xC5 0xA6 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"215:1047:16:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"abs(int256)":"infinite","average(int256,int256)":"infinite","max(int256,int256)":"infinite","min(int256,int256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/RSKNFT.sol":{"RSKNFT":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"bid","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"AuctionCompleted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"startAt","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"endAt","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"AuctionCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_fromTokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_toTokenId","type":"uint256"}],"name":"BatchMetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"listingId","type":"uint256"},{"indexed":true,"internalType":"address","name":"bidder","type":"address"},{"indexed":false,"internalType":"uint256","name":"bid","type":"uint256"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"BidCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_tokenId","type":"uint256"}],"name":"MetadataUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"seller","type":"address"},{"indexed":false,"internalType":"uint256","name":"price","type":"uint256"},{"indexed":false,"internalType":"bool","name":"sold","type":"bool"},{"indexed":false,"internalType":"string","name":"message","type":"string"}],"name":"NFT_Action","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"COMPLETED_STATUS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"OPEN_STATUS","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allNfts","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"internalType":"struct RSKNFT.NFT[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"listingId","type":"uint256"}],"name":"bid","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"bids","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"listingId","type":"uint256"}],"name":"completeAuction","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"durationInSeconds","type":"uint256"}],"name":"createAuctionListing","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getNftPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"highestBidder","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"isAuctionOpen","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"listings","outputs":[{"internalType":"address","name":"seller","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"netPrice","type":"uint256"},{"internalType":"uint256","name":"startAt","type":"uint256"},{"internalType":"uint256","name":"endAt","type":"uint256"},{"internalType":"uint8","name":"status","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"minAuctionIncrement","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenURI","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"uint256","name":"durationInSeconds","type":"uint256"}],"name":"mintAuctionToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"_tokenURI","type":"string"},{"internalType":"uint256","name":"price","type":"uint256"}],"name":"mintToken","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"sellNFT","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"singleNFT","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"internalType":"struct RSKNFT.NFT","name":"props","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"userNfts","outputs":[{"components":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"seller","type":"address"},{"internalType":"uint256","name":"price","type":"uint256"},{"internalType":"bool","name":"sold","type":"bool"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"internalType":"struct RSKNFT.NFT[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"}],"devdoc":{"events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"AuctionCompleted(uint256,address,address,uint256,string)":{"details":"Auction completed event","params":{"listingId":", @param seller ,  @param bidder, @param bid, @param message"}},"AuctionCreated(uint256,address,uint256,uint256,uint256,uint256,string)":{"details":"Auction creation events","params":{"listingId":", @param seller, @param price, @param tokenId, @param startAt, @param endAt, @param message"}},"BatchMetadataUpdate(uint256,uint256)":{"details":"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."},"BidCreated(uint256,address,uint256,string)":{"details":"bidding event","params":{"listingId":", @param bidder, @param bid, @param message"}},"MetadataUpdate(uint256)":{"details":"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."},"NFT_Action(uint256,address,address,uint256,bool,string)":{"details":"handled all events related to nfts in the contract","params":{"tokenId":", @param owner, @param seller, @param price, @param sold"}},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"allNfts()":{"returns":{"_0":"props"}},"approve(address,uint256)":{"details":"See {IERC721-approve}."},"balanceOf(address)":{"details":"See {IERC721-balanceOf}."},"completeAuction(uint256)":{"details":"Nft auction completion functionality","params":{"listingId":", listingId"}},"createAuctionListing(uint256,uint256,uint256)":{"details":"create auction listing","params":{"price":", @param tokenId, @param durationInSeconds"},"returns":{"_0":"listingId"}},"getApproved(uint256)":{"details":"See {IERC721-getApproved}."},"getNftPrice(uint256)":{"params":{"tokenId":",tokenId"},"returns":{"_0":"uint256"}},"isApprovedForAll(address,address)":{"details":"See {IERC721-isApprovedForAll}."},"isAuctionOpen(uint256)":{"details":"check if auction is open","params":{"id":", auction id"}},"mintAuctionToken(string,uint256,uint256)":{"details":"mint token , set tokenURI and return currentTokenId","params":{"_tokenURI":", a tokenURI obtained from IPFS"},"returns":{"_0":"currentTokenId, current token id"}},"mintToken(string,uint256)":{"details":"mint token , set tokenURI and return currentTokenId","params":{"_tokenURI":", a tokenURI obtained from IPFS"},"returns":{"_0":"currentTokenId, current token id"}},"name()":{"details":"See {IERC721Metadata-name}."},"ownerOf(uint256)":{"details":"See {IERC721-ownerOf}."},"safeTransferFrom(address,address,uint256)":{"details":"See {IERC721-safeTransferFrom}."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"See {IERC721-safeTransferFrom}."},"sellNFT(uint256)":{"details":"NFT sales functionality and process payment to seller","params":{"tokenId":",  NFT token id"}},"setApprovalForAll(address,bool)":{"details":"See {IERC721-setApprovalForAll}."},"singleNFT(uint256)":{"returns":{"props":"props"}},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}"},"symbol()":{"details":"See {IERC721Metadata-symbol}."},"tokenURI(uint256)":{"details":"See {IERC721Metadata-tokenURI}."},"transferFrom(address,address,uint256)":{"details":"See {IERC721-transferFrom}."},"userNfts()":{"returns":{"_0":"props"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_155":{"entryPoint":null,"id":155,"parameterSlots":2,"returnSlots":0},"@_3149":{"entryPoint":null,"id":3149,"parameterSlots":0,"returnSlots":0},"@_46":{"entryPoint":null,"id":46,"parameterSlots":0,"returnSlots":0},"array_dataslot_t_string_storage":{"entryPoint":405,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":247,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":726,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":541,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":687,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":561,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":881,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":426,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":352,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":851,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":551,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":819,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":305,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":258,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":601,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":442,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":806,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":659,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":455,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":611,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":654,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:18","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:18","statements":[{"nodeType":"YulAssignment","src":"77:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:18"},"nodeType":"YulFunctionCall","src":"87:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:18","type":""}],"src":"7:99:18"},{"body":{"nodeType":"YulBlock","src":"140:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:18"},"nodeType":"YulFunctionCall","src":"150:88:18"},"nodeType":"YulExpressionStatement","src":"150:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:18"},"nodeType":"YulFunctionCall","src":"247:15:18"},"nodeType":"YulExpressionStatement","src":"247:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:18"},"nodeType":"YulFunctionCall","src":"271:15:18"},"nodeType":"YulExpressionStatement","src":"271:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:18"},{"body":{"nodeType":"YulBlock","src":"326:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:18"},"nodeType":"YulFunctionCall","src":"336:88:18"},"nodeType":"YulExpressionStatement","src":"336:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:18"},"nodeType":"YulFunctionCall","src":"433:15:18"},"nodeType":"YulExpressionStatement","src":"433:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:18"},"nodeType":"YulFunctionCall","src":"457:15:18"},"nodeType":"YulExpressionStatement","src":"457:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:18"},{"body":{"nodeType":"YulBlock","src":"535:269:18","statements":[{"nodeType":"YulAssignment","src":"545:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:18"},"nodeType":"YulFunctionCall","src":"555:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:18"},"nodeType":"YulFunctionCall","src":"602:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:18","statements":[{"nodeType":"YulAssignment","src":"667:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:18"},"nodeType":"YulFunctionCall","src":"677:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:18"},"nodeType":"YulFunctionCall","src":"626:26:18"},"nodeType":"YulIf","src":"623:81:18"},{"body":{"nodeType":"YulBlock","src":"756:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:18"},"nodeType":"YulFunctionCall","src":"770:18:18"},"nodeType":"YulExpressionStatement","src":"770:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:18"},"nodeType":"YulFunctionCall","src":"740:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:18"},"nodeType":"YulFunctionCall","src":"717:38:18"},"nodeType":"YulIf","src":"714:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:18","type":""}],"src":"484:320:18"},{"body":{"nodeType":"YulBlock","src":"864:87:18","statements":[{"nodeType":"YulAssignment","src":"874:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:18"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:18"},"nodeType":"YulFunctionCall","src":"895:14:18"},"nodeType":"YulExpressionStatement","src":"895:14:18"},{"nodeType":"YulAssignment","src":"918:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:18"},"nodeType":"YulFunctionCall","src":"926:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:18"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:18","type":""}],"src":"810:141:18"},{"body":{"nodeType":"YulBlock","src":"1001:49:18","statements":[{"nodeType":"YulAssignment","src":"1011:33:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:18"},"nodeType":"YulFunctionCall","src":"1025:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:18"},"nodeType":"YulFunctionCall","src":"1021:23:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:18"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:18","type":""}],"src":"957:93:18"},{"body":{"nodeType":"YulBlock","src":"1109:54:18","statements":[{"nodeType":"YulAssignment","src":"1119:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:18"},"nodeType":"YulFunctionCall","src":"1140:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:18","type":""}],"src":"1056:107:18"},{"body":{"nodeType":"YulBlock","src":"1245:317:18","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:18","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:18","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:18"},"nodeType":"YulFunctionCall","src":"1272:18:18"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:18"},"nodeType":"YulFunctionCall","src":"1311:97:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:18","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:18"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:18"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:18"},"nodeType":"YulFunctionCall","src":"1429:39:18"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:18"}]},{"nodeType":"YulAssignment","src":"1477:30:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:18"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:18"},"nodeType":"YulFunctionCall","src":"1497:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:18"},"nodeType":"YulFunctionCall","src":"1486:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:18"}]},{"nodeType":"YulAssignment","src":"1516:40:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:18"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:18"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:18"},"nodeType":"YulFunctionCall","src":"1536:19:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:18"},"nodeType":"YulFunctionCall","src":"1526:30:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:18"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:18","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:18","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:18","type":""}],"src":"1169:393:18"},{"body":{"nodeType":"YulBlock","src":"1613:32:18","statements":[{"nodeType":"YulAssignment","src":"1623:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:18","type":""}],"src":"1568:77:18"},{"body":{"nodeType":"YulBlock","src":"1683:28:18","statements":[{"nodeType":"YulAssignment","src":"1693:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:18"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:18","type":""}],"src":"1651:60:18"},{"body":{"nodeType":"YulBlock","src":"1777:82:18","statements":[{"nodeType":"YulAssignment","src":"1787:66:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:18"},"nodeType":"YulFunctionCall","src":"1827:24:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:18"},"nodeType":"YulFunctionCall","src":"1818:34:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:18"},"nodeType":"YulFunctionCall","src":"1800:53:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:18"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:18","type":""}],"src":"1717:142:18"},{"body":{"nodeType":"YulBlock","src":"1912:28:18","statements":[{"nodeType":"YulAssignment","src":"1922:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:18"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:18","type":""}],"src":"1865:75:18"},{"body":{"nodeType":"YulBlock","src":"2022:193:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:18","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:18"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:18"},"nodeType":"YulFunctionCall","src":"2056:39:18"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:18"},"nodeType":"YulFunctionCall","src":"2145:11:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:18"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:18"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:18"},"nodeType":"YulFunctionCall","src":"2166:41:18"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:18"},"nodeType":"YulFunctionCall","src":"2117:91:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:18"},"nodeType":"YulFunctionCall","src":"2104:105:18"},"nodeType":"YulExpressionStatement","src":"2104:105:18"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:18","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:18","type":""}],"src":"1946:269:18"},{"body":{"nodeType":"YulBlock","src":"2270:24:18","statements":[{"nodeType":"YulAssignment","src":"2280:8:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:18","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:18"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:18","type":""}],"src":"2221:73:18"},{"body":{"nodeType":"YulBlock","src":"2353:136:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:18","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:18"},"nodeType":"YulFunctionCall","src":"2377:32:18"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:18"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:18"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:18"},"nodeType":"YulFunctionCall","src":"2418:65:18"},"nodeType":"YulExpressionStatement","src":"2418:65:18"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:18","type":""}],"src":"2300:189:18"},{"body":{"nodeType":"YulBlock","src":"2545:136:18","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:18","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:18"},"nodeType":"YulFunctionCall","src":"2626:39:18"},"nodeType":"YulExpressionStatement","src":"2626:39:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:18"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:18"},"nodeType":"YulFunctionCall","src":"2562:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:18","statements":[{"nodeType":"YulAssignment","src":"2579:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:18"},"nodeType":"YulFunctionCall","src":"2588:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:18","statements":[]},"src":"2555:120:18"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:18","type":""}],"src":"2495:186:18"},{"body":{"nodeType":"YulBlock","src":"2766:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:18"},"nodeType":"YulFunctionCall","src":"2822:38:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:18"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:18"},"nodeType":"YulFunctionCall","src":"2906:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:18"},"nodeType":"YulFunctionCall","src":"2892:44:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:18","statements":[{"nodeType":"YulAssignment","src":"3095:23:18","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:18"},"nodeType":"YulFunctionCall","src":"3074:18:18"},"nodeType":"YulIf","src":"3071:49:18"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:18"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:18"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:18"},"nodeType":"YulFunctionCall","src":"3189:22:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:18"},"nodeType":"YulFunctionCall","src":"3175:37:18"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:18"},"nodeType":"YulFunctionCall","src":"3133:80:18"},"nodeType":"YulExpressionStatement","src":"3133:80:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:18"},"nodeType":"YulFunctionCall","src":"2780:11:18"},"nodeType":"YulIf","src":"2777:446:18"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:18","type":""}],"src":"2687:543:18"},{"body":{"nodeType":"YulBlock","src":"3299:54:18","statements":[{"nodeType":"YulAssignment","src":"3309:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:18"},"nodeType":"YulFunctionCall","src":"3330:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:18"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:18","type":""}],"src":"3236:117:18"},{"body":{"nodeType":"YulBlock","src":"3410:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:18","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:18"},"nodeType":"YulFunctionCall","src":"3465:13:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:18"},"nodeType":"YulFunctionCall","src":"3480:6:18"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:18"},"nodeType":"YulFunctionCall","src":"3436:51:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:18"},"nodeType":"YulFunctionCall","src":"3432:56:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:18","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:18"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:18"},"nodeType":"YulFunctionCall","src":"3507:15:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:18"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:18","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:18","type":""}],"src":"3359:169:18"},{"body":{"nodeType":"YulBlock","src":"3614:214:18","statements":[{"nodeType":"YulAssignment","src":"3747:37:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:18"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:18"},"nodeType":"YulFunctionCall","src":"3755:29:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:18"}]},{"nodeType":"YulAssignment","src":"3793:29:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:18","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:18"},"nodeType":"YulFunctionCall","src":"3810:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:18"},"nodeType":"YulFunctionCall","src":"3801:21:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:18","type":""}],"src":"3533:295:18"},{"body":{"nodeType":"YulBlock","src":"3925:1303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:18"},"nodeType":"YulFunctionCall","src":"3950:37:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:18"},"nodeType":"YulFunctionCall","src":"4074:18:18"},"nodeType":"YulExpressionStatement","src":"4074:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:18"},"nodeType":"YulFunctionCall","src":"4041:30:18"},"nodeType":"YulIf","src":"4038:56:18"},{"nodeType":"YulVariableDeclaration","src":"4104:52:18","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:18"},"nodeType":"YulFunctionCall","src":"4144:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:18"},"nodeType":"YulFunctionCall","src":"4118:38:18"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:18"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:18"},"nodeType":"YulFunctionCall","src":"4203:67:18"},"nodeType":"YulExpressionStatement","src":"4203:67:18"},{"nodeType":"YulVariableDeclaration","src":"4280:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:18","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:18","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:18","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:18"},"nodeType":"YulFunctionCall","src":"4413:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:18"},"nodeType":"YulFunctionCall","src":"4401:22:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:18"},"nodeType":"YulFunctionCall","src":"4451:37:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:18"},"nodeType":"YulFunctionCall","src":"4608:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:18"},"nodeType":"YulFunctionCall","src":"4602:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:18"},"nodeType":"YulFunctionCall","src":"4587:42:18"},"nodeType":"YulExpressionStatement","src":"4587:42:18"},{"nodeType":"YulAssignment","src":"4646:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:18"},"nodeType":"YulFunctionCall","src":"4656:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:18"}]},{"nodeType":"YulAssignment","src":"4687:31:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:18"},"nodeType":"YulFunctionCall","src":"4700:18:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:18"},"nodeType":"YulFunctionCall","src":"4532:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:18","statements":[{"nodeType":"YulAssignment","src":"4549:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:18"},"nodeType":"YulFunctionCall","src":"4554:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:18","statements":[]},"src":"4524:208:18"},{"body":{"nodeType":"YulBlock","src":"4768:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:18"},"nodeType":"YulFunctionCall","src":"4809:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:18"},"nodeType":"YulFunctionCall","src":"4803:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:18"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:18","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:18"},"nodeType":"YulFunctionCall","src":"4891:17:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:18"},"nodeType":"YulFunctionCall","src":"4861:48:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:18"},"nodeType":"YulFunctionCall","src":"4846:64:18"},"nodeType":"YulExpressionStatement","src":"4846:64:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:18"},"nodeType":"YulFunctionCall","src":"4748:19:18"},"nodeType":"YulIf","src":"4745:179:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:18"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:18"},"nodeType":"YulFunctionCall","src":"4954:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:18"},"nodeType":"YulFunctionCall","src":"4950:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:18"},"nodeType":"YulFunctionCall","src":"4937:36:18"},"nodeType":"YulExpressionStatement","src":"4937:36:18"}]},"nodeType":"YulCase","src":"4365:618:18","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:18","statements":[{"nodeType":"YulAssignment","src":"5069:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:18"},"nodeType":"YulFunctionCall","src":"5084:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:18"},"nodeType":"YulFunctionCall","src":"5078:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:18"},"nodeType":"YulIf","src":"5041:77:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:18"},"nodeType":"YulFunctionCall","src":"5144:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:18"},"nodeType":"YulFunctionCall","src":"5131:81:18"},"nodeType":"YulExpressionStatement","src":"5131:81:18"}]},"nodeType":"YulCase","src":"4992:230:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:18"},"nodeType":"YulFunctionCall","src":"4342:14:18"},"nodeType":"YulSwitch","src":"4335:887:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:18","type":""}],"src":"3833:1395:18"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0xA DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x43656C6F4E465400000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4153470000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x93 SWAP2 SWAP1 PUSH3 0x371 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA5 SWAP2 SWAP1 PUSH3 0x371 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xB PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x458 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x179 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x18F JUMPI PUSH3 0x18E PUSH3 0x131 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x1F9 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x1BA JUMP JUMPDEST PUSH3 0x205 DUP7 DUP4 PUSH3 0x1BA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x252 PUSH3 0x24C PUSH3 0x246 DUP5 PUSH3 0x21D JUMP JUMPDEST PUSH3 0x227 JUMP JUMPDEST PUSH3 0x21D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x26E DUP4 PUSH3 0x231 JUMP JUMPDEST PUSH3 0x286 PUSH3 0x27D DUP3 PUSH3 0x259 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x1C7 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x29D PUSH3 0x28E JUMP JUMPDEST PUSH3 0x2AA DUP2 DUP5 DUP5 PUSH3 0x263 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x2D2 JUMPI PUSH3 0x2C6 PUSH1 0x0 DUP3 PUSH3 0x293 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x2B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x321 JUMPI PUSH3 0x2EB DUP2 PUSH3 0x195 JUMP JUMPDEST PUSH3 0x2F6 DUP5 PUSH3 0x1AA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x306 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x31E PUSH3 0x315 DUP6 PUSH3 0x1AA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x2AF JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x346 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x326 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x361 DUP4 DUP4 PUSH3 0x333 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x37C DUP3 PUSH3 0xF7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x398 JUMPI PUSH3 0x397 PUSH3 0x102 JUMP JUMPDEST JUMPDEST PUSH3 0x3A4 DUP3 SLOAD PUSH3 0x160 JUMP JUMPDEST PUSH3 0x3B1 DUP3 DUP3 DUP6 PUSH3 0x2D6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x3E9 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x3D4 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x3E0 DUP6 DUP3 PUSH3 0x353 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x450 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x3F9 DUP7 PUSH3 0x195 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x423 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x3FC JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x443 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x43F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x333 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x521B DUP1 PUSH3 0x468 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C22F381 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDE74E57B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0xEE9CDFB3 EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xF2B8AA6F EQ PUSH2 0x78F JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xBBB52FFF EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xC046372C EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6B5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x7BF0989A EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5E9 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x4C22F381 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x708D4D35 EQ PUSH2 0x519 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x15BFA612 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x3F1FFCEC GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x3F1FFCEC EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x451DF52E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x454A2AB3 EQ PUSH2 0x483 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x15BFA612 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x21B62886 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x236D4725 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B7 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xAD48628 EQ PUSH2 0x308 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x43A2DF4 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x51D2B6B EQ PUSH2 0x24C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x35D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x261 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x388E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x388E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x38A9 JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x38FC JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x38A9 JUMP JUMPDEST PUSH2 0x127D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x39B9 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D3 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x610 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x3A12 JUMP JUMPDEST PUSH2 0x19A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x3CAB JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x3D1A JUMP JUMPDEST PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH2 0x1C49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1CDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A4 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x814 JUMPI POP PUSH2 0x813 DUP3 PUSH2 0x210A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x823 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x931 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x9CD JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9BA JUMPI DUP2 DUP1 PUSH2 0x9B6 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x9C5 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93B JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9E9 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA23 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA10 PUSH2 0x3380 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA08 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0xBDA JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC7 JUMPI PUSH1 0xC PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBAD JUMPI PUSH2 0xBAC PUSH2 0x3EAB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0xBC3 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xBD2 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA31 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBF3 SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC1F SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC81 DUP3 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP3 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP1 PUSH2 0x3FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD56 PUSH2 0x2245 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD85 JUMPI POP PUSH2 0xD84 DUP2 PUSH2 0xD7F PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x403E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 DUP4 PUSH2 0x224D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF AND PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ DUP1 ISZERO PUSH2 0xE23 JUMPI POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0xE37 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0xE40 DUP2 PUSH2 0xDD3 JUMP JUMPDEST ISZERO PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE77 SWAP1 PUSH2 0x40AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF58 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x413C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B9 JUMPI PUSH2 0xFDA ADDRESS DUP3 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x10B3 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x264E JUMP JUMPDEST POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x10EC ADDRESS DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x2355 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7E7751E116C86DCB924F03557ED09EE35423DFCFD5CB5C84DA25EFB40BBC291E DUP6 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x11DE SWAP3 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x11F0 PUSH2 0x2778 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x1209 PUSH2 0x1203 PUSH2 0x2245 JUMP JUMPDEST DUP3 PUSH2 0x2782 JUMP JUMPDEST PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123F SWAP1 PUSH2 0x4256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1253 DUP4 DUP4 DUP4 PUSH2 0x2355 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1298 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x19B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP1 PUSH2 0x42C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C0 SWAP1 PUSH2 0x432E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP1 PUSH2 0x43F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA SLOAD DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x153D SWAP2 SWAP1 PUSH2 0x4443 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x154F SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x793C2BC8CCF2234E5E1CBD74248A00015D32CCC7C062247F5120ABDBB911E80B DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x159F SWAP3 SWAP2 SWAP1 PUSH2 0x44C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x15B2 PUSH2 0x2778 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15C2 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 DUP6 DUP3 PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x174A CALLER ADDRESS DUP10 PUSH2 0x2355 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3B4D5CEEB9BD4281BA3F05BF499516ADB0DE51DD1BBFC4516EFBDB369AB7305 DUP5 DUP11 DUP11 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1798 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17BA DUP4 PUSH2 0x2817 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1822 SWAP1 PUSH2 0x45FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A1 SWAP1 PUSH2 0x468C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1920 SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x194C SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1999 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x196E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1999 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x197C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19B5 PUSH2 0x19AE PUSH2 0x2245 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2854 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x19CA PUSH2 0x19C4 PUSH2 0x2245 JUMP JUMPDEST DUP4 PUSH2 0x2782 JUMP JUMPDEST PUSH2 0x1A09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A00 SWAP1 PUSH2 0x4256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A15 DUP5 DUP5 DUP5 DUP5 PUSH2 0x29C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A27 PUSH1 0x8 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1A3F CALLER DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x1A49 DUP2 DUP7 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x1A54 DUP5 DUP3 DUP6 PUSH2 0x15B5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6C PUSH1 0x8 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1A84 CALLER DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x1A8E DUP2 DUP6 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP5 PUSH2 0x2CF3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AAD DUP3 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1ACD SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AF9 SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1B57 PUSH2 0x2E7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1B6C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1BAF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1BA1 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B89 SWAP3 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1BAA DUP5 PUSH2 0x2E96 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 CALLVALUE EQ PUSH2 0x1D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6C SWAP1 PUSH2 0x4758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D9B SWAP1 PUSH2 0x47A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E18 SWAP1 PUSH2 0x480A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1F05 PUSH1 0x9 PUSH2 0x2A1C JUMP JUMPDEST PUSH2 0x1F10 ADDRESS CALLER DUP7 PUSH2 0x2355 JUMP JUMPDEST PUSH32 0x6ABF8FEA1F4C585BF426B0FDBD54C0F004A746A4B6DCB76752A2D5D268F8730B DUP5 CALLER PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1F49 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4876 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F65 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F83 JUMPI PUSH2 0x1F82 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FBC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1FA9 PUSH2 0x3380 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FA1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2101 JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x1FDC SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20E3 JUMPI PUSH2 0x20E2 PUSH2 0x3EAB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x20F9 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FC2 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x21D5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x21E5 JUMPI POP PUSH2 0x21E4 DUP3 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2203 DUP2 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x2242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2239 SWAP1 PUSH2 0x45FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22C0 DUP4 PUSH2 0x17AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x234B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2342 SWAP1 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2375 DUP3 PUSH2 0x17AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x243A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2431 SWAP1 PUSH2 0x4A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2447 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FA9 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2467 DUP3 PUSH2 0x17AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B4 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2649 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SUB ISZERO PUSH2 0x2774 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BD SWAP1 PUSH2 0x4ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x26EC SWAP1 PUSH2 0x47A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2729 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x272E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2769 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x278E DUP4 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x27D0 JUMPI POP PUSH2 0x27CF DUP2 DUP6 PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x280E JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27F6 DUP5 PUSH2 0xC76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B9 SWAP1 PUSH2 0x4BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x29B3 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x29CB DUP5 DUP5 DUP5 PUSH2 0x2355 JUMP JUMPDEST PUSH2 0x29D7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2FB5 JUMP JUMPDEST PUSH2 0x2A16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0D SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A98 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AAA DUP2 PUSH2 0x2F68 JUMP JUMPDEST ISZERO PUSH2 0x2AEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE1 SWAP1 PUSH2 0x4D20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AF8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x2B01 DUP2 PUSH2 0x2F68 JUMP JUMPDEST ISZERO PUSH2 0x2B41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B38 SWAP1 PUSH2 0x4D20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2C4B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2C58 DUP3 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x2C97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C8E SWAP1 PUSH2 0x4DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2CB7 SWAP2 SWAP1 PUSH2 0x4F7E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2CE7 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFF PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH2 0x2E3A CALLER ADDRESS DUP6 PUSH2 0x2355 JUMP JUMPDEST PUSH32 0x6ABF8FEA1F4C585BF426B0FDBD54C0F004A746A4B6DCB76752A2D5D268F8730B DUP4 ADDRESS CALLER DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2E72 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x509C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EA1 DUP3 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EAB PUSH2 0x2E7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2ECB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2EF6 JUMP JUMPDEST DUP1 PUSH2 0x2ED5 DUP5 PUSH2 0x313C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2EE6 SWAP3 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F8A DUP4 PUSH2 0x2817 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x320A JUMP JUMPDEST ISZERO PUSH2 0x312F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2FFF PUSH2 0x2245 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3021 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5157 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x305D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305A SWAP2 SWAP1 PUSH2 0x51B8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x30DF JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x308D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3092 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x30D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30CE SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x314B DUP5 PUSH2 0x322D JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316A JUMPI PUSH2 0x3169 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x319C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x31FF JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x31F3 JUMPI PUSH2 0x31F2 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x31AA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x328B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3281 JUMPI PUSH2 0x3280 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x32C8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x32BE JUMPI PUSH2 0x32BD PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x32F7 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x32ED JUMPI PUSH2 0x32EC PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3320 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3316 JUMPI PUSH2 0x3315 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3345 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x333B JUMPI PUSH2 0x333A PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3368 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x335E JUMPI PUSH2 0x335D PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3377 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3426 DUP2 PUSH2 0x33F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3443 DUP2 PUSH2 0x341D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x345F JUMPI PUSH2 0x345E PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x346D DUP5 DUP3 DUP6 ADD PUSH2 0x3434 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348B DUP2 PUSH2 0x3476 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3482 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34BF DUP2 PUSH2 0x34AC JUMP JUMPDEST DUP2 EQ PUSH2 0x34CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34DC DUP2 PUSH2 0x34B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34F8 JUMPI PUSH2 0x34F7 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3506 DUP5 DUP3 DUP6 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x353A DUP3 PUSH2 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354A DUP2 PUSH2 0x352F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3559 DUP2 PUSH2 0x34AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3568 DUP2 PUSH2 0x3476 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3584 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3597 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x35AA PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x35BD PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x355F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x35D0 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x35EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x356E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3633 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3646 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3659 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x366C PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x355F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x367F PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3691 DUP4 DUP4 PUSH2 0x361D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B5 DUP3 PUSH2 0x35F1 JUMP JUMPDEST PUSH2 0x36BF DUP2 DUP6 PUSH2 0x35FC JUMP JUMPDEST SWAP4 POP PUSH2 0x36CA DUP4 PUSH2 0x360D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36FB JUMPI DUP2 MLOAD PUSH2 0x36E2 DUP9 DUP3 PUSH2 0x3685 JUMP JUMPDEST SWAP8 POP PUSH2 0x36ED DUP4 PUSH2 0x369D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3722 DUP2 DUP5 PUSH2 0x36AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3764 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3749 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x3796 DUP2 DUP6 PUSH2 0x3735 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x37AF DUP2 PUSH2 0x3770 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37D4 DUP2 DUP5 PUSH2 0x3781 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E5 DUP2 PUSH2 0x352F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x380F DUP2 PUSH2 0x352F JUMP JUMPDEST DUP2 EQ PUSH2 0x381A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x382C DUP2 PUSH2 0x3806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3849 JUMPI PUSH2 0x3848 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3857 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3868 DUP6 DUP3 DUP7 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3888 DUP2 PUSH2 0x3872 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x387F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38C2 JUMPI PUSH2 0x38C1 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38D0 DUP7 DUP3 DUP8 ADD PUSH2 0x381D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x38E1 DUP7 DUP3 DUP8 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x38F2 DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3913 JUMPI PUSH2 0x3912 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3921 DUP6 DUP3 DUP7 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3932 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3945 DUP2 PUSH2 0x34AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x397F JUMPI PUSH2 0x397E PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x398D DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x399E DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x39AF DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39CF JUMPI PUSH2 0x39CE PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39DD DUP5 DUP3 DUP6 ADD PUSH2 0x381D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39EF DUP2 PUSH2 0x3476 JUMP JUMPDEST DUP2 EQ PUSH2 0x39FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0C DUP2 PUSH2 0x39E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A29 JUMPI PUSH2 0x3A28 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A37 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A48 DUP6 DUP3 DUP7 ADD PUSH2 0x39FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3A94 DUP3 PUSH2 0x3770 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3AB3 JUMPI PUSH2 0x3AB2 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC6 PUSH2 0x33DD JUMP JUMPDEST SWAP1 POP PUSH2 0x3AD2 DUP3 DUP3 PUSH2 0x3A8B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3AF2 JUMPI PUSH2 0x3AF1 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH2 0x3AFB DUP3 PUSH2 0x3770 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2A PUSH2 0x3B25 DUP5 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x3ABC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3B46 JUMPI PUSH2 0x3B45 PUSH2 0x3A57 JUMP JUMPDEST JUMPDEST PUSH2 0x3B51 DUP5 DUP3 DUP6 PUSH2 0x3B08 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B6E JUMPI PUSH2 0x3B6D PUSH2 0x3A52 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B7E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3B17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BA1 JUMPI PUSH2 0x3BA0 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BAF DUP8 DUP3 DUP9 ADD PUSH2 0x381D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3BC0 DUP8 DUP3 DUP9 ADD PUSH2 0x381D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3BD1 DUP8 DUP3 DUP9 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BF2 JUMPI PUSH2 0x3BF1 PUSH2 0x33EC JUMP JUMPDEST JUMPDEST PUSH2 0x3BFE DUP8 DUP3 DUP9 ADD PUSH2 0x3B59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C25 JUMPI PUSH2 0x3C24 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH2 0x3C2E DUP3 PUSH2 0x3770 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4E PUSH2 0x3C49 DUP5 PUSH2 0x3C0A JUMP JUMPDEST PUSH2 0x3ABC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3C6A JUMPI PUSH2 0x3C69 PUSH2 0x3A57 JUMP JUMPDEST JUMPDEST PUSH2 0x3C75 DUP5 DUP3 DUP6 PUSH2 0x3B08 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C92 JUMPI PUSH2 0x3C91 PUSH2 0x3A52 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CC4 JUMPI PUSH2 0x3CC3 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CE2 JUMPI PUSH2 0x3CE1 PUSH2 0x33EC JUMP JUMPDEST JUMPDEST PUSH2 0x3CEE DUP7 DUP3 DUP8 ADD PUSH2 0x3C7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3CFF DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3D10 DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D31 JUMPI PUSH2 0x3D30 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D4F JUMPI PUSH2 0x3D4E PUSH2 0x33EC JUMP JUMPDEST JUMPDEST PUSH2 0x3D5B DUP6 DUP3 DUP7 ADD PUSH2 0x3C7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D6C DUP6 DUP3 DUP7 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x3D8C PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x3D99 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x3DA6 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DB3 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DC0 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DCD PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DDA PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DE7 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x387F JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E0B JUMPI PUSH2 0x3E0A PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E19 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E2A DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6E DUP3 PUSH2 0x34AC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3EA0 JUMPI PUSH2 0x3E9F PUSH2 0x3E34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3F21 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3F34 JUMPI PUSH2 0x3F33 PUSH2 0x3EDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F96 PUSH1 0x21 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA1 DUP3 PUSH2 0x3F3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FC5 DUP2 PUSH2 0x3F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4028 PUSH1 0x3D DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4033 DUP3 PUSH2 0x3FCC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4057 DUP2 PUSH2 0x401B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61756374696F6E206973207374696C6C206F70656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4094 PUSH1 0x15 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x409F DUP3 PUSH2 0x405E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40C3 DUP2 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C792073656C6C6572206F722077696E6E65722063616E20636F6D706C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74652061756374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4126 PUSH1 0x2A DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4131 DUP3 PUSH2 0x40CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4155 DUP2 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E20636F6D706C65746564207375636365737366756C6C790000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4192 PUSH1 0x1E DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x419D DUP3 PUSH2 0x415C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x41BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x41CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x41DB DUP2 PUSH2 0x4185 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4240 PUSH1 0x2D DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x424B DUP3 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x426F DUP2 PUSH2 0x4233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AC PUSH1 0x11 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x42B7 DUP3 PUSH2 0x4276 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42DB DUP2 PUSH2 0x429F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F7420626964206F6E207768617420796F75206F776E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4318 PUSH1 0x1A DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4323 DUP3 PUSH2 0x42E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4347 DUP2 PUSH2 0x430B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4359 DUP3 PUSH2 0x34AC JUMP JUMPDEST SWAP2 POP PUSH2 0x4364 DUP4 PUSH2 0x34AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x437C JUMPI PUSH2 0x437B PUSH2 0x3E34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616E6E6F74206269642062656C6F7720746865206C61746573742062696464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E672070726963650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43DE PUSH1 0x29 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x43E9 DUP3 PUSH2 0x4382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x440D DUP2 PUSH2 0x43D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x444E DUP3 PUSH2 0x34AC JUMP JUMPDEST SWAP2 POP PUSH2 0x4459 DUP4 PUSH2 0x34AC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4469 JUMPI PUSH2 0x4468 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4269642063726561746564207375636365737366756C6C790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44AA PUSH1 0x18 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x44B5 DUP3 PUSH2 0x4474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x44E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x44F3 DUP2 PUSH2 0x449D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2063726561746564207375636365737366756C6C7900000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4532 PUSH1 0x1C DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x453D DUP3 PUSH2 0x44FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x455D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x456A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4577 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4584 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4591 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x45A2 DUP2 PUSH2 0x4525 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E4 PUSH1 0x18 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x45EF DUP3 PUSH2 0x45AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4613 DUP2 PUSH2 0x45D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4676 PUSH1 0x29 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4681 DUP3 PUSH2 0x461A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46A5 DUP2 PUSH2 0x4669 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C2 DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x46CC DUP2 DUP6 PUSH2 0x46AC JUMP JUMPDEST SWAP4 POP PUSH2 0x46DC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3746 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46F4 DUP3 DUP6 PUSH2 0x46B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4700 DUP3 DUP5 PUSH2 0x46B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E636F727265637420616D6F756E7400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4742 PUSH1 0x10 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x474D DUP3 PUSH2 0x470C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4771 DUP2 PUSH2 0x4735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4793 PUSH1 0x0 DUP4 PUSH2 0x4778 JUMP JUMPDEST SWAP2 POP PUSH2 0x479E DUP3 PUSH2 0x4783 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B4 DUP3 PUSH2 0x4786 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E74206661696C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F4 PUSH1 0xE DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x47FF DUP3 PUSH2 0x47BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4823 DUP2 PUSH2 0x47E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F6C64204E4654207375636365737366756C6C790000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4860 PUSH1 0x15 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x486B DUP3 PUSH2 0x482A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x488B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4898 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x48A5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x48B2 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x48BF PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3482 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x48D0 DUP2 PUSH2 0x4853 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4912 PUSH1 0x1F DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x491D DUP3 PUSH2 0x48DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4941 DUP2 PUSH2 0x4905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A4 PUSH1 0x25 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x49AF DUP3 PUSH2 0x4948 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49D3 DUP2 PUSH2 0x4997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A36 PUSH1 0x24 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A41 DUP3 PUSH2 0x49DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A65 DUP2 PUSH2 0x4A29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722C2063616E6E6F74207472616E7366657220746F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7328302900000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC8 PUSH1 0x24 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD3 DUP3 PUSH2 0x4A6C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AF7 DUP2 PUSH2 0x4ABB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722C206661696C656420746F2073656E642045746865720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B34 PUSH1 0x1B DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B3F DUP3 PUSH2 0x4AFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B63 DUP2 PUSH2 0x4B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA0 PUSH1 0x19 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BAB DUP3 PUSH2 0x4B6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BCF DUP2 PUSH2 0x4B93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C32 PUSH1 0x32 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C3D DUP3 PUSH2 0x4BD6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C61 DUP2 PUSH2 0x4C25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C9E PUSH1 0x20 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA9 DUP3 PUSH2 0x4C68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CCD DUP2 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0A PUSH1 0x1C DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D15 DUP3 PUSH2 0x4CD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D39 DUP2 PUSH2 0x4CFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9C PUSH1 0x2E DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA7 DUP3 PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DCB DUP2 PUSH2 0x4D8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4E34 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4DF7 JUMP JUMPDEST PUSH2 0x4E3E DUP7 DUP4 PUSH2 0x4DF7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E7B PUSH2 0x4E76 PUSH2 0x4E71 DUP5 PUSH2 0x34AC JUMP JUMPDEST PUSH2 0x4E56 JUMP JUMPDEST PUSH2 0x34AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E95 DUP4 PUSH2 0x4E60 JUMP JUMPDEST PUSH2 0x4EA9 PUSH2 0x4EA1 DUP3 PUSH2 0x4E82 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4E04 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4EBE PUSH2 0x4EB1 JUMP JUMPDEST PUSH2 0x4EC9 DUP2 DUP5 DUP5 PUSH2 0x4E8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4EED JUMPI PUSH2 0x4EE2 PUSH1 0x0 DUP3 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4ECF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F32 JUMPI PUSH2 0x4F03 DUP2 PUSH2 0x4DD2 JUMP JUMPDEST PUSH2 0x4F0C DUP5 PUSH2 0x4DE7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4F1B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4F2F PUSH2 0x4F27 DUP6 PUSH2 0x4DE7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4ECE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F55 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4F37 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6E DUP4 DUP4 PUSH2 0x4F44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F87 DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FA0 JUMPI PUSH2 0x4F9F PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH2 0x4FAA DUP3 SLOAD PUSH2 0x3F09 JUMP JUMPDEST PUSH2 0x4FB5 DUP3 DUP3 DUP6 PUSH2 0x4EF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4FE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4FD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4FE0 DUP6 DUP3 PUSH2 0x4F62 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5048 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4FF6 DUP7 PUSH2 0x4DD2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x501E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4FF9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x503B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5037 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4F44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E46542063726561746564207375636365737366756C79000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5086 PUSH1 0x17 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x5091 DUP3 PUSH2 0x5050 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x50B1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x50BE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x50CB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x50D8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x50E5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3482 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x50F6 DUP2 PUSH2 0x5079 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5129 DUP3 PUSH2 0x5102 JUMP JUMPDEST PUSH2 0x5133 DUP2 DUP6 PUSH2 0x510D JUMP JUMPDEST SWAP4 POP PUSH2 0x5143 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x514C DUP2 PUSH2 0x3770 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x516C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x5179 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x5186 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5198 DUP2 DUP5 PUSH2 0x511E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x51B2 DUP2 PUSH2 0x341D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51CE JUMPI PUSH2 0x51CD PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51DC DUP5 DUP3 DUP6 ADD PUSH2 0x51A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xEF PUSH12 0x4479F9FE5A09BE60BACEA739 0xBA EQ 0xC4 0xC7 0xAF SDIV CALLDATASIZE 0x2C DUP10 DUP8 CALLER 0x2F 0x5C 0x21 0x2A SWAP4 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"321:10511:17:-:0;;;766:2;729:39;;2756:84;;;;;;;;;;1390:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;1716:1:3;1821:7;:22;;;;2821:10:17::1;2805:5;;:27;;;;;;;;;;;;;;;;;;321:10511:::0;;7:99:18;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;321:10511:17:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@COMPLETED_STATUS_3024":{"entryPoint":3626,"id":3024,"parameterSlots":0,"returnSlots":0},"@OPEN_STATUS_3021":{"entryPoint":4595,"id":3021,"parameterSlots":0,"returnSlots":0},"@_afterTokenTransfer_1003":{"entryPoint":12207,"id":1003,"parameterSlots":4,"returnSlots":0},"@_approve_869":{"entryPoint":8781,"id":869,"parameterSlots":2,"returnSlots":0},"@_baseURI_306":{"entryPoint":11903,"id":306,"parameterSlots":0,"returnSlots":1},"@_beforeTokenTransfer_990":{"entryPoint":12201,"id":990,"parameterSlots":4,"returnSlots":0},"@_checkOnERC721Received_977":{"entryPoint":12213,"id":977,"parameterSlots":4,"returnSlots":1},"@_exists_538":{"entryPoint":12136,"id":538,"parameterSlots":1,"returnSlots":1},"@_isApprovedOrOwner_572":{"entryPoint":10114,"id":572,"parameterSlots":2,"returnSlots":1},"@_mint_693":{"entryPoint":10802,"id":693,"parameterSlots":2,"returnSlots":0},"@_msgSender_1678":{"entryPoint":8773,"id":1678,"parameterSlots":0,"returnSlots":1},"@_nonReentrantAfter_80":{"entryPoint":10104,"id":80,"parameterSlots":0,"returnSlots":0},"@_nonReentrantBefore_72":{"entryPoint":8966,"id":72,"parameterSlots":0,"returnSlots":0},"@_ownerOf_520":{"entryPoint":10263,"id":520,"parameterSlots":1,"returnSlots":1},"@_requireMinted_915":{"entryPoint":8698,"id":915,"parameterSlots":1,"returnSlots":0},"@_safeTransfer_507":{"entryPoint":10688,"id":507,"parameterSlots":4,"returnSlots":0},"@_setApprovalForAll_901":{"entryPoint":10324,"id":901,"parameterSlots":3,"returnSlots":0},"@_setTokenURI_1278":{"entryPoint":11343,"id":1278,"parameterSlots":2,"returnSlots":0},"@_transferFund_3925":{"entryPoint":9806,"id":3925,"parameterSlots":2,"returnSlots":0},"@_transfer_845":{"entryPoint":9045,"id":845,"parameterSlots":3,"returnSlots":0},"@allNfts_3740":{"entryPoint":8023,"id":3740,"parameterSlots":0,"returnSlots":1},"@approve_349":{"entryPoint":3260,"id":349,"parameterSlots":2,"returnSlots":0},"@balanceOf_210":{"entryPoint":6202,"id":210,"parameterSlots":1,"returnSlots":1},"@bid_3583":{"entryPoint":4816,"id":3583,"parameterSlots":1,"returnSlots":0},"@bids_3045":{"entryPoint":4696,"id":3045,"parameterSlots":0,"returnSlots":0},"@completeAuction_3491":{"entryPoint":3631,"id":3491,"parameterSlots":1,"returnSlots":0},"@createAuctionListing_3373":{"entryPoint":5557,"id":3373,"parameterSlots":3,"returnSlots":1},"@createNFT_3291":{"entryPoint":11507,"id":3291,"parameterSlots":2,"returnSlots":0},"@current_1706":{"entryPoint":8684,"id":1706,"parameterSlots":1,"returnSlots":1},"@getApproved_367":{"entryPoint":3190,"id":367,"parameterSlots":1,"returnSlots":1},"@getNftPrice_3863":{"entryPoint":6385,"id":3863,"parameterSlots":1,"returnSlots":1},"@highestBidder_3049":{"entryPoint":4765,"id":3049,"parameterSlots":0,"returnSlots":0},"@increment_1720":{"entryPoint":10780,"id":1720,"parameterSlots":1,"returnSlots":0},"@isApprovedForAll_402":{"entryPoint":7241,"id":402,"parameterSlots":2,"returnSlots":1},"@isAuctionOpen_3887":{"entryPoint":3539,"id":3887,"parameterSlots":1,"returnSlots":1},"@isContract_1354":{"entryPoint":12810,"id":1354,"parameterSlots":1,"returnSlots":1},"@listings_3039":{"entryPoint":7092,"id":3039,"parameterSlots":0,"returnSlots":0},"@log10_2730":{"entryPoint":12845,"id":2730,"parameterSlots":1,"returnSlots":1},"@minAuctionIncrement_3027":{"entryPoint":6196,"id":3027,"parameterSlots":0,"returnSlots":0},"@mintAuctionToken_3232":{"entryPoint":6683,"id":3232,"parameterSlots":3,"returnSlots":1},"@mintToken_3189":{"entryPoint":6752,"id":3189,"parameterSlots":2,"returnSlots":1},"@name_248":{"entryPoint":3044,"id":248,"parameterSlots":0,"returnSlots":1},"@ownerOf_238":{"entryPoint":6062,"id":238,"parameterSlots":1,"returnSlots":1},"@safeTransferFrom_448":{"entryPoint":4733,"id":448,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_478":{"entryPoint":6585,"id":478,"parameterSlots":4,"returnSlots":0},"@sellNFT_3688":{"entryPoint":7389,"id":3688,"parameterSlots":1,"returnSlots":0},"@setApprovalForAll_384":{"entryPoint":6563,"id":384,"parameterSlots":2,"returnSlots":0},"@singleNFT_3756":{"entryPoint":2075,"id":3756,"parameterSlots":1,"returnSlots":1},"@supportsInterface_1193":{"entryPoint":1978,"id":1193,"parameterSlots":1,"returnSlots":1},"@supportsInterface_186":{"entryPoint":8458,"id":186,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2014":{"entryPoint":12030,"id":2014,"parameterSlots":1,"returnSlots":1},"@symbol_258":{"entryPoint":6417,"id":258,"parameterSlots":0,"returnSlots":1},"@toString_1821":{"entryPoint":12604,"id":1821,"parameterSlots":1,"returnSlots":1},"@tokenURI_1252":{"entryPoint":6818,"id":1252,"parameterSlots":1,"returnSlots":1},"@tokenURI_297":{"entryPoint":11926,"id":297,"parameterSlots":1,"returnSlots":1},"@transferFrom_429":{"entryPoint":4600,"id":429,"parameterSlots":3,"returnSlots":0},"@userNfts_3849":{"entryPoint":2339,"id":3849,"parameterSlots":0,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":15127,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":15419,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":14365,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":14845,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":13364,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":20899,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":15193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":15485,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":13517,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":14777,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":15860,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":14505,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":15239,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":14866,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":14386,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":13385,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":20920,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_uint256":{"entryPoint":15642,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256":{"entryPoint":15531,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256":{"entryPoint":13538,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":14588,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_uint256t_uint256":{"entryPoint":14694,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr":{"entryPoint":13957,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":13633,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14300,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13994,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":13663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":13442,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":20766,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":14209,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18103,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580_to_t_string_memory_ptr_fromStack":{"entryPoint":18515,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack":{"entryPoint":16947,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5_to_t_string_memory_ptr_fromStack":{"entryPoint":17565,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack":{"entryPoint":19493,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack":{"entryPoint":18839,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack":{"entryPoint":19709,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack":{"entryPoint":18985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef_to_t_string_memory_ptr_fromStack":{"entryPoint":17055,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack":{"entryPoint":19347,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59_to_t_string_memory_ptr_fromStack":{"entryPoint":19131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack":{"entryPoint":18025,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack":{"entryPoint":18407,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack":{"entryPoint":19855,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10_to_t_string_memory_ptr_fromStack":{"entryPoint":17361,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack":{"entryPoint":19601,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a_to_t_string_memory_ptr_fromStack":{"entryPoint":16665,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f_to_t_string_memory_ptr_fromStack":{"entryPoint":17701,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack":{"entryPoint":17879,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack":{"entryPoint":16265,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4_to_t_string_memory_ptr_fromStack":{"entryPoint":20601,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970_to_t_string_memory_ptr_fromStack":{"entryPoint":18229,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f_to_t_string_memory_ptr_fromStack":{"entryPoint":16773,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18310,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack":{"entryPoint":16411,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353_to_t_string_memory_ptr_fromStack":{"entryPoint":16519,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e_to_t_string_memory_ptr_fromStack":{"entryPoint":17163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1_to_t_string_memory_ptr_fromStack":{"entryPoint":19239,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack":{"entryPoint":18693,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr":{"entryPoint":13853,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr_fromStack":{"entryPoint":13678,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":13648,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":14652,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":14463,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18152,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18345,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":14315,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":20823,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed":{"entryPoint":15734,"id":null,"parameterSlots":9,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14088,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":13457,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14266,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16982,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19528,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18874,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19020,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17090,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19382,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18060,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18442,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17396,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19636,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16700,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17914,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16300,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18264,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16446,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16554,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":19274,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18728,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_NFT_$3060_memory_ptr__to_t_struct$_NFT_$3060_memory_ptr__fromStack_reversed":{"entryPoint":13782,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":14667,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580__to_t_uint256_t_address_t_address_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":18550,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4__to_t_uint256_t_address_t_address_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed":{"entryPoint":20636,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17600,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":16808,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17736,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":14478,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":15036,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":13277,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":15063,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":15370,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr":{"entryPoint":13837,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":19922,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr":{"entryPoint":13809,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":20738,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":14122,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr":{"entryPoint":13981,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13820,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":20749,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18296,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14133,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":18092,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17230,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":17475,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":20209,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":13615,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":13430,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":13297,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":13583,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":13484,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":14450,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":20174,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":20064,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":20350,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":15112,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":14150,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":19943,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":16137,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":20322,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":14987,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":20054,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":15971,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":20292,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":15924,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":17428,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":16090,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":16043,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":14940,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":20098,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":14930,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":14935,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":13292,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":13287,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":14192,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":19959,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":20279,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":20150,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580":{"entryPoint":18474,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af":{"entryPoint":16868,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5":{"entryPoint":17524,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e":{"entryPoint":19414,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48":{"entryPoint":18760,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57":{"entryPoint":19668,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4":{"entryPoint":18906,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef":{"entryPoint":17014,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05":{"entryPoint":19306,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59":{"entryPoint":19052,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159":{"entryPoint":17946,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b":{"entryPoint":18366,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4":{"entryPoint":19776,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10":{"entryPoint":17282,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6":{"entryPoint":19560,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a":{"entryPoint":16586,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f":{"entryPoint":17660,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f":{"entryPoint":17838,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942":{"entryPoint":16186,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4":{"entryPoint":20560,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970":{"entryPoint":18188,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f":{"entryPoint":16732,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470":{"entryPoint":18307,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83":{"entryPoint":16332,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353":{"entryPoint":16478,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e":{"entryPoint":17122,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1":{"entryPoint":19198,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619":{"entryPoint":18652,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":19972,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":20108,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":14342,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14822,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":13341,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":13494,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":20145,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:59655:18","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:18","statements":[{"nodeType":"YulAssignment","src":"57:19:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:18","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:18"},"nodeType":"YulFunctionCall","src":"67:9:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:18"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:18","type":""}],"src":"7:75:18"},{"body":{"nodeType":"YulBlock","src":"177:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:18"},"nodeType":"YulFunctionCall","src":"187:12:18"},"nodeType":"YulExpressionStatement","src":"187:12:18"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:18"},{"body":{"nodeType":"YulBlock","src":"300:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:18"},"nodeType":"YulFunctionCall","src":"310:12:18"},"nodeType":"YulExpressionStatement","src":"310:12:18"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:18"},{"body":{"nodeType":"YulBlock","src":"378:105:18","statements":[{"nodeType":"YulAssignment","src":"388:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:18","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:18"},"nodeType":"YulFunctionCall","src":"399:78:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:18"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:18","type":""}],"src":"334:149:18"},{"body":{"nodeType":"YulBlock","src":"531:78:18","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:18"},"nodeType":"YulFunctionCall","src":"589:12:18"},"nodeType":"YulExpressionStatement","src":"589:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:18"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:18"},"nodeType":"YulFunctionCall","src":"561:23:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:18"},"nodeType":"YulFunctionCall","src":"551:34:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:18"},"nodeType":"YulFunctionCall","src":"544:42:18"},"nodeType":"YulIf","src":"541:62:18"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:18","type":""}],"src":"489:120:18"},{"body":{"nodeType":"YulBlock","src":"666:86:18","statements":[{"nodeType":"YulAssignment","src":"676:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:18"},"nodeType":"YulFunctionCall","src":"685:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:18"},"nodeType":"YulFunctionCall","src":"714:32:18"},"nodeType":"YulExpressionStatement","src":"714:32:18"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:18","type":""}],"src":"615:137:18"},{"body":{"nodeType":"YulBlock","src":"823:262:18","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:18"},"nodeType":"YulFunctionCall","src":"871:79:18"},"nodeType":"YulExpressionStatement","src":"871:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:18"},"nodeType":"YulFunctionCall","src":"840:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:18"},"nodeType":"YulFunctionCall","src":"836:32:18"},"nodeType":"YulIf","src":"833:119:18"},{"nodeType":"YulBlock","src":"962:116:18","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:18","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:18"},"nodeType":"YulFunctionCall","src":"1036:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:18"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:18"},"nodeType":"YulFunctionCall","src":"1016:52:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:18","type":""}],"src":"758:327:18"},{"body":{"nodeType":"YulBlock","src":"1133:48:18","statements":[{"nodeType":"YulAssignment","src":"1143:32:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:18"},"nodeType":"YulFunctionCall","src":"1161:13:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:18"},"nodeType":"YulFunctionCall","src":"1154:21:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:18"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:18","type":""}],"src":"1091:90:18"},{"body":{"nodeType":"YulBlock","src":"1246:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:18"},"nodeType":"YulFunctionCall","src":"1268:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:18"},"nodeType":"YulFunctionCall","src":"1256:34:18"},"nodeType":"YulExpressionStatement","src":"1256:34:18"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:18","type":""}],"src":"1187:109:18"},{"body":{"nodeType":"YulBlock","src":"1394:118:18","statements":[{"nodeType":"YulAssignment","src":"1404:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:18"},"nodeType":"YulFunctionCall","src":"1412:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:18"},"nodeType":"YulFunctionCall","src":"1487:17:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:18"},"nodeType":"YulFunctionCall","src":"1440:65:18"},"nodeType":"YulExpressionStatement","src":"1440:65:18"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:18","type":""}],"src":"1302:210:18"},{"body":{"nodeType":"YulBlock","src":"1563:32:18","statements":[{"nodeType":"YulAssignment","src":"1573:16:18","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:18"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:18","type":""}],"src":"1518:77:18"},{"body":{"nodeType":"YulBlock","src":"1644:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:18"},"nodeType":"YulFunctionCall","src":"1703:12:18"},"nodeType":"YulExpressionStatement","src":"1703:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1674:17:18"},"nodeType":"YulFunctionCall","src":"1674:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:18"},"nodeType":"YulFunctionCall","src":"1664:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:18"},"nodeType":"YulFunctionCall","src":"1657:43:18"},"nodeType":"YulIf","src":"1654:63:18"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:18","type":""}],"src":"1601:122:18"},{"body":{"nodeType":"YulBlock","src":"1781:87:18","statements":[{"nodeType":"YulAssignment","src":"1791:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:18"},"nodeType":"YulFunctionCall","src":"1800:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:18"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1829:26:18"},"nodeType":"YulFunctionCall","src":"1829:33:18"},"nodeType":"YulExpressionStatement","src":"1829:33:18"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:18","type":""}],"src":"1729:139:18"},{"body":{"nodeType":"YulBlock","src":"1940:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:18"},"nodeType":"YulFunctionCall","src":"1988:79:18"},"nodeType":"YulExpressionStatement","src":"1988:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:18"},"nodeType":"YulFunctionCall","src":"1957:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:18"},"nodeType":"YulFunctionCall","src":"1953:32:18"},"nodeType":"YulIf","src":"1950:119:18"},{"nodeType":"YulBlock","src":"2079:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:18","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:18"},"nodeType":"YulFunctionCall","src":"2154:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2133:20:18"},"nodeType":"YulFunctionCall","src":"2133:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:18","type":""}],"src":"1874:329:18"},{"body":{"nodeType":"YulBlock","src":"2254:81:18","statements":[{"nodeType":"YulAssignment","src":"2264:65:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2279:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"2286:42:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2275:3:18"},"nodeType":"YulFunctionCall","src":"2275:54:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2264:7:18"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2236:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2246:7:18","type":""}],"src":"2209:126:18"},{"body":{"nodeType":"YulBlock","src":"2386:51:18","statements":[{"nodeType":"YulAssignment","src":"2396:35:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2425:5:18"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2407:17:18"},"nodeType":"YulFunctionCall","src":"2407:24:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2396:7:18"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2368:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2378:7:18","type":""}],"src":"2341:96:18"},{"body":{"nodeType":"YulBlock","src":"2498:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2515:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2538:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2520:17:18"},"nodeType":"YulFunctionCall","src":"2520:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2508:6:18"},"nodeType":"YulFunctionCall","src":"2508:37:18"},"nodeType":"YulExpressionStatement","src":"2508:37:18"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2486:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2493:3:18","type":""}],"src":"2443:108:18"},{"body":{"nodeType":"YulBlock","src":"2612:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2629:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2652:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2634:17:18"},"nodeType":"YulFunctionCall","src":"2634:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2622:6:18"},"nodeType":"YulFunctionCall","src":"2622:37:18"},"nodeType":"YulExpressionStatement","src":"2622:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2600:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2607:3:18","type":""}],"src":"2557:108:18"},{"body":{"nodeType":"YulBlock","src":"2720:50:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2737:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2757:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2742:14:18"},"nodeType":"YulFunctionCall","src":"2742:21:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2730:6:18"},"nodeType":"YulFunctionCall","src":"2730:34:18"},"nodeType":"YulExpressionStatement","src":"2730:34:18"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2708:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2715:3:18","type":""}],"src":"2671:99:18"},{"body":{"nodeType":"YulBlock","src":"2930:914:18","statements":[{"nodeType":"YulVariableDeclaration","src":"2940:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2956:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"2961:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2952:3:18"},"nodeType":"YulFunctionCall","src":"2952:14:18"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"2944:4:18","type":""}]},{"nodeType":"YulBlock","src":"2976:165:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3012:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3042:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3049:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3038:3:18"},"nodeType":"YulFunctionCall","src":"3038:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3032:5:18"},"nodeType":"YulFunctionCall","src":"3032:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3016:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3102:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3120:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3125:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3116:3:18"},"nodeType":"YulFunctionCall","src":"3116:14:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3068:33:18"},"nodeType":"YulFunctionCall","src":"3068:63:18"},"nodeType":"YulExpressionStatement","src":"3068:63:18"}]},{"nodeType":"YulBlock","src":"3151:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3188:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3218:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3225:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3214:3:18"},"nodeType":"YulFunctionCall","src":"3214:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3208:5:18"},"nodeType":"YulFunctionCall","src":"3208:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3192:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3278:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3296:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3301:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3292:3:18"},"nodeType":"YulFunctionCall","src":"3292:14:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"3244:33:18"},"nodeType":"YulFunctionCall","src":"3244:63:18"},"nodeType":"YulExpressionStatement","src":"3244:63:18"}]},{"nodeType":"YulBlock","src":"3327:165:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3363:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3393:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3400:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3389:3:18"},"nodeType":"YulFunctionCall","src":"3389:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3383:5:18"},"nodeType":"YulFunctionCall","src":"3383:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3367:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3453:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3471:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3476:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3467:3:18"},"nodeType":"YulFunctionCall","src":"3467:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3419:33:18"},"nodeType":"YulFunctionCall","src":"3419:63:18"},"nodeType":"YulExpressionStatement","src":"3419:63:18"}]},{"nodeType":"YulBlock","src":"3502:158:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3537:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3567:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3574:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3563:3:18"},"nodeType":"YulFunctionCall","src":"3563:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3557:5:18"},"nodeType":"YulFunctionCall","src":"3557:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3541:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3621:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3639:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3644:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3635:3:18"},"nodeType":"YulFunctionCall","src":"3635:14:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"3593:27:18"},"nodeType":"YulFunctionCall","src":"3593:57:18"},"nodeType":"YulExpressionStatement","src":"3593:57:18"}]},{"nodeType":"YulBlock","src":"3670:167:18","statements":[{"nodeType":"YulVariableDeclaration","src":"3708:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3738:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"3745:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:18"},"nodeType":"YulFunctionCall","src":"3734:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3728:5:18"},"nodeType":"YulFunctionCall","src":"3728:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"3712:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"3798:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3816:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"3821:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3812:3:18"},"nodeType":"YulFunctionCall","src":"3812:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3764:33:18"},"nodeType":"YulFunctionCall","src":"3764:63:18"},"nodeType":"YulExpressionStatement","src":"3764:63:18"}]}]},"name":"abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2917:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2924:3:18","type":""}],"src":"2822:1022:18"},{"body":{"nodeType":"YulBlock","src":"3990:167:18","statements":[{"nodeType":"YulAssignment","src":"4000:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4012:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4023:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4008:3:18"},"nodeType":"YulFunctionCall","src":"4008:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4000:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4123:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4136:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"4147:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4132:3:18"},"nodeType":"YulFunctionCall","src":"4132:17:18"}],"functionName":{"name":"abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4037:85:18"},"nodeType":"YulFunctionCall","src":"4037:113:18"},"nodeType":"YulExpressionStatement","src":"4037:113:18"}]},"name":"abi_encode_tuple_t_struct$_NFT_$3060_memory_ptr__to_t_struct$_NFT_$3060_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3962:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3974:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3985:4:18","type":""}],"src":"3850:307:18"},{"body":{"nodeType":"YulBlock","src":"4258:40:18","statements":[{"nodeType":"YulAssignment","src":"4269:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4285:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4279:5:18"},"nodeType":"YulFunctionCall","src":"4279:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4269:6:18"}]}]},"name":"array_length_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4241:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4251:6:18","type":""}],"src":"4163:135:18"},{"body":{"nodeType":"YulBlock","src":"4436:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4453:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"4458:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4446:6:18"},"nodeType":"YulFunctionCall","src":"4446:19:18"},"nodeType":"YulExpressionStatement","src":"4446:19:18"},{"nodeType":"YulAssignment","src":"4474:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4493:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4498:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4489:3:18"},"nodeType":"YulFunctionCall","src":"4489:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4474:11:18"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4408:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"4413:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4424:11:18","type":""}],"src":"4304:205:18"},{"body":{"nodeType":"YulBlock","src":"4608:60:18","statements":[{"nodeType":"YulAssignment","src":"4618:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4626:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4618:4:18"}]},{"nodeType":"YulAssignment","src":"4639:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"4651:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4656:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4647:3:18"},"nodeType":"YulFunctionCall","src":"4647:14:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4639:4:18"}]}]},"name":"array_dataslot_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4595:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4603:4:18","type":""}],"src":"4515:153:18"},{"body":{"nodeType":"YulBlock","src":"4818:914:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4828:26:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4844:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"4849:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4840:3:18"},"nodeType":"YulFunctionCall","src":"4840:14:18"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4832:4:18","type":""}]},{"nodeType":"YulBlock","src":"4864:165:18","statements":[{"nodeType":"YulVariableDeclaration","src":"4900:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4930:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"4937:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:18"},"nodeType":"YulFunctionCall","src":"4926:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4920:5:18"},"nodeType":"YulFunctionCall","src":"4920:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4904:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4990:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5008:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5013:4:18","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5004:3:18"},"nodeType":"YulFunctionCall","src":"5004:14:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"4956:33:18"},"nodeType":"YulFunctionCall","src":"4956:63:18"},"nodeType":"YulExpressionStatement","src":"4956:63:18"}]},{"nodeType":"YulBlock","src":"5039:166:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5076:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5106:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5113:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5102:3:18"},"nodeType":"YulFunctionCall","src":"5102:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5096:5:18"},"nodeType":"YulFunctionCall","src":"5096:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5080:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5166:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5184:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5189:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5180:3:18"},"nodeType":"YulFunctionCall","src":"5180:14:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5132:33:18"},"nodeType":"YulFunctionCall","src":"5132:63:18"},"nodeType":"YulExpressionStatement","src":"5132:63:18"}]},{"nodeType":"YulBlock","src":"5215:165:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5251:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5281:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5288:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5277:3:18"},"nodeType":"YulFunctionCall","src":"5277:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5271:5:18"},"nodeType":"YulFunctionCall","src":"5271:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5255:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5341:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5359:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5364:4:18","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5355:3:18"},"nodeType":"YulFunctionCall","src":"5355:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5307:33:18"},"nodeType":"YulFunctionCall","src":"5307:63:18"},"nodeType":"YulExpressionStatement","src":"5307:63:18"}]},{"nodeType":"YulBlock","src":"5390:158:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5425:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5455:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5462:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5451:3:18"},"nodeType":"YulFunctionCall","src":"5451:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5445:5:18"},"nodeType":"YulFunctionCall","src":"5445:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5429:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5509:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5527:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5532:4:18","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5523:3:18"},"nodeType":"YulFunctionCall","src":"5523:14:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"5481:27:18"},"nodeType":"YulFunctionCall","src":"5481:57:18"},"nodeType":"YulExpressionStatement","src":"5481:57:18"}]},{"nodeType":"YulBlock","src":"5558:167:18","statements":[{"nodeType":"YulVariableDeclaration","src":"5596:43:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5626:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"5633:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5622:3:18"},"nodeType":"YulFunctionCall","src":"5622:16:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5616:5:18"},"nodeType":"YulFunctionCall","src":"5616:23:18"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5600:12:18","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5686:12:18"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5704:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5709:4:18","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5700:3:18"},"nodeType":"YulFunctionCall","src":"5700:14:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5652:33:18"},"nodeType":"YulFunctionCall","src":"5652:63:18"},"nodeType":"YulExpressionStatement","src":"5652:63:18"}]}]},"name":"abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4805:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4812:3:18","type":""}],"src":"4720:1012:18"},{"body":{"nodeType":"YulBlock","src":"5860:141:18","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5946:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"5954:3:18"}],"functionName":{"name":"abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr","nodeType":"YulIdentifier","src":"5870:75:18"},"nodeType":"YulFunctionCall","src":"5870:88:18"},"nodeType":"YulExpressionStatement","src":"5870:88:18"},{"nodeType":"YulAssignment","src":"5967:28:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5985:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"5990:4:18","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5981:3:18"},"nodeType":"YulFunctionCall","src":"5981:14:18"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"5967:10:18"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"5833:6:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5841:3:18","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"5849:10:18","type":""}],"src":"5738:263:18"},{"body":{"nodeType":"YulBlock","src":"6103:38:18","statements":[{"nodeType":"YulAssignment","src":"6113:22:18","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"6125:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"6130:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6121:3:18"},"nodeType":"YulFunctionCall","src":"6121:14:18"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"6113:4:18"}]}]},"name":"array_nextElement_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"6090:3:18","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"6098:4:18","type":""}],"src":"6007:134:18"},{"body":{"nodeType":"YulBlock","src":"6363:734:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6373:89:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6456:5:18"}],"functionName":{"name":"array_length_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6387:68:18"},"nodeType":"YulFunctionCall","src":"6387:75:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6377:6:18","type":""}]},{"nodeType":"YulAssignment","src":"6471:114:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6573:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"6578:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6478:94:18"},"nodeType":"YulFunctionCall","src":"6478:107:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6471:3:18"}]},{"nodeType":"YulVariableDeclaration","src":"6594:92:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6680:5:18"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6609:70:18"},"nodeType":"YulFunctionCall","src":"6609:77:18"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"6598:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"6695:21:18","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"6709:7:18"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"6699:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"6785:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6799:34:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6826:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6820:5:18"},"nodeType":"YulFunctionCall","src":"6820:13:18"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"6803:13:18","type":""}]},{"nodeType":"YulAssignment","src":"6846:112:18","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"6939:13:18"},{"name":"pos","nodeType":"YulIdentifier","src":"6954:3:18"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr","nodeType":"YulIdentifier","src":"6853:85:18"},"nodeType":"YulFunctionCall","src":"6853:105:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6846:3:18"}]},{"nodeType":"YulAssignment","src":"6971:91:18","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"7055:6:18"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6981:73:18"},"nodeType":"YulFunctionCall","src":"6981:81:18"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"6971:6:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6747:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"6750:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6744:2:18"},"nodeType":"YulFunctionCall","src":"6744:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6758:18:18","statements":[{"nodeType":"YulAssignment","src":"6760:14:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6769:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"6772:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6765:3:18"},"nodeType":"YulFunctionCall","src":"6765:9:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6760:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"6729:14:18","statements":[{"nodeType":"YulVariableDeclaration","src":"6731:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"6740:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6735:1:18","type":""}]}]},"src":"6725:347:18"},{"nodeType":"YulAssignment","src":"7081:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"7088:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7081:3:18"}]}]},"name":"abi_encode_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6342:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6349:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6358:3:18","type":""}],"src":"6197:900:18"},{"body":{"nodeType":"YulBlock","src":"7293:267:18","statements":[{"nodeType":"YulAssignment","src":"7303:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7315:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7326:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7311:3:18"},"nodeType":"YulFunctionCall","src":"7311:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7303:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7350:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"7361:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7346:3:18"},"nodeType":"YulFunctionCall","src":"7346:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7369:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"7375:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7365:3:18"},"nodeType":"YulFunctionCall","src":"7365:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7339:6:18"},"nodeType":"YulFunctionCall","src":"7339:47:18"},"nodeType":"YulExpressionStatement","src":"7339:47:18"},{"nodeType":"YulAssignment","src":"7395:158:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7539:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"7548:4:18"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7403:135:18"},"nodeType":"YulFunctionCall","src":"7403:150:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7395:4:18"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7265:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7277:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7288:4:18","type":""}],"src":"7103:457:18"},{"body":{"nodeType":"YulBlock","src":"7625:40:18","statements":[{"nodeType":"YulAssignment","src":"7636:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7652:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7646:5:18"},"nodeType":"YulFunctionCall","src":"7646:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"7636:6:18"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7608:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"7618:6:18","type":""}],"src":"7566:99:18"},{"body":{"nodeType":"YulBlock","src":"7767:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7784:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"7789:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7777:6:18"},"nodeType":"YulFunctionCall","src":"7777:19:18"},"nodeType":"YulExpressionStatement","src":"7777:19:18"},{"nodeType":"YulAssignment","src":"7805:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7824:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"7829:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7820:3:18"},"nodeType":"YulFunctionCall","src":"7820:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7805:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7739:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"7744:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7755:11:18","type":""}],"src":"7671:169:18"},{"body":{"nodeType":"YulBlock","src":"7908:184:18","statements":[{"nodeType":"YulVariableDeclaration","src":"7918:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"7927:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"7922:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"7987:63:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8012:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"8017:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8008:3:18"},"nodeType":"YulFunctionCall","src":"8008:11:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8031:3:18"},{"name":"i","nodeType":"YulIdentifier","src":"8036:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:18"},"nodeType":"YulFunctionCall","src":"8027:11:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8021:5:18"},"nodeType":"YulFunctionCall","src":"8021:18:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8001:6:18"},"nodeType":"YulFunctionCall","src":"8001:39:18"},"nodeType":"YulExpressionStatement","src":"8001:39:18"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7948:1:18"},{"name":"length","nodeType":"YulIdentifier","src":"7951:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7945:2:18"},"nodeType":"YulFunctionCall","src":"7945:13:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7959:19:18","statements":[{"nodeType":"YulAssignment","src":"7961:15:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"7970:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"7973:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7966:3:18"},"nodeType":"YulFunctionCall","src":"7966:10:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"7961:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"7941:3:18","statements":[]},"src":"7937:113:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8070:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8075:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8066:3:18"},"nodeType":"YulFunctionCall","src":"8066:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"8084:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8059:6:18"},"nodeType":"YulFunctionCall","src":"8059:27:18"},"nodeType":"YulExpressionStatement","src":"8059:27:18"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"7890:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"7895:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"7900:6:18","type":""}],"src":"7846:246:18"},{"body":{"nodeType":"YulBlock","src":"8146:54:18","statements":[{"nodeType":"YulAssignment","src":"8156:38:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8174:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8181:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8170:3:18"},"nodeType":"YulFunctionCall","src":"8170:14:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8190:2:18","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"8186:3:18"},"nodeType":"YulFunctionCall","src":"8186:7:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8166:3:18"},"nodeType":"YulFunctionCall","src":"8166:28:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8156:6:18"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8129:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"8139:6:18","type":""}],"src":"8098:102:18"},{"body":{"nodeType":"YulBlock","src":"8298:285:18","statements":[{"nodeType":"YulVariableDeclaration","src":"8308:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8355:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"8322:32:18"},"nodeType":"YulFunctionCall","src":"8322:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8312:6:18","type":""}]},{"nodeType":"YulAssignment","src":"8370:78:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8436:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8441:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8377:58:18"},"nodeType":"YulFunctionCall","src":"8377:71:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8370:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8496:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"8503:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8492:3:18"},"nodeType":"YulFunctionCall","src":"8492:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"8510:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"8515:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8457:34:18"},"nodeType":"YulFunctionCall","src":"8457:65:18"},"nodeType":"YulExpressionStatement","src":"8457:65:18"},{"nodeType":"YulAssignment","src":"8531:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8542:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8569:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8547:21:18"},"nodeType":"YulFunctionCall","src":"8547:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8538:3:18"},"nodeType":"YulFunctionCall","src":"8538:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8531:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8279:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8286:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8294:3:18","type":""}],"src":"8206:377:18"},{"body":{"nodeType":"YulBlock","src":"8707:195:18","statements":[{"nodeType":"YulAssignment","src":"8717:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8729:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8740:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8725:3:18"},"nodeType":"YulFunctionCall","src":"8725:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8717:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8764:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"8775:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8760:3:18"},"nodeType":"YulFunctionCall","src":"8760:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8783:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"8789:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8779:3:18"},"nodeType":"YulFunctionCall","src":"8779:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8753:6:18"},"nodeType":"YulFunctionCall","src":"8753:47:18"},"nodeType":"YulExpressionStatement","src":"8753:47:18"},{"nodeType":"YulAssignment","src":"8809:86:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8881:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"8890:4:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8817:63:18"},"nodeType":"YulFunctionCall","src":"8817:78:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8809:4:18"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8679:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8691:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8702:4:18","type":""}],"src":"8589:313:18"},{"body":{"nodeType":"YulBlock","src":"8973:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8990:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9013:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"8995:17:18"},"nodeType":"YulFunctionCall","src":"8995:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8983:6:18"},"nodeType":"YulFunctionCall","src":"8983:37:18"},"nodeType":"YulExpressionStatement","src":"8983:37:18"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8961:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8968:3:18","type":""}],"src":"8908:118:18"},{"body":{"nodeType":"YulBlock","src":"9130:124:18","statements":[{"nodeType":"YulAssignment","src":"9140:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9152:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9163:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9148:3:18"},"nodeType":"YulFunctionCall","src":"9148:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9140:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9220:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9233:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"9244:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9229:3:18"},"nodeType":"YulFunctionCall","src":"9229:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"9176:43:18"},"nodeType":"YulFunctionCall","src":"9176:71:18"},"nodeType":"YulExpressionStatement","src":"9176:71:18"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9102:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9114:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9125:4:18","type":""}],"src":"9032:222:18"},{"body":{"nodeType":"YulBlock","src":"9303:79:18","statements":[{"body":{"nodeType":"YulBlock","src":"9360:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9369:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9372:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9362:6:18"},"nodeType":"YulFunctionCall","src":"9362:12:18"},"nodeType":"YulExpressionStatement","src":"9362:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9326:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9351:5:18"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"9333:17:18"},"nodeType":"YulFunctionCall","src":"9333:24:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9323:2:18"},"nodeType":"YulFunctionCall","src":"9323:35:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9316:6:18"},"nodeType":"YulFunctionCall","src":"9316:43:18"},"nodeType":"YulIf","src":"9313:63:18"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9296:5:18","type":""}],"src":"9260:122:18"},{"body":{"nodeType":"YulBlock","src":"9440:87:18","statements":[{"nodeType":"YulAssignment","src":"9450:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9472:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9459:12:18"},"nodeType":"YulFunctionCall","src":"9459:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9450:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9515:5:18"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"9488:26:18"},"nodeType":"YulFunctionCall","src":"9488:33:18"},"nodeType":"YulExpressionStatement","src":"9488:33:18"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9418:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"9426:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"9434:5:18","type":""}],"src":"9388:139:18"},{"body":{"nodeType":"YulBlock","src":"9616:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"9662:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9664:77:18"},"nodeType":"YulFunctionCall","src":"9664:79:18"},"nodeType":"YulExpressionStatement","src":"9664:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9637:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"9646:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9633:3:18"},"nodeType":"YulFunctionCall","src":"9633:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"9658:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9629:3:18"},"nodeType":"YulFunctionCall","src":"9629:32:18"},"nodeType":"YulIf","src":"9626:119:18"},{"nodeType":"YulBlock","src":"9755:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9770:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9784:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9774:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9799:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9834:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9845:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9830:3:18"},"nodeType":"YulFunctionCall","src":"9830:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9854:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9809:20:18"},"nodeType":"YulFunctionCall","src":"9809:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9799:6:18"}]}]},{"nodeType":"YulBlock","src":"9882:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"9897:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"9911:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9901:6:18","type":""}]},{"nodeType":"YulAssignment","src":"9927:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9962:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"9973:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9958:3:18"},"nodeType":"YulFunctionCall","src":"9958:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9982:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9937:20:18"},"nodeType":"YulFunctionCall","src":"9937:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9927:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9578:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9589:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9601:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9609:6:18","type":""}],"src":"9533:474:18"},{"body":{"nodeType":"YulBlock","src":"10056:43:18","statements":[{"nodeType":"YulAssignment","src":"10066:27:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10081:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"10088:4:18","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10077:3:18"},"nodeType":"YulFunctionCall","src":"10077:16:18"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"10066:7:18"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10038:5:18","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"10048:7:18","type":""}],"src":"10013:86:18"},{"body":{"nodeType":"YulBlock","src":"10166:51:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10183:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10204:5:18"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"10188:15:18"},"nodeType":"YulFunctionCall","src":"10188:22:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10176:6:18"},"nodeType":"YulFunctionCall","src":"10176:35:18"},"nodeType":"YulExpressionStatement","src":"10176:35:18"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10154:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10161:3:18","type":""}],"src":"10105:112:18"},{"body":{"nodeType":"YulBlock","src":"10317:120:18","statements":[{"nodeType":"YulAssignment","src":"10327:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10339:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10350:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:18"},"nodeType":"YulFunctionCall","src":"10335:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10327:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10403:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10416:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"10427:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10412:3:18"},"nodeType":"YulFunctionCall","src":"10412:17:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"10363:39:18"},"nodeType":"YulFunctionCall","src":"10363:67:18"},"nodeType":"YulExpressionStatement","src":"10363:67:18"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10289:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10301:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10312:4:18","type":""}],"src":"10223:214:18"},{"body":{"nodeType":"YulBlock","src":"10543:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"10589:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10591:77:18"},"nodeType":"YulFunctionCall","src":"10591:79:18"},"nodeType":"YulExpressionStatement","src":"10591:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10564:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"10573:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10560:3:18"},"nodeType":"YulFunctionCall","src":"10560:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"10585:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10556:3:18"},"nodeType":"YulFunctionCall","src":"10556:32:18"},"nodeType":"YulIf","src":"10553:119:18"},{"nodeType":"YulBlock","src":"10682:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10697:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10711:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10701:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10726:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10761:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10772:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10757:3:18"},"nodeType":"YulFunctionCall","src":"10757:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10781:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10736:20:18"},"nodeType":"YulFunctionCall","src":"10736:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10726:6:18"}]}]},{"nodeType":"YulBlock","src":"10809:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10824:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10838:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10828:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10854:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10889:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"10900:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10885:3:18"},"nodeType":"YulFunctionCall","src":"10885:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10909:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10864:20:18"},"nodeType":"YulFunctionCall","src":"10864:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10854:6:18"}]}]},{"nodeType":"YulBlock","src":"10937:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"10952:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"10966:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10956:6:18","type":""}]},{"nodeType":"YulAssignment","src":"10982:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11017:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11028:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11013:3:18"},"nodeType":"YulFunctionCall","src":"11013:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11037:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"10992:20:18"},"nodeType":"YulFunctionCall","src":"10992:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10982:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10497:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10508:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10520:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10528:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10536:6:18","type":""}],"src":"10443:619:18"},{"body":{"nodeType":"YulBlock","src":"11151:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"11197:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"11199:77:18"},"nodeType":"YulFunctionCall","src":"11199:79:18"},"nodeType":"YulExpressionStatement","src":"11199:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"11172:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"11181:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11168:3:18"},"nodeType":"YulFunctionCall","src":"11168:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"11193:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"11164:3:18"},"nodeType":"YulFunctionCall","src":"11164:32:18"},"nodeType":"YulIf","src":"11161:119:18"},{"nodeType":"YulBlock","src":"11290:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11305:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11319:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11309:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11334:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11369:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11380:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11365:3:18"},"nodeType":"YulFunctionCall","src":"11365:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11389:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"11344:20:18"},"nodeType":"YulFunctionCall","src":"11344:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"11334:6:18"}]}]},{"nodeType":"YulBlock","src":"11417:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"11432:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"11446:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"11436:6:18","type":""}]},{"nodeType":"YulAssignment","src":"11462:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11497:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"11508:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11493:3:18"},"nodeType":"YulFunctionCall","src":"11493:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"11517:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11472:20:18"},"nodeType":"YulFunctionCall","src":"11472:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"11462:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11113:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11124:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11136:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11144:6:18","type":""}],"src":"11068:474:18"},{"body":{"nodeType":"YulBlock","src":"11613:53:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11630:3:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11653:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11635:17:18"},"nodeType":"YulFunctionCall","src":"11635:24:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11623:6:18"},"nodeType":"YulFunctionCall","src":"11623:37:18"},"nodeType":"YulExpressionStatement","src":"11623:37:18"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11601:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11608:3:18","type":""}],"src":"11548:118:18"},{"body":{"nodeType":"YulBlock","src":"11770:124:18","statements":[{"nodeType":"YulAssignment","src":"11780:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11792:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11803:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11788:3:18"},"nodeType":"YulFunctionCall","src":"11788:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11780:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11860:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11873:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"11884:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11869:3:18"},"nodeType":"YulFunctionCall","src":"11869:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"11816:43:18"},"nodeType":"YulFunctionCall","src":"11816:71:18"},"nodeType":"YulExpressionStatement","src":"11816:71:18"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11742:9:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11754:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11765:4:18","type":""}],"src":"11672:222:18"},{"body":{"nodeType":"YulBlock","src":"12000:519:18","statements":[{"body":{"nodeType":"YulBlock","src":"12046:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12048:77:18"},"nodeType":"YulFunctionCall","src":"12048:79:18"},"nodeType":"YulExpressionStatement","src":"12048:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12021:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12030:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12017:3:18"},"nodeType":"YulFunctionCall","src":"12017:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"12042:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12013:3:18"},"nodeType":"YulFunctionCall","src":"12013:32:18"},"nodeType":"YulIf","src":"12010:119:18"},{"nodeType":"YulBlock","src":"12139:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12154:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"12168:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12158:6:18","type":""}]},{"nodeType":"YulAssignment","src":"12183:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12218:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12229:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12214:3:18"},"nodeType":"YulFunctionCall","src":"12214:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12238:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12193:20:18"},"nodeType":"YulFunctionCall","src":"12193:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12183:6:18"}]}]},{"nodeType":"YulBlock","src":"12266:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12281:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"12295:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12285:6:18","type":""}]},{"nodeType":"YulAssignment","src":"12311:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12346:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12357:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12342:3:18"},"nodeType":"YulFunctionCall","src":"12342:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12366:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12321:20:18"},"nodeType":"YulFunctionCall","src":"12321:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12311:6:18"}]}]},{"nodeType":"YulBlock","src":"12394:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12409:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"12423:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12413:6:18","type":""}]},{"nodeType":"YulAssignment","src":"12439:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12474:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12485:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12470:3:18"},"nodeType":"YulFunctionCall","src":"12470:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12494:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"12449:20:18"},"nodeType":"YulFunctionCall","src":"12449:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"12439:6:18"}]}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11954:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"11965:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"11977:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11985:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11993:6:18","type":""}],"src":"11900:619:18"},{"body":{"nodeType":"YulBlock","src":"12591:263:18","statements":[{"body":{"nodeType":"YulBlock","src":"12637:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12639:77:18"},"nodeType":"YulFunctionCall","src":"12639:79:18"},"nodeType":"YulExpressionStatement","src":"12639:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12612:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"12621:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12608:3:18"},"nodeType":"YulFunctionCall","src":"12608:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"12633:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12604:3:18"},"nodeType":"YulFunctionCall","src":"12604:32:18"},"nodeType":"YulIf","src":"12601:119:18"},{"nodeType":"YulBlock","src":"12730:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"12745:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"12759:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12749:6:18","type":""}]},{"nodeType":"YulAssignment","src":"12774:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12809:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"12820:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12805:3:18"},"nodeType":"YulFunctionCall","src":"12805:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12829:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12784:20:18"},"nodeType":"YulFunctionCall","src":"12784:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12774:6:18"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12561:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12572:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12584:6:18","type":""}],"src":"12525:329:18"},{"body":{"nodeType":"YulBlock","src":"12900:76:18","statements":[{"body":{"nodeType":"YulBlock","src":"12954:16:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12963:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12966:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12956:6:18"},"nodeType":"YulFunctionCall","src":"12956:12:18"},"nodeType":"YulExpressionStatement","src":"12956:12:18"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12923:5:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12945:5:18"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"12930:14:18"},"nodeType":"YulFunctionCall","src":"12930:21:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12920:2:18"},"nodeType":"YulFunctionCall","src":"12920:32:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12913:6:18"},"nodeType":"YulFunctionCall","src":"12913:40:18"},"nodeType":"YulIf","src":"12910:60:18"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12893:5:18","type":""}],"src":"12860:116:18"},{"body":{"nodeType":"YulBlock","src":"13031:84:18","statements":[{"nodeType":"YulAssignment","src":"13041:29:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13063:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13050:12:18"},"nodeType":"YulFunctionCall","src":"13050:20:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"13041:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13103:5:18"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"13079:23:18"},"nodeType":"YulFunctionCall","src":"13079:30:18"},"nodeType":"YulExpressionStatement","src":"13079:30:18"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"13009:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"13017:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"13025:5:18","type":""}],"src":"12982:133:18"},{"body":{"nodeType":"YulBlock","src":"13201:388:18","statements":[{"body":{"nodeType":"YulBlock","src":"13247:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"13249:77:18"},"nodeType":"YulFunctionCall","src":"13249:79:18"},"nodeType":"YulExpressionStatement","src":"13249:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13222:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"13231:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13218:3:18"},"nodeType":"YulFunctionCall","src":"13218:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"13243:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13214:3:18"},"nodeType":"YulFunctionCall","src":"13214:32:18"},"nodeType":"YulIf","src":"13211:119:18"},{"nodeType":"YulBlock","src":"13340:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13355:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"13369:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13359:6:18","type":""}]},{"nodeType":"YulAssignment","src":"13384:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13419:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13430:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:18"},"nodeType":"YulFunctionCall","src":"13415:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13439:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"13394:20:18"},"nodeType":"YulFunctionCall","src":"13394:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13384:6:18"}]}]},{"nodeType":"YulBlock","src":"13467:115:18","statements":[{"nodeType":"YulVariableDeclaration","src":"13482:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"13496:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"13486:6:18","type":""}]},{"nodeType":"YulAssignment","src":"13512:60:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13544:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"13555:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13540:3:18"},"nodeType":"YulFunctionCall","src":"13540:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13564:7:18"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"13522:17:18"},"nodeType":"YulFunctionCall","src":"13522:50:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13512:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13163:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13174:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13186:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13194:6:18","type":""}],"src":"13121:468:18"},{"body":{"nodeType":"YulBlock","src":"13684:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13701:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13704:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13694:6:18"},"nodeType":"YulFunctionCall","src":"13694:12:18"},"nodeType":"YulExpressionStatement","src":"13694:12:18"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"13595:117:18"},{"body":{"nodeType":"YulBlock","src":"13807:28:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13824:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13827:1:18","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13817:6:18"},"nodeType":"YulFunctionCall","src":"13817:12:18"},"nodeType":"YulExpressionStatement","src":"13817:12:18"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"13718:117:18"},{"body":{"nodeType":"YulBlock","src":"13869:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13886:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13889:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13879:6:18"},"nodeType":"YulFunctionCall","src":"13879:88:18"},"nodeType":"YulExpressionStatement","src":"13879:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13983:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13986:4:18","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13976:6:18"},"nodeType":"YulFunctionCall","src":"13976:15:18"},"nodeType":"YulExpressionStatement","src":"13976:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14007:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14010:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14000:6:18"},"nodeType":"YulFunctionCall","src":"14000:15:18"},"nodeType":"YulExpressionStatement","src":"14000:15:18"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"13841:180:18"},{"body":{"nodeType":"YulBlock","src":"14070:238:18","statements":[{"nodeType":"YulVariableDeclaration","src":"14080:58:18","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14102:6:18"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14132:4:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14110:21:18"},"nodeType":"YulFunctionCall","src":"14110:27:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14098:3:18"},"nodeType":"YulFunctionCall","src":"14098:40:18"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"14084:10:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"14249:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14251:16:18"},"nodeType":"YulFunctionCall","src":"14251:18:18"},"nodeType":"YulExpressionStatement","src":"14251:18:18"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14192:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"14204:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14189:2:18"},"nodeType":"YulFunctionCall","src":"14189:34:18"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14228:10:18"},{"name":"memPtr","nodeType":"YulIdentifier","src":"14240:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14225:2:18"},"nodeType":"YulFunctionCall","src":"14225:22:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"14186:2:18"},"nodeType":"YulFunctionCall","src":"14186:62:18"},"nodeType":"YulIf","src":"14183:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14287:2:18","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"14291:10:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14280:6:18"},"nodeType":"YulFunctionCall","src":"14280:22:18"},"nodeType":"YulExpressionStatement","src":"14280:22:18"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14056:6:18","type":""},{"name":"size","nodeType":"YulTypedName","src":"14064:4:18","type":""}],"src":"14027:281:18"},{"body":{"nodeType":"YulBlock","src":"14355:88:18","statements":[{"nodeType":"YulAssignment","src":"14365:30:18","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"14375:18:18"},"nodeType":"YulFunctionCall","src":"14375:20:18"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14365:6:18"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14424:6:18"},{"name":"size","nodeType":"YulIdentifier","src":"14432:4:18"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"14404:19:18"},"nodeType":"YulFunctionCall","src":"14404:33:18"},"nodeType":"YulExpressionStatement","src":"14404:33:18"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"14339:4:18","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"14348:6:18","type":""}],"src":"14314:129:18"},{"body":{"nodeType":"YulBlock","src":"14515:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"14620:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"14622:16:18"},"nodeType":"YulFunctionCall","src":"14622:18:18"},"nodeType":"YulExpressionStatement","src":"14622:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14592:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"14600:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"14589:2:18"},"nodeType":"YulFunctionCall","src":"14589:30:18"},"nodeType":"YulIf","src":"14586:56:18"},{"nodeType":"YulAssignment","src":"14652:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14682:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14660:21:18"},"nodeType":"YulFunctionCall","src":"14660:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14652:4:18"}]},{"nodeType":"YulAssignment","src":"14726:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"14738:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"14744:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14734:3:18"},"nodeType":"YulFunctionCall","src":"14734:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"14726:4:18"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"14499:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"14510:4:18","type":""}],"src":"14449:307:18"},{"body":{"nodeType":"YulBlock","src":"14826:82:18","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14849:3:18"},{"name":"src","nodeType":"YulIdentifier","src":"14854:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14859:6:18"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"14836:12:18"},"nodeType":"YulFunctionCall","src":"14836:30:18"},"nodeType":"YulExpressionStatement","src":"14836:30:18"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"14886:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"14891:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14882:3:18"},"nodeType":"YulFunctionCall","src":"14882:16:18"},{"kind":"number","nodeType":"YulLiteral","src":"14900:1:18","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14875:6:18"},"nodeType":"YulFunctionCall","src":"14875:27:18"},"nodeType":"YulExpressionStatement","src":"14875:27:18"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14808:3:18","type":""},{"name":"dst","nodeType":"YulTypedName","src":"14813:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"14818:6:18","type":""}],"src":"14762:146:18"},{"body":{"nodeType":"YulBlock","src":"14997:340:18","statements":[{"nodeType":"YulAssignment","src":"15007:74:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15073:6:18"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15032:40:18"},"nodeType":"YulFunctionCall","src":"15032:48:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"15016:15:18"},"nodeType":"YulFunctionCall","src":"15016:65:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15007:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15097:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"15104:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15090:6:18"},"nodeType":"YulFunctionCall","src":"15090:21:18"},"nodeType":"YulExpressionStatement","src":"15090:21:18"},{"nodeType":"YulVariableDeclaration","src":"15120:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"15135:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"15142:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15131:3:18"},"nodeType":"YulFunctionCall","src":"15131:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"15124:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"15185:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"15187:77:18"},"nodeType":"YulFunctionCall","src":"15187:79:18"},"nodeType":"YulExpressionStatement","src":"15187:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15166:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"15171:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15162:3:18"},"nodeType":"YulFunctionCall","src":"15162:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"15180:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"15159:2:18"},"nodeType":"YulFunctionCall","src":"15159:25:18"},"nodeType":"YulIf","src":"15156:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"15314:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"15319:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"15324:6:18"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15277:36:18"},"nodeType":"YulFunctionCall","src":"15277:54:18"},"nodeType":"YulExpressionStatement","src":"15277:54:18"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"14970:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"14975:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"14983:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"14991:5:18","type":""}],"src":"14914:423:18"},{"body":{"nodeType":"YulBlock","src":"15417:277:18","statements":[{"body":{"nodeType":"YulBlock","src":"15466:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"15468:77:18"},"nodeType":"YulFunctionCall","src":"15468:79:18"},"nodeType":"YulExpressionStatement","src":"15468:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15445:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15453:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15441:3:18"},"nodeType":"YulFunctionCall","src":"15441:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"15460:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15437:3:18"},"nodeType":"YulFunctionCall","src":"15437:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"15430:6:18"},"nodeType":"YulFunctionCall","src":"15430:35:18"},"nodeType":"YulIf","src":"15427:122:18"},{"nodeType":"YulVariableDeclaration","src":"15558:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15585:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"15572:12:18"},"nodeType":"YulFunctionCall","src":"15572:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15562:6:18","type":""}]},{"nodeType":"YulAssignment","src":"15601:87:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15661:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"15669:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15657:3:18"},"nodeType":"YulFunctionCall","src":"15657:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"15676:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"15684:3:18"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"15610:46:18"},"nodeType":"YulFunctionCall","src":"15610:78:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"15601:5:18"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15395:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"15403:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"15411:5:18","type":""}],"src":"15356:338:18"},{"body":{"nodeType":"YulBlock","src":"15826:817:18","statements":[{"body":{"nodeType":"YulBlock","src":"15873:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15875:77:18"},"nodeType":"YulFunctionCall","src":"15875:79:18"},"nodeType":"YulExpressionStatement","src":"15875:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15847:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"15856:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15843:3:18"},"nodeType":"YulFunctionCall","src":"15843:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"15868:3:18","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15839:3:18"},"nodeType":"YulFunctionCall","src":"15839:33:18"},"nodeType":"YulIf","src":"15836:120:18"},{"nodeType":"YulBlock","src":"15966:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"15981:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"15995:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15985:6:18","type":""}]},{"nodeType":"YulAssignment","src":"16010:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16045:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"16056:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16041:3:18"},"nodeType":"YulFunctionCall","src":"16041:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16065:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16020:20:18"},"nodeType":"YulFunctionCall","src":"16020:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"16010:6:18"}]}]},{"nodeType":"YulBlock","src":"16093:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16108:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16122:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16112:6:18","type":""}]},{"nodeType":"YulAssignment","src":"16138:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16173:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"16184:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16169:3:18"},"nodeType":"YulFunctionCall","src":"16169:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16193:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"16148:20:18"},"nodeType":"YulFunctionCall","src":"16148:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"16138:6:18"}]}]},{"nodeType":"YulBlock","src":"16221:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16236:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"16250:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16240:6:18","type":""}]},{"nodeType":"YulAssignment","src":"16266:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16301:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"16312:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16297:3:18"},"nodeType":"YulFunctionCall","src":"16297:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16321:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"16276:20:18"},"nodeType":"YulFunctionCall","src":"16276:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"16266:6:18"}]}]},{"nodeType":"YulBlock","src":"16349:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"16364:46:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16395:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"16406:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16391:3:18"},"nodeType":"YulFunctionCall","src":"16391:18:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"16378:12:18"},"nodeType":"YulFunctionCall","src":"16378:32:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"16368:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"16457:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"16459:77:18"},"nodeType":"YulFunctionCall","src":"16459:79:18"},"nodeType":"YulExpressionStatement","src":"16459:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"16429:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16437:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16426:2:18"},"nodeType":"YulFunctionCall","src":"16426:30:18"},"nodeType":"YulIf","src":"16423:117:18"},{"nodeType":"YulAssignment","src":"16554:72:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16598:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"16609:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16594:3:18"},"nodeType":"YulFunctionCall","src":"16594:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"16618:7:18"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"16564:29:18"},"nodeType":"YulFunctionCall","src":"16564:62:18"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"16554:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15772:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15783:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15795:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15803:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15811:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15819:6:18","type":""}],"src":"15700:943:18"},{"body":{"nodeType":"YulBlock","src":"16716:241:18","statements":[{"body":{"nodeType":"YulBlock","src":"16821:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16823:16:18"},"nodeType":"YulFunctionCall","src":"16823:18:18"},"nodeType":"YulExpressionStatement","src":"16823:18:18"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16793:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"16801:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16790:2:18"},"nodeType":"YulFunctionCall","src":"16790:30:18"},"nodeType":"YulIf","src":"16787:56:18"},{"nodeType":"YulAssignment","src":"16853:37:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16883:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16861:21:18"},"nodeType":"YulFunctionCall","src":"16861:29:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16853:4:18"}]},{"nodeType":"YulAssignment","src":"16927:23:18","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16939:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"16945:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16935:3:18"},"nodeType":"YulFunctionCall","src":"16935:15:18"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"16927:4:18"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"16700:6:18","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"16711:4:18","type":""}],"src":"16649:308:18"},{"body":{"nodeType":"YulBlock","src":"17047:341:18","statements":[{"nodeType":"YulAssignment","src":"17057:75:18","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17124:6:18"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17082:41:18"},"nodeType":"YulFunctionCall","src":"17082:49:18"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17066:15:18"},"nodeType":"YulFunctionCall","src":"17066:66:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17057:5:18"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17148:5:18"},{"name":"length","nodeType":"YulIdentifier","src":"17155:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17141:6:18"},"nodeType":"YulFunctionCall","src":"17141:21:18"},"nodeType":"YulExpressionStatement","src":"17141:21:18"},{"nodeType":"YulVariableDeclaration","src":"17171:27:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17186:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"17193:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17182:3:18"},"nodeType":"YulFunctionCall","src":"17182:16:18"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"17175:3:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"17236:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"17238:77:18"},"nodeType":"YulFunctionCall","src":"17238:79:18"},"nodeType":"YulExpressionStatement","src":"17238:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17217:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17222:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17213:3:18"},"nodeType":"YulFunctionCall","src":"17213:16:18"},{"name":"end","nodeType":"YulIdentifier","src":"17231:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17210:2:18"},"nodeType":"YulFunctionCall","src":"17210:25:18"},"nodeType":"YulIf","src":"17207:112:18"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"17365:3:18"},{"name":"dst","nodeType":"YulIdentifier","src":"17370:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"17375:6:18"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"17328:36:18"},"nodeType":"YulFunctionCall","src":"17328:54:18"},"nodeType":"YulExpressionStatement","src":"17328:54:18"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17020:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"17025:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"17033:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17041:5:18","type":""}],"src":"16963:425:18"},{"body":{"nodeType":"YulBlock","src":"17470:278:18","statements":[{"body":{"nodeType":"YulBlock","src":"17519:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"17521:77:18"},"nodeType":"YulFunctionCall","src":"17521:79:18"},"nodeType":"YulExpressionStatement","src":"17521:79:18"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17498:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17506:4:18","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17494:3:18"},"nodeType":"YulFunctionCall","src":"17494:17:18"},{"name":"end","nodeType":"YulIdentifier","src":"17513:3:18"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17490:3:18"},"nodeType":"YulFunctionCall","src":"17490:27:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17483:6:18"},"nodeType":"YulFunctionCall","src":"17483:35:18"},"nodeType":"YulIf","src":"17480:122:18"},{"nodeType":"YulVariableDeclaration","src":"17611:34:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17638:6:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17625:12:18"},"nodeType":"YulFunctionCall","src":"17625:20:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"17615:6:18","type":""}]},{"nodeType":"YulAssignment","src":"17654:88:18","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17715:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"17723:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17711:3:18"},"nodeType":"YulFunctionCall","src":"17711:17:18"},{"name":"length","nodeType":"YulIdentifier","src":"17730:6:18"},{"name":"end","nodeType":"YulIdentifier","src":"17738:3:18"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17663:47:18"},"nodeType":"YulFunctionCall","src":"17663:79:18"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17654:5:18"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"17448:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"17456:3:18","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17464:5:18","type":""}],"src":"17408:340:18"},{"body":{"nodeType":"YulBlock","src":"17864:689:18","statements":[{"body":{"nodeType":"YulBlock","src":"17910:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17912:77:18"},"nodeType":"YulFunctionCall","src":"17912:79:18"},"nodeType":"YulExpressionStatement","src":"17912:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17885:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"17894:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17881:3:18"},"nodeType":"YulFunctionCall","src":"17881:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"17906:2:18","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17877:3:18"},"nodeType":"YulFunctionCall","src":"17877:32:18"},"nodeType":"YulIf","src":"17874:119:18"},{"nodeType":"YulBlock","src":"18003:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18018:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18049:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18060:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18045:3:18"},"nodeType":"YulFunctionCall","src":"18045:17:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18032:12:18"},"nodeType":"YulFunctionCall","src":"18032:31:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18022:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"18110:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18112:77:18"},"nodeType":"YulFunctionCall","src":"18112:79:18"},"nodeType":"YulExpressionStatement","src":"18112:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18082:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18090:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18079:2:18"},"nodeType":"YulFunctionCall","src":"18079:30:18"},"nodeType":"YulIf","src":"18076:117:18"},{"nodeType":"YulAssignment","src":"18207:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18252:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"18263:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18248:3:18"},"nodeType":"YulFunctionCall","src":"18248:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18272:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18217:30:18"},"nodeType":"YulFunctionCall","src":"18217:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18207:6:18"}]}]},{"nodeType":"YulBlock","src":"18300:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18315:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18329:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18319:6:18","type":""}]},{"nodeType":"YulAssignment","src":"18345:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18380:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"18391:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18376:3:18"},"nodeType":"YulFunctionCall","src":"18376:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18400:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18355:20:18"},"nodeType":"YulFunctionCall","src":"18355:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18345:6:18"}]}]},{"nodeType":"YulBlock","src":"18428:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18443:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"18457:2:18","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18447:6:18","type":""}]},{"nodeType":"YulAssignment","src":"18473:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18508:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"18519:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18504:3:18"},"nodeType":"YulFunctionCall","src":"18504:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18528:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"18483:20:18"},"nodeType":"YulFunctionCall","src":"18483:53:18"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"18473:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17818:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17829:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17841:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17849:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17857:6:18","type":""}],"src":"17754:799:18"},{"body":{"nodeType":"YulBlock","src":"18652:561:18","statements":[{"body":{"nodeType":"YulBlock","src":"18698:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18700:77:18"},"nodeType":"YulFunctionCall","src":"18700:79:18"},"nodeType":"YulExpressionStatement","src":"18700:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18673:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"18682:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18669:3:18"},"nodeType":"YulFunctionCall","src":"18669:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"18694:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18665:3:18"},"nodeType":"YulFunctionCall","src":"18665:32:18"},"nodeType":"YulIf","src":"18662:119:18"},{"nodeType":"YulBlock","src":"18791:287:18","statements":[{"nodeType":"YulVariableDeclaration","src":"18806:45:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18837:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"18848:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18833:3:18"},"nodeType":"YulFunctionCall","src":"18833:17:18"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18820:12:18"},"nodeType":"YulFunctionCall","src":"18820:31:18"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18810:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"18898:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"18900:77:18"},"nodeType":"YulFunctionCall","src":"18900:79:18"},"nodeType":"YulExpressionStatement","src":"18900:79:18"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18870:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"18878:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18867:2:18"},"nodeType":"YulFunctionCall","src":"18867:30:18"},"nodeType":"YulIf","src":"18864:117:18"},{"nodeType":"YulAssignment","src":"18995:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19040:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"19051:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19036:3:18"},"nodeType":"YulFunctionCall","src":"19036:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19060:7:18"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19005:30:18"},"nodeType":"YulFunctionCall","src":"19005:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18995:6:18"}]}]},{"nodeType":"YulBlock","src":"19088:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"19103:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"19117:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19107:6:18","type":""}]},{"nodeType":"YulAssignment","src":"19133:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19168:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"19179:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19164:3:18"},"nodeType":"YulFunctionCall","src":"19164:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19188:7:18"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19143:20:18"},"nodeType":"YulFunctionCall","src":"19143:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19133:6:18"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18614:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18625:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18637:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18645:6:18","type":""}],"src":"18559:654:18"},{"body":{"nodeType":"YulBlock","src":"19509:699:18","statements":[{"nodeType":"YulAssignment","src":"19519:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19531:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19542:3:18","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19527:3:18"},"nodeType":"YulFunctionCall","src":"19527:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19519:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19600:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19613:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19624:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19609:3:18"},"nodeType":"YulFunctionCall","src":"19609:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19556:43:18"},"nodeType":"YulFunctionCall","src":"19556:71:18"},"nodeType":"YulExpressionStatement","src":"19556:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19681:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19694:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19705:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19690:3:18"},"nodeType":"YulFunctionCall","src":"19690:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19637:43:18"},"nodeType":"YulFunctionCall","src":"19637:72:18"},"nodeType":"YulExpressionStatement","src":"19637:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"19763:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19776:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19787:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19772:3:18"},"nodeType":"YulFunctionCall","src":"19772:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19719:43:18"},"nodeType":"YulFunctionCall","src":"19719:72:18"},"nodeType":"YulExpressionStatement","src":"19719:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19845:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19858:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19869:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19854:3:18"},"nodeType":"YulFunctionCall","src":"19854:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19801:43:18"},"nodeType":"YulFunctionCall","src":"19801:72:18"},"nodeType":"YulExpressionStatement","src":"19801:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"19927:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19940:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"19951:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19936:3:18"},"nodeType":"YulFunctionCall","src":"19936:19:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19883:43:18"},"nodeType":"YulFunctionCall","src":"19883:73:18"},"nodeType":"YulExpressionStatement","src":"19883:73:18"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"20010:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20023:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20034:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20019:3:18"},"nodeType":"YulFunctionCall","src":"20019:19:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19966:43:18"},"nodeType":"YulFunctionCall","src":"19966:73:18"},"nodeType":"YulExpressionStatement","src":"19966:73:18"},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"20093:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20106:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20117:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20102:3:18"},"nodeType":"YulFunctionCall","src":"20102:19:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20049:43:18"},"nodeType":"YulFunctionCall","src":"20049:73:18"},"nodeType":"YulExpressionStatement","src":"20049:73:18"},{"expression":{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"20172:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20185:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"20196:3:18","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20181:3:18"},"nodeType":"YulFunctionCall","src":"20181:19:18"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"20132:39:18"},"nodeType":"YulFunctionCall","src":"20132:69:18"},"nodeType":"YulExpressionStatement","src":"20132:69:18"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19425:9:18","type":""},{"name":"value7","nodeType":"YulTypedName","src":"19437:6:18","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19445:6:18","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19453:6:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19461:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19469:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19477:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19485:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19493:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19504:4:18","type":""}],"src":"19219:989:18"},{"body":{"nodeType":"YulBlock","src":"20297:391:18","statements":[{"body":{"nodeType":"YulBlock","src":"20343:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20345:77:18"},"nodeType":"YulFunctionCall","src":"20345:79:18"},"nodeType":"YulExpressionStatement","src":"20345:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20318:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"20327:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20314:3:18"},"nodeType":"YulFunctionCall","src":"20314:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"20339:2:18","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20310:3:18"},"nodeType":"YulFunctionCall","src":"20310:32:18"},"nodeType":"YulIf","src":"20307:119:18"},{"nodeType":"YulBlock","src":"20436:117:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20451:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"20465:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20455:6:18","type":""}]},{"nodeType":"YulAssignment","src":"20480:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20515:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"20526:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20511:3:18"},"nodeType":"YulFunctionCall","src":"20511:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20535:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20490:20:18"},"nodeType":"YulFunctionCall","src":"20490:53:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20480:6:18"}]}]},{"nodeType":"YulBlock","src":"20563:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"20578:16:18","value":{"kind":"number","nodeType":"YulLiteral","src":"20592:2:18","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20582:6:18","type":""}]},{"nodeType":"YulAssignment","src":"20608:63:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20643:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"20654:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20639:3:18"},"nodeType":"YulFunctionCall","src":"20639:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20663:7:18"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20618:20:18"},"nodeType":"YulFunctionCall","src":"20618:53:18"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20608:6:18"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20259:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20270:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20282:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20290:6:18","type":""}],"src":"20214:474:18"},{"body":{"nodeType":"YulBlock","src":"20722:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20739:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20742:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20732:6:18"},"nodeType":"YulFunctionCall","src":"20732:88:18"},"nodeType":"YulExpressionStatement","src":"20732:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20836:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"20839:4:18","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20829:6:18"},"nodeType":"YulFunctionCall","src":"20829:15:18"},"nodeType":"YulExpressionStatement","src":"20829:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20860:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20863:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20853:6:18"},"nodeType":"YulFunctionCall","src":"20853:15:18"},"nodeType":"YulExpressionStatement","src":"20853:15:18"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"20694:180:18"},{"body":{"nodeType":"YulBlock","src":"20923:190:18","statements":[{"nodeType":"YulAssignment","src":"20933:33:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20960:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"20942:17:18"},"nodeType":"YulFunctionCall","src":"20942:24:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20933:5:18"}]},{"body":{"nodeType":"YulBlock","src":"21056:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"21058:16:18"},"nodeType":"YulFunctionCall","src":"21058:18:18"},"nodeType":"YulExpressionStatement","src":"21058:18:18"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20981:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"20988:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20978:2:18"},"nodeType":"YulFunctionCall","src":"20978:77:18"},"nodeType":"YulIf","src":"20975:103:18"},{"nodeType":"YulAssignment","src":"21087:20:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21098:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"21105:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21094:3:18"},"nodeType":"YulFunctionCall","src":"21094:13:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"21087:3:18"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20909:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"20919:3:18","type":""}],"src":"20880:233:18"},{"body":{"nodeType":"YulBlock","src":"21147:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21164:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21167:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21157:6:18"},"nodeType":"YulFunctionCall","src":"21157:88:18"},"nodeType":"YulExpressionStatement","src":"21157:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21261:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21264:4:18","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21254:6:18"},"nodeType":"YulFunctionCall","src":"21254:15:18"},"nodeType":"YulExpressionStatement","src":"21254:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21285:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21288:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21278:6:18"},"nodeType":"YulFunctionCall","src":"21278:15:18"},"nodeType":"YulExpressionStatement","src":"21278:15:18"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"21119:180:18"},{"body":{"nodeType":"YulBlock","src":"21333:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21350:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21353:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21343:6:18"},"nodeType":"YulFunctionCall","src":"21343:88:18"},"nodeType":"YulExpressionStatement","src":"21343:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21447:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"21450:4:18","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21440:6:18"},"nodeType":"YulFunctionCall","src":"21440:15:18"},"nodeType":"YulExpressionStatement","src":"21440:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21471:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"21474:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"21464:6:18"},"nodeType":"YulFunctionCall","src":"21464:15:18"},"nodeType":"YulExpressionStatement","src":"21464:15:18"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"21305:180:18"},{"body":{"nodeType":"YulBlock","src":"21542:269:18","statements":[{"nodeType":"YulAssignment","src":"21552:22:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21566:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"21572:1:18","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"21562:3:18"},"nodeType":"YulFunctionCall","src":"21562:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21552:6:18"}]},{"nodeType":"YulVariableDeclaration","src":"21583:38:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"21613:4:18"},{"kind":"number","nodeType":"YulLiteral","src":"21619:1:18","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21609:3:18"},"nodeType":"YulFunctionCall","src":"21609:12:18"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"21587:18:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"21660:51:18","statements":[{"nodeType":"YulAssignment","src":"21674:27:18","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21688:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21696:4:18","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"21684:3:18"},"nodeType":"YulFunctionCall","src":"21684:17:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21674:6:18"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21640:18:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21633:6:18"},"nodeType":"YulFunctionCall","src":"21633:26:18"},"nodeType":"YulIf","src":"21630:81:18"},{"body":{"nodeType":"YulBlock","src":"21763:42:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"21777:16:18"},"nodeType":"YulFunctionCall","src":"21777:18:18"},"nodeType":"YulExpressionStatement","src":"21777:18:18"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"21727:18:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"21750:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21758:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"21747:2:18"},"nodeType":"YulFunctionCall","src":"21747:14:18"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"21724:2:18"},"nodeType":"YulFunctionCall","src":"21724:38:18"},"nodeType":"YulIf","src":"21721:84:18"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"21526:4:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21535:6:18","type":""}],"src":"21491:320:18"},{"body":{"nodeType":"YulBlock","src":"21923:114:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"21945:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"21953:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21941:3:18"},"nodeType":"YulFunctionCall","src":"21941:14:18"},{"hexValue":"4552433732313a20617070726f76616c20746f2063757272656e74206f776e65","kind":"string","nodeType":"YulLiteral","src":"21957:34:18","type":"","value":"ERC721: approval to current owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21934:6:18"},"nodeType":"YulFunctionCall","src":"21934:58:18"},"nodeType":"YulExpressionStatement","src":"21934:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22013:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22021:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22009:3:18"},"nodeType":"YulFunctionCall","src":"22009:15:18"},{"hexValue":"72","kind":"string","nodeType":"YulLiteral","src":"22026:3:18","type":"","value":"r"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22002:6:18"},"nodeType":"YulFunctionCall","src":"22002:28:18"},"nodeType":"YulExpressionStatement","src":"22002:28:18"}]},"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"21915:6:18","type":""}],"src":"21817:220:18"},{"body":{"nodeType":"YulBlock","src":"22189:220:18","statements":[{"nodeType":"YulAssignment","src":"22199:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22265:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22270:2:18","type":"","value":"33"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22206:58:18"},"nodeType":"YulFunctionCall","src":"22206:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22199:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22371:3:18"}],"functionName":{"name":"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942","nodeType":"YulIdentifier","src":"22282:88:18"},"nodeType":"YulFunctionCall","src":"22282:93:18"},"nodeType":"YulExpressionStatement","src":"22282:93:18"},{"nodeType":"YulAssignment","src":"22384:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22395:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"22400:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22391:3:18"},"nodeType":"YulFunctionCall","src":"22391:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22384:3:18"}]}]},"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"22177:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22185:3:18","type":""}],"src":"22043:366:18"},{"body":{"nodeType":"YulBlock","src":"22586:248:18","statements":[{"nodeType":"YulAssignment","src":"22596:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22608:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22619:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22604:3:18"},"nodeType":"YulFunctionCall","src":"22604:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22596:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22643:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"22654:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22639:3:18"},"nodeType":"YulFunctionCall","src":"22639:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22662:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"22668:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22658:3:18"},"nodeType":"YulFunctionCall","src":"22658:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22632:6:18"},"nodeType":"YulFunctionCall","src":"22632:47:18"},"nodeType":"YulExpressionStatement","src":"22632:47:18"},{"nodeType":"YulAssignment","src":"22688:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"22822:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22696:124:18"},"nodeType":"YulFunctionCall","src":"22696:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22688:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22566:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22581:4:18","type":""}],"src":"22415:419:18"},{"body":{"nodeType":"YulBlock","src":"22946:142:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"22968:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"22976:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22964:3:18"},"nodeType":"YulFunctionCall","src":"22964:14:18"},{"hexValue":"4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f","kind":"string","nodeType":"YulLiteral","src":"22980:34:18","type":"","value":"ERC721: approve caller is not to"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22957:6:18"},"nodeType":"YulFunctionCall","src":"22957:58:18"},"nodeType":"YulExpressionStatement","src":"22957:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23036:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"23044:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23032:3:18"},"nodeType":"YulFunctionCall","src":"23032:15:18"},{"hexValue":"6b656e206f776e6572206f7220617070726f76656420666f7220616c6c","kind":"string","nodeType":"YulLiteral","src":"23049:31:18","type":"","value":"ken owner or approved for all"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23025:6:18"},"nodeType":"YulFunctionCall","src":"23025:56:18"},"nodeType":"YulExpressionStatement","src":"23025:56:18"}]},"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"22938:6:18","type":""}],"src":"22840:248:18"},{"body":{"nodeType":"YulBlock","src":"23240:220:18","statements":[{"nodeType":"YulAssignment","src":"23250:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23316:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23321:2:18","type":"","value":"61"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23257:58:18"},"nodeType":"YulFunctionCall","src":"23257:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23250:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23422:3:18"}],"functionName":{"name":"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83","nodeType":"YulIdentifier","src":"23333:88:18"},"nodeType":"YulFunctionCall","src":"23333:93:18"},"nodeType":"YulExpressionStatement","src":"23333:93:18"},{"nodeType":"YulAssignment","src":"23435:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23446:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"23451:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23442:3:18"},"nodeType":"YulFunctionCall","src":"23442:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23435:3:18"}]}]},"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23228:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23236:3:18","type":""}],"src":"23094:366:18"},{"body":{"nodeType":"YulBlock","src":"23637:248:18","statements":[{"nodeType":"YulAssignment","src":"23647:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23659:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23670:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23655:3:18"},"nodeType":"YulFunctionCall","src":"23655:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23647:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23694:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"23705:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23690:3:18"},"nodeType":"YulFunctionCall","src":"23690:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23713:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"23719:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23709:3:18"},"nodeType":"YulFunctionCall","src":"23709:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23683:6:18"},"nodeType":"YulFunctionCall","src":"23683:47:18"},"nodeType":"YulExpressionStatement","src":"23683:47:18"},{"nodeType":"YulAssignment","src":"23739:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23873:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23747:124:18"},"nodeType":"YulFunctionCall","src":"23747:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23739:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23617:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23632:4:18","type":""}],"src":"23466:419:18"},{"body":{"nodeType":"YulBlock","src":"23997:65:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24019:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"24027:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24015:3:18"},"nodeType":"YulFunctionCall","src":"24015:14:18"},{"hexValue":"61756374696f6e206973207374696c6c206f70656e","kind":"string","nodeType":"YulLiteral","src":"24031:23:18","type":"","value":"auction is still open"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24008:6:18"},"nodeType":"YulFunctionCall","src":"24008:47:18"},"nodeType":"YulExpressionStatement","src":"24008:47:18"}]},"name":"store_literal_in_memory_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23989:6:18","type":""}],"src":"23891:171:18"},{"body":{"nodeType":"YulBlock","src":"24214:220:18","statements":[{"nodeType":"YulAssignment","src":"24224:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24290:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24295:2:18","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24231:58:18"},"nodeType":"YulFunctionCall","src":"24231:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24224:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24396:3:18"}],"functionName":{"name":"store_literal_in_memory_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353","nodeType":"YulIdentifier","src":"24307:88:18"},"nodeType":"YulFunctionCall","src":"24307:93:18"},"nodeType":"YulExpressionStatement","src":"24307:93:18"},{"nodeType":"YulAssignment","src":"24409:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24420:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"24425:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24416:3:18"},"nodeType":"YulFunctionCall","src":"24416:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24409:3:18"}]}]},"name":"abi_encode_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"24202:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24210:3:18","type":""}],"src":"24068:366:18"},{"body":{"nodeType":"YulBlock","src":"24611:248:18","statements":[{"nodeType":"YulAssignment","src":"24621:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24633:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24644:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24629:3:18"},"nodeType":"YulFunctionCall","src":"24629:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24621:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24668:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"24679:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24664:3:18"},"nodeType":"YulFunctionCall","src":"24664:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24687:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"24693:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24683:3:18"},"nodeType":"YulFunctionCall","src":"24683:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24657:6:18"},"nodeType":"YulFunctionCall","src":"24657:47:18"},"nodeType":"YulExpressionStatement","src":"24657:47:18"},{"nodeType":"YulAssignment","src":"24713:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24847:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24721:124:18"},"nodeType":"YulFunctionCall","src":"24721:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24713:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24591:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24606:4:18","type":""}],"src":"24440:419:18"},{"body":{"nodeType":"YulBlock","src":"24971:123:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"24993:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25001:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24989:3:18"},"nodeType":"YulFunctionCall","src":"24989:14:18"},{"hexValue":"6f6e6c792073656c6c6572206f722077696e6e65722063616e20636f6d706c65","kind":"string","nodeType":"YulLiteral","src":"25005:34:18","type":"","value":"only seller or winner can comple"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24982:6:18"},"nodeType":"YulFunctionCall","src":"24982:58:18"},"nodeType":"YulExpressionStatement","src":"24982:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25061:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"25069:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25057:3:18"},"nodeType":"YulFunctionCall","src":"25057:15:18"},{"hexValue":"74652061756374696f6e","kind":"string","nodeType":"YulLiteral","src":"25074:12:18","type":"","value":"te auction"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25050:6:18"},"nodeType":"YulFunctionCall","src":"25050:37:18"},"nodeType":"YulExpressionStatement","src":"25050:37:18"}]},"name":"store_literal_in_memory_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"24963:6:18","type":""}],"src":"24865:229:18"},{"body":{"nodeType":"YulBlock","src":"25246:220:18","statements":[{"nodeType":"YulAssignment","src":"25256:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25322:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25327:2:18","type":"","value":"42"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25263:58:18"},"nodeType":"YulFunctionCall","src":"25263:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25256:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25428:3:18"}],"functionName":{"name":"store_literal_in_memory_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a","nodeType":"YulIdentifier","src":"25339:88:18"},"nodeType":"YulFunctionCall","src":"25339:93:18"},"nodeType":"YulExpressionStatement","src":"25339:93:18"},{"nodeType":"YulAssignment","src":"25441:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25452:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"25457:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25448:3:18"},"nodeType":"YulFunctionCall","src":"25448:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25441:3:18"}]}]},"name":"abi_encode_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25234:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25242:3:18","type":""}],"src":"25100:366:18"},{"body":{"nodeType":"YulBlock","src":"25643:248:18","statements":[{"nodeType":"YulAssignment","src":"25653:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25665:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25676:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25661:3:18"},"nodeType":"YulFunctionCall","src":"25661:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25653:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25700:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"25711:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25696:3:18"},"nodeType":"YulFunctionCall","src":"25696:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25719:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"25725:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25715:3:18"},"nodeType":"YulFunctionCall","src":"25715:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25689:6:18"},"nodeType":"YulFunctionCall","src":"25689:47:18"},"nodeType":"YulExpressionStatement","src":"25689:47:18"},{"nodeType":"YulAssignment","src":"25745:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"25879:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25753:124:18"},"nodeType":"YulFunctionCall","src":"25753:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25745:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25623:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25638:4:18","type":""}],"src":"25472:419:18"},{"body":{"nodeType":"YulBlock","src":"26003:74:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26025:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"26033:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26021:3:18"},"nodeType":"YulFunctionCall","src":"26021:14:18"},{"hexValue":"41756374696f6e20636f6d706c65746564207375636365737366756c6c79","kind":"string","nodeType":"YulLiteral","src":"26037:32:18","type":"","value":"Auction completed successfully"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26014:6:18"},"nodeType":"YulFunctionCall","src":"26014:56:18"},"nodeType":"YulExpressionStatement","src":"26014:56:18"}]},"name":"store_literal_in_memory_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25995:6:18","type":""}],"src":"25897:180:18"},{"body":{"nodeType":"YulBlock","src":"26229:220:18","statements":[{"nodeType":"YulAssignment","src":"26239:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26305:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"26310:2:18","type":"","value":"30"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26246:58:18"},"nodeType":"YulFunctionCall","src":"26246:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26239:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26411:3:18"}],"functionName":{"name":"store_literal_in_memory_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f","nodeType":"YulIdentifier","src":"26322:88:18"},"nodeType":"YulFunctionCall","src":"26322:93:18"},"nodeType":"YulExpressionStatement","src":"26322:93:18"},{"nodeType":"YulAssignment","src":"26424:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26435:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"26440:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26431:3:18"},"nodeType":"YulFunctionCall","src":"26431:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26424:3:18"}]}]},"name":"abi_encode_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26217:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26225:3:18","type":""}],"src":"26083:366:18"},{"body":{"nodeType":"YulBlock","src":"26682:412:18","statements":[{"nodeType":"YulAssignment","src":"26692:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26704:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26715:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26700:3:18"},"nodeType":"YulFunctionCall","src":"26700:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26692:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26772:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26785:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26796:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26781:3:18"},"nodeType":"YulFunctionCall","src":"26781:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26728:43:18"},"nodeType":"YulFunctionCall","src":"26728:71:18"},"nodeType":"YulExpressionStatement","src":"26728:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26853:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26866:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26877:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26862:3:18"},"nodeType":"YulFunctionCall","src":"26862:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"26809:43:18"},"nodeType":"YulFunctionCall","src":"26809:72:18"},"nodeType":"YulExpressionStatement","src":"26809:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26902:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"26913:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26898:3:18"},"nodeType":"YulFunctionCall","src":"26898:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26922:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"26928:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26918:3:18"},"nodeType":"YulFunctionCall","src":"26918:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26891:6:18"},"nodeType":"YulFunctionCall","src":"26891:48:18"},"nodeType":"YulExpressionStatement","src":"26891:48:18"},{"nodeType":"YulAssignment","src":"26948:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27082:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26956:124:18"},"nodeType":"YulFunctionCall","src":"26956:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26948:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26646:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"26658:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"26666:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26677:4:18","type":""}],"src":"26455:639:18"},{"body":{"nodeType":"YulBlock","src":"27206:126:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27228:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"27236:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27224:3:18"},"nodeType":"YulFunctionCall","src":"27224:14:18"},{"hexValue":"4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65","kind":"string","nodeType":"YulLiteral","src":"27240:34:18","type":"","value":"ERC721: caller is not token owne"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27217:6:18"},"nodeType":"YulFunctionCall","src":"27217:58:18"},"nodeType":"YulExpressionStatement","src":"27217:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"27296:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"27304:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27292:3:18"},"nodeType":"YulFunctionCall","src":"27292:15:18"},{"hexValue":"72206f7220617070726f766564","kind":"string","nodeType":"YulLiteral","src":"27309:15:18","type":"","value":"r or approved"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27285:6:18"},"nodeType":"YulFunctionCall","src":"27285:40:18"},"nodeType":"YulExpressionStatement","src":"27285:40:18"}]},"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"27198:6:18","type":""}],"src":"27100:232:18"},{"body":{"nodeType":"YulBlock","src":"27484:220:18","statements":[{"nodeType":"YulAssignment","src":"27494:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27560:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"27565:2:18","type":"","value":"45"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27501:58:18"},"nodeType":"YulFunctionCall","src":"27501:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27494:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27666:3:18"}],"functionName":{"name":"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af","nodeType":"YulIdentifier","src":"27577:88:18"},"nodeType":"YulFunctionCall","src":"27577:93:18"},"nodeType":"YulExpressionStatement","src":"27577:93:18"},{"nodeType":"YulAssignment","src":"27679:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27690:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"27695:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27686:3:18"},"nodeType":"YulFunctionCall","src":"27686:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27679:3:18"}]}]},"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27472:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27480:3:18","type":""}],"src":"27338:366:18"},{"body":{"nodeType":"YulBlock","src":"27881:248:18","statements":[{"nodeType":"YulAssignment","src":"27891:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27903:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27914:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27899:3:18"},"nodeType":"YulFunctionCall","src":"27899:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27891:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27938:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"27949:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27934:3:18"},"nodeType":"YulFunctionCall","src":"27934:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27957:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"27963:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27953:3:18"},"nodeType":"YulFunctionCall","src":"27953:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27927:6:18"},"nodeType":"YulFunctionCall","src":"27927:47:18"},"nodeType":"YulExpressionStatement","src":"27927:47:18"},{"nodeType":"YulAssignment","src":"27983:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28117:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27991:124:18"},"nodeType":"YulFunctionCall","src":"27991:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27983:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"27861:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"27876:4:18","type":""}],"src":"27710:419:18"},{"body":{"nodeType":"YulBlock","src":"28241:61:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28263:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"28271:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28259:3:18"},"nodeType":"YulFunctionCall","src":"28259:14:18"},{"hexValue":"61756374696f6e2068617320656e646564","kind":"string","nodeType":"YulLiteral","src":"28275:19:18","type":"","value":"auction has ended"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28252:6:18"},"nodeType":"YulFunctionCall","src":"28252:43:18"},"nodeType":"YulExpressionStatement","src":"28252:43:18"}]},"name":"store_literal_in_memory_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28233:6:18","type":""}],"src":"28135:167:18"},{"body":{"nodeType":"YulBlock","src":"28454:220:18","statements":[{"nodeType":"YulAssignment","src":"28464:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28530:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28535:2:18","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28471:58:18"},"nodeType":"YulFunctionCall","src":"28471:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28464:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28636:3:18"}],"functionName":{"name":"store_literal_in_memory_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef","nodeType":"YulIdentifier","src":"28547:88:18"},"nodeType":"YulFunctionCall","src":"28547:93:18"},"nodeType":"YulExpressionStatement","src":"28547:93:18"},{"nodeType":"YulAssignment","src":"28649:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28660:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"28665:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28656:3:18"},"nodeType":"YulFunctionCall","src":"28656:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28649:3:18"}]}]},"name":"abi_encode_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28442:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28450:3:18","type":""}],"src":"28308:366:18"},{"body":{"nodeType":"YulBlock","src":"28851:248:18","statements":[{"nodeType":"YulAssignment","src":"28861:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28873:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28884:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28869:3:18"},"nodeType":"YulFunctionCall","src":"28869:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28861:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28908:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"28919:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28904:3:18"},"nodeType":"YulFunctionCall","src":"28904:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28927:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"28933:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28923:3:18"},"nodeType":"YulFunctionCall","src":"28923:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28897:6:18"},"nodeType":"YulFunctionCall","src":"28897:47:18"},"nodeType":"YulExpressionStatement","src":"28897:47:18"},{"nodeType":"YulAssignment","src":"28953:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29087:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28961:124:18"},"nodeType":"YulFunctionCall","src":"28961:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28953:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28831:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28846:4:18","type":""}],"src":"28680:419:18"},{"body":{"nodeType":"YulBlock","src":"29211:70:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29233:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"29241:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29229:3:18"},"nodeType":"YulFunctionCall","src":"29229:14:18"},{"hexValue":"63616e6e6f7420626964206f6e207768617420796f75206f776e","kind":"string","nodeType":"YulLiteral","src":"29245:28:18","type":"","value":"cannot bid on what you own"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29222:6:18"},"nodeType":"YulFunctionCall","src":"29222:52:18"},"nodeType":"YulExpressionStatement","src":"29222:52:18"}]},"name":"store_literal_in_memory_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29203:6:18","type":""}],"src":"29105:176:18"},{"body":{"nodeType":"YulBlock","src":"29433:220:18","statements":[{"nodeType":"YulAssignment","src":"29443:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29509:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29514:2:18","type":"","value":"26"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29450:58:18"},"nodeType":"YulFunctionCall","src":"29450:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29443:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29615:3:18"}],"functionName":{"name":"store_literal_in_memory_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e","nodeType":"YulIdentifier","src":"29526:88:18"},"nodeType":"YulFunctionCall","src":"29526:93:18"},"nodeType":"YulExpressionStatement","src":"29526:93:18"},{"nodeType":"YulAssignment","src":"29628:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29639:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"29644:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29635:3:18"},"nodeType":"YulFunctionCall","src":"29635:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29628:3:18"}]}]},"name":"abi_encode_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29421:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29429:3:18","type":""}],"src":"29287:366:18"},{"body":{"nodeType":"YulBlock","src":"29830:248:18","statements":[{"nodeType":"YulAssignment","src":"29840:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29852:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29863:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29848:3:18"},"nodeType":"YulFunctionCall","src":"29848:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29840:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29887:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"29898:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29883:3:18"},"nodeType":"YulFunctionCall","src":"29883:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29906:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"29912:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29902:3:18"},"nodeType":"YulFunctionCall","src":"29902:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29876:6:18"},"nodeType":"YulFunctionCall","src":"29876:47:18"},"nodeType":"YulExpressionStatement","src":"29876:47:18"},{"nodeType":"YulAssignment","src":"29932:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30066:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29940:124:18"},"nodeType":"YulFunctionCall","src":"29940:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29932:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29810:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29825:4:18","type":""}],"src":"29659:419:18"},{"body":{"nodeType":"YulBlock","src":"30128:147:18","statements":[{"nodeType":"YulAssignment","src":"30138:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30161:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30143:17:18"},"nodeType":"YulFunctionCall","src":"30143:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"30138:1:18"}]},{"nodeType":"YulAssignment","src":"30172:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"30195:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"30177:17:18"},"nodeType":"YulFunctionCall","src":"30177:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"30172:1:18"}]},{"nodeType":"YulAssignment","src":"30206:16:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30217:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"30220:1:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30213:3:18"},"nodeType":"YulFunctionCall","src":"30213:9:18"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"30206:3:18"}]},{"body":{"nodeType":"YulBlock","src":"30246:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"30248:16:18"},"nodeType":"YulFunctionCall","src":"30248:18:18"},"nodeType":"YulExpressionStatement","src":"30248:18:18"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"30238:1:18"},{"name":"sum","nodeType":"YulIdentifier","src":"30241:3:18"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"30235:2:18"},"nodeType":"YulFunctionCall","src":"30235:10:18"},"nodeType":"YulIf","src":"30232:36:18"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"30115:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"30118:1:18","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"30124:3:18","type":""}],"src":"30084:191:18"},{"body":{"nodeType":"YulBlock","src":"30387:122:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30409:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"30417:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30405:3:18"},"nodeType":"YulFunctionCall","src":"30405:14:18"},{"hexValue":"63616e6e6f74206269642062656c6f7720746865206c61746573742062696464","kind":"string","nodeType":"YulLiteral","src":"30421:34:18","type":"","value":"cannot bid below the latest bidd"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30398:6:18"},"nodeType":"YulFunctionCall","src":"30398:58:18"},"nodeType":"YulExpressionStatement","src":"30398:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30477:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"30485:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30473:3:18"},"nodeType":"YulFunctionCall","src":"30473:15:18"},{"hexValue":"696e67207072696365","kind":"string","nodeType":"YulLiteral","src":"30490:11:18","type":"","value":"ing price"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30466:6:18"},"nodeType":"YulFunctionCall","src":"30466:36:18"},"nodeType":"YulExpressionStatement","src":"30466:36:18"}]},"name":"store_literal_in_memory_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30379:6:18","type":""}],"src":"30281:228:18"},{"body":{"nodeType":"YulBlock","src":"30661:220:18","statements":[{"nodeType":"YulAssignment","src":"30671:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30737:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30742:2:18","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30678:58:18"},"nodeType":"YulFunctionCall","src":"30678:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30671:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30843:3:18"}],"functionName":{"name":"store_literal_in_memory_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10","nodeType":"YulIdentifier","src":"30754:88:18"},"nodeType":"YulFunctionCall","src":"30754:93:18"},"nodeType":"YulExpressionStatement","src":"30754:93:18"},{"nodeType":"YulAssignment","src":"30856:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30867:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"30872:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30863:3:18"},"nodeType":"YulFunctionCall","src":"30863:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30856:3:18"}]}]},"name":"abi_encode_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30649:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30657:3:18","type":""}],"src":"30515:366:18"},{"body":{"nodeType":"YulBlock","src":"31058:248:18","statements":[{"nodeType":"YulAssignment","src":"31068:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31080:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31091:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31076:3:18"},"nodeType":"YulFunctionCall","src":"31076:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31068:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31115:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"31126:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31111:3:18"},"nodeType":"YulFunctionCall","src":"31111:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31134:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"31140:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31130:3:18"},"nodeType":"YulFunctionCall","src":"31130:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31104:6:18"},"nodeType":"YulFunctionCall","src":"31104:47:18"},"nodeType":"YulExpressionStatement","src":"31104:47:18"},{"nodeType":"YulAssignment","src":"31160:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31294:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31168:124:18"},"nodeType":"YulFunctionCall","src":"31168:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31160:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31038:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31053:4:18","type":""}],"src":"30887:419:18"},{"body":{"nodeType":"YulBlock","src":"31340:152:18","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31357:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31360:77:18","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31350:6:18"},"nodeType":"YulFunctionCall","src":"31350:88:18"},"nodeType":"YulExpressionStatement","src":"31350:88:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31454:1:18","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"31457:4:18","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31447:6:18"},"nodeType":"YulFunctionCall","src":"31447:15:18"},"nodeType":"YulExpressionStatement","src":"31447:15:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31478:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"31481:4:18","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"31471:6:18"},"nodeType":"YulFunctionCall","src":"31471:15:18"},"nodeType":"YulExpressionStatement","src":"31471:15:18"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"31312:180:18"},{"body":{"nodeType":"YulBlock","src":"31540:143:18","statements":[{"nodeType":"YulAssignment","src":"31550:25:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31573:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31555:17:18"},"nodeType":"YulFunctionCall","src":"31555:20:18"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"31550:1:18"}]},{"nodeType":"YulAssignment","src":"31584:25:18","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31607:1:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31589:17:18"},"nodeType":"YulFunctionCall","src":"31589:20:18"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"31584:1:18"}]},{"body":{"nodeType":"YulBlock","src":"31631:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x12","nodeType":"YulIdentifier","src":"31633:16:18"},"nodeType":"YulFunctionCall","src":"31633:18:18"},"nodeType":"YulExpressionStatement","src":"31633:18:18"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31628:1:18"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31621:6:18"},"nodeType":"YulFunctionCall","src":"31621:9:18"},"nodeType":"YulIf","src":"31618:35:18"},{"nodeType":"YulAssignment","src":"31663:14:18","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31672:1:18"},{"name":"y","nodeType":"YulIdentifier","src":"31675:1:18"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31668:3:18"},"nodeType":"YulFunctionCall","src":"31668:9:18"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"31663:1:18"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"31529:1:18","type":""},{"name":"y","nodeType":"YulTypedName","src":"31532:1:18","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"31538:1:18","type":""}],"src":"31498:185:18"},{"body":{"nodeType":"YulBlock","src":"31795:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31817:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"31825:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31813:3:18"},"nodeType":"YulFunctionCall","src":"31813:14:18"},{"hexValue":"4269642063726561746564207375636365737366756c6c79","kind":"string","nodeType":"YulLiteral","src":"31829:26:18","type":"","value":"Bid created successfully"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31806:6:18"},"nodeType":"YulFunctionCall","src":"31806:50:18"},"nodeType":"YulExpressionStatement","src":"31806:50:18"}]},"name":"store_literal_in_memory_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31787:6:18","type":""}],"src":"31689:174:18"},{"body":{"nodeType":"YulBlock","src":"32015:220:18","statements":[{"nodeType":"YulAssignment","src":"32025:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32091:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32096:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32032:58:18"},"nodeType":"YulFunctionCall","src":"32032:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32025:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32197:3:18"}],"functionName":{"name":"store_literal_in_memory_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5","nodeType":"YulIdentifier","src":"32108:88:18"},"nodeType":"YulFunctionCall","src":"32108:93:18"},"nodeType":"YulExpressionStatement","src":"32108:93:18"},{"nodeType":"YulAssignment","src":"32210:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32221:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"32226:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32217:3:18"},"nodeType":"YulFunctionCall","src":"32217:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32210:3:18"}]}]},"name":"abi_encode_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32003:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32011:3:18","type":""}],"src":"31869:366:18"},{"body":{"nodeType":"YulBlock","src":"32468:412:18","statements":[{"nodeType":"YulAssignment","src":"32478:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32490:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32501:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32486:3:18"},"nodeType":"YulFunctionCall","src":"32486:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32478:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32558:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32571:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32582:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32567:3:18"},"nodeType":"YulFunctionCall","src":"32567:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32514:43:18"},"nodeType":"YulFunctionCall","src":"32514:71:18"},"nodeType":"YulExpressionStatement","src":"32514:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32639:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32652:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32663:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32648:3:18"},"nodeType":"YulFunctionCall","src":"32648:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"32595:43:18"},"nodeType":"YulFunctionCall","src":"32595:72:18"},"nodeType":"YulExpressionStatement","src":"32595:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32688:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"32699:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32684:3:18"},"nodeType":"YulFunctionCall","src":"32684:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32708:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"32714:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32704:3:18"},"nodeType":"YulFunctionCall","src":"32704:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32677:6:18"},"nodeType":"YulFunctionCall","src":"32677:48:18"},"nodeType":"YulExpressionStatement","src":"32677:48:18"},{"nodeType":"YulAssignment","src":"32734:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32868:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32742:124:18"},"nodeType":"YulFunctionCall","src":"32742:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32734:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32432:9:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32444:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32452:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32463:4:18","type":""}],"src":"32241:639:18"},{"body":{"nodeType":"YulBlock","src":"32992:72:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"33014:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"33022:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33010:3:18"},"nodeType":"YulFunctionCall","src":"33010:14:18"},{"hexValue":"41756374696f6e2063726561746564207375636365737366756c6c79","kind":"string","nodeType":"YulLiteral","src":"33026:30:18","type":"","value":"Auction created successfully"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33003:6:18"},"nodeType":"YulFunctionCall","src":"33003:54:18"},"nodeType":"YulExpressionStatement","src":"33003:54:18"}]},"name":"store_literal_in_memory_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32984:6:18","type":""}],"src":"32886:178:18"},{"body":{"nodeType":"YulBlock","src":"33216:220:18","statements":[{"nodeType":"YulAssignment","src":"33226:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33292:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"33297:2:18","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33233:58:18"},"nodeType":"YulFunctionCall","src":"33233:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33226:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33398:3:18"}],"functionName":{"name":"store_literal_in_memory_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f","nodeType":"YulIdentifier","src":"33309:88:18"},"nodeType":"YulFunctionCall","src":"33309:93:18"},"nodeType":"YulExpressionStatement","src":"33309:93:18"},{"nodeType":"YulAssignment","src":"33411:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33422:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"33427:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33418:3:18"},"nodeType":"YulFunctionCall","src":"33418:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33411:3:18"}]}]},"name":"abi_encode_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"33204:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33212:3:18","type":""}],"src":"33070:366:18"},{"body":{"nodeType":"YulBlock","src":"33753:661:18","statements":[{"nodeType":"YulAssignment","src":"33763:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33775:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33786:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33771:3:18"},"nodeType":"YulFunctionCall","src":"33771:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33763:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33844:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33857:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33868:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33853:3:18"},"nodeType":"YulFunctionCall","src":"33853:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33800:43:18"},"nodeType":"YulFunctionCall","src":"33800:71:18"},"nodeType":"YulExpressionStatement","src":"33800:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33925:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33938:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"33949:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33934:3:18"},"nodeType":"YulFunctionCall","src":"33934:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33881:43:18"},"nodeType":"YulFunctionCall","src":"33881:72:18"},"nodeType":"YulExpressionStatement","src":"33881:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"34007:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34020:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34031:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34016:3:18"},"nodeType":"YulFunctionCall","src":"34016:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33963:43:18"},"nodeType":"YulFunctionCall","src":"33963:72:18"},"nodeType":"YulExpressionStatement","src":"33963:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34089:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34102:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34113:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34098:3:18"},"nodeType":"YulFunctionCall","src":"34098:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34045:43:18"},"nodeType":"YulFunctionCall","src":"34045:72:18"},"nodeType":"YulExpressionStatement","src":"34045:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34171:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34184:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34195:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34180:3:18"},"nodeType":"YulFunctionCall","src":"34180:19:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"34127:43:18"},"nodeType":"YulFunctionCall","src":"34127:73:18"},"nodeType":"YulExpressionStatement","src":"34127:73:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34221:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"34232:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34217:3:18"},"nodeType":"YulFunctionCall","src":"34217:19:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34242:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"34248:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34238:3:18"},"nodeType":"YulFunctionCall","src":"34238:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34210:6:18"},"nodeType":"YulFunctionCall","src":"34210:49:18"},"nodeType":"YulExpressionStatement","src":"34210:49:18"},{"nodeType":"YulAssignment","src":"34268:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34402:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34276:124:18"},"nodeType":"YulFunctionCall","src":"34276:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34268:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33693:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33705:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33713:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33721:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33729:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33737:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33748:4:18","type":""}],"src":"33442:972:18"},{"body":{"nodeType":"YulBlock","src":"34526:68:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"34548:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"34556:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34544:3:18"},"nodeType":"YulFunctionCall","src":"34544:14:18"},{"hexValue":"4552433732313a20696e76616c696420746f6b656e204944","kind":"string","nodeType":"YulLiteral","src":"34560:26:18","type":"","value":"ERC721: invalid token ID"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34537:6:18"},"nodeType":"YulFunctionCall","src":"34537:50:18"},"nodeType":"YulExpressionStatement","src":"34537:50:18"}]},"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"34518:6:18","type":""}],"src":"34420:174:18"},{"body":{"nodeType":"YulBlock","src":"34746:220:18","statements":[{"nodeType":"YulAssignment","src":"34756:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34822:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34827:2:18","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34763:58:18"},"nodeType":"YulFunctionCall","src":"34763:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"34756:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34928:3:18"}],"functionName":{"name":"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f","nodeType":"YulIdentifier","src":"34839:88:18"},"nodeType":"YulFunctionCall","src":"34839:93:18"},"nodeType":"YulExpressionStatement","src":"34839:93:18"},{"nodeType":"YulAssignment","src":"34941:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"34952:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"34957:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34948:3:18"},"nodeType":"YulFunctionCall","src":"34948:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"34941:3:18"}]}]},"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"34734:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"34742:3:18","type":""}],"src":"34600:366:18"},{"body":{"nodeType":"YulBlock","src":"35143:248:18","statements":[{"nodeType":"YulAssignment","src":"35153:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35165:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35176:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35161:3:18"},"nodeType":"YulFunctionCall","src":"35161:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35153:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35200:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"35211:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35196:3:18"},"nodeType":"YulFunctionCall","src":"35196:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35219:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"35225:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35215:3:18"},"nodeType":"YulFunctionCall","src":"35215:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35189:6:18"},"nodeType":"YulFunctionCall","src":"35189:47:18"},"nodeType":"YulExpressionStatement","src":"35189:47:18"},{"nodeType":"YulAssignment","src":"35245:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35379:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35253:124:18"},"nodeType":"YulFunctionCall","src":"35253:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35245:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"35123:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35138:4:18","type":""}],"src":"34972:419:18"},{"body":{"nodeType":"YulBlock","src":"35503:122:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35525:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"35533:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35521:3:18"},"nodeType":"YulFunctionCall","src":"35521:14:18"},{"hexValue":"4552433732313a2061646472657373207a65726f206973206e6f742061207661","kind":"string","nodeType":"YulLiteral","src":"35537:34:18","type":"","value":"ERC721: address zero is not a va"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35514:6:18"},"nodeType":"YulFunctionCall","src":"35514:58:18"},"nodeType":"YulExpressionStatement","src":"35514:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"35593:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"35601:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35589:3:18"},"nodeType":"YulFunctionCall","src":"35589:15:18"},{"hexValue":"6c6964206f776e6572","kind":"string","nodeType":"YulLiteral","src":"35606:11:18","type":"","value":"lid owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35582:6:18"},"nodeType":"YulFunctionCall","src":"35582:36:18"},"nodeType":"YulExpressionStatement","src":"35582:36:18"}]},"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"35495:6:18","type":""}],"src":"35397:228:18"},{"body":{"nodeType":"YulBlock","src":"35777:220:18","statements":[{"nodeType":"YulAssignment","src":"35787:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35853:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"35858:2:18","type":"","value":"41"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35794:58:18"},"nodeType":"YulFunctionCall","src":"35794:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"35787:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35959:3:18"}],"functionName":{"name":"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159","nodeType":"YulIdentifier","src":"35870:88:18"},"nodeType":"YulFunctionCall","src":"35870:93:18"},"nodeType":"YulExpressionStatement","src":"35870:93:18"},{"nodeType":"YulAssignment","src":"35972:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"35983:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"35988:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35979:3:18"},"nodeType":"YulFunctionCall","src":"35979:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"35972:3:18"}]}]},"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"35765:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"35773:3:18","type":""}],"src":"35631:366:18"},{"body":{"nodeType":"YulBlock","src":"36174:248:18","statements":[{"nodeType":"YulAssignment","src":"36184:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36196:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36207:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36192:3:18"},"nodeType":"YulFunctionCall","src":"36192:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36184:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"36231:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"36242:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36227:3:18"},"nodeType":"YulFunctionCall","src":"36227:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36250:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"36256:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"36246:3:18"},"nodeType":"YulFunctionCall","src":"36246:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36220:6:18"},"nodeType":"YulFunctionCall","src":"36220:47:18"},"nodeType":"YulExpressionStatement","src":"36220:47:18"},{"nodeType":"YulAssignment","src":"36276:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"36410:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36284:124:18"},"nodeType":"YulFunctionCall","src":"36284:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"36276:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"36154:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"36169:4:18","type":""}],"src":"36003:419:18"},{"body":{"nodeType":"YulBlock","src":"36542:34:18","statements":[{"nodeType":"YulAssignment","src":"36552:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"36567:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"36552:11:18"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"36514:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"36519:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"36530:11:18","type":""}],"src":"36428:148:18"},{"body":{"nodeType":"YulBlock","src":"36692:280:18","statements":[{"nodeType":"YulVariableDeclaration","src":"36702:53:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36749:5:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"36716:32:18"},"nodeType":"YulFunctionCall","src":"36716:39:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36706:6:18","type":""}]},{"nodeType":"YulAssignment","src":"36764:96:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36848:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"36853:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"36771:76:18"},"nodeType":"YulFunctionCall","src":"36771:89:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36764:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36908:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"36915:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36904:3:18"},"nodeType":"YulFunctionCall","src":"36904:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"36922:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"36927:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"36869:34:18"},"nodeType":"YulFunctionCall","src":"36869:65:18"},"nodeType":"YulExpressionStatement","src":"36869:65:18"},{"nodeType":"YulAssignment","src":"36943:23:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36954:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"36959:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36950:3:18"},"nodeType":"YulFunctionCall","src":"36950:16:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36943:3:18"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36673:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36680:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36688:3:18","type":""}],"src":"36582:390:18"},{"body":{"nodeType":"YulBlock","src":"37162:251:18","statements":[{"nodeType":"YulAssignment","src":"37173:102:18","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"37262:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"37271:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37180:81:18"},"nodeType":"YulFunctionCall","src":"37180:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37173:3:18"}]},{"nodeType":"YulAssignment","src":"37285:102:18","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"37374:6:18"},{"name":"pos","nodeType":"YulIdentifier","src":"37383:3:18"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"37292:81:18"},"nodeType":"YulFunctionCall","src":"37292:95:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37285:3:18"}]},{"nodeType":"YulAssignment","src":"37397:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"37404:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37397:3:18"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37133:3:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37139:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37147:6:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37158:3:18","type":""}],"src":"36978:435:18"},{"body":{"nodeType":"YulBlock","src":"37525:60:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"37547:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"37555:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37543:3:18"},"nodeType":"YulFunctionCall","src":"37543:14:18"},{"hexValue":"696e636f727265637420616d6f756e74","kind":"string","nodeType":"YulLiteral","src":"37559:18:18","type":"","value":"incorrect amount"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37536:6:18"},"nodeType":"YulFunctionCall","src":"37536:42:18"},"nodeType":"YulExpressionStatement","src":"37536:42:18"}]},"name":"store_literal_in_memory_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"37517:6:18","type":""}],"src":"37419:166:18"},{"body":{"nodeType":"YulBlock","src":"37737:220:18","statements":[{"nodeType":"YulAssignment","src":"37747:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37813:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37818:2:18","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37754:58:18"},"nodeType":"YulFunctionCall","src":"37754:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37747:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37919:3:18"}],"functionName":{"name":"store_literal_in_memory_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970","nodeType":"YulIdentifier","src":"37830:88:18"},"nodeType":"YulFunctionCall","src":"37830:93:18"},"nodeType":"YulExpressionStatement","src":"37830:93:18"},{"nodeType":"YulAssignment","src":"37932:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37943:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"37948:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37939:3:18"},"nodeType":"YulFunctionCall","src":"37939:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"37932:3:18"}]}]},"name":"abi_encode_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"37725:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"37733:3:18","type":""}],"src":"37591:366:18"},{"body":{"nodeType":"YulBlock","src":"38134:248:18","statements":[{"nodeType":"YulAssignment","src":"38144:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38156:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38167:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38152:3:18"},"nodeType":"YulFunctionCall","src":"38152:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38144:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38191:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"38202:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38187:3:18"},"nodeType":"YulFunctionCall","src":"38187:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38210:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"38216:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38206:3:18"},"nodeType":"YulFunctionCall","src":"38206:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38180:6:18"},"nodeType":"YulFunctionCall","src":"38180:47:18"},"nodeType":"YulExpressionStatement","src":"38180:47:18"},{"nodeType":"YulAssignment","src":"38236:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38370:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38244:124:18"},"nodeType":"YulFunctionCall","src":"38244:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38236:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"38114:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"38129:4:18","type":""}],"src":"37963:419:18"},{"body":{"nodeType":"YulBlock","src":"38501:34:18","statements":[{"nodeType":"YulAssignment","src":"38511:18:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"38526:3:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"38511:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38473:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"38478:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"38489:11:18","type":""}],"src":"38388:147:18"},{"body":{"nodeType":"YulBlock","src":"38647:8:18","statements":[]},"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38639:6:18","type":""}],"src":"38541:114:18"},{"body":{"nodeType":"YulBlock","src":"38824:235:18","statements":[{"nodeType":"YulAssignment","src":"38834:90:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38917:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"38922:1:18","type":"","value":"0"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"38841:75:18"},"nodeType":"YulFunctionCall","src":"38841:83:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38834:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39022:3:18"}],"functionName":{"name":"store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","nodeType":"YulIdentifier","src":"38933:88:18"},"nodeType":"YulFunctionCall","src":"38933:93:18"},"nodeType":"YulExpressionStatement","src":"38933:93:18"},{"nodeType":"YulAssignment","src":"39035:18:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39046:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"39051:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39042:3:18"},"nodeType":"YulFunctionCall","src":"39042:11:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39035:3:18"}]}]},"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38812:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38820:3:18","type":""}],"src":"38661:398:18"},{"body":{"nodeType":"YulBlock","src":"39253:191:18","statements":[{"nodeType":"YulAssignment","src":"39264:154:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39414:3:18"}],"functionName":{"name":"abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"39271:141:18"},"nodeType":"YulFunctionCall","src":"39271:147:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39264:3:18"}]},{"nodeType":"YulAssignment","src":"39428:10:18","value":{"name":"pos","nodeType":"YulIdentifier","src":"39435:3:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39428:3:18"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39240:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39249:3:18","type":""}],"src":"39065:379:18"},{"body":{"nodeType":"YulBlock","src":"39556:58:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39578:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"39586:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39574:3:18"},"nodeType":"YulFunctionCall","src":"39574:14:18"},{"hexValue":"7061796d656e74206661696c6564","kind":"string","nodeType":"YulLiteral","src":"39590:16:18","type":"","value":"payment failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39567:6:18"},"nodeType":"YulFunctionCall","src":"39567:40:18"},"nodeType":"YulExpressionStatement","src":"39567:40:18"}]},"name":"store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39548:6:18","type":""}],"src":"39450:164:18"},{"body":{"nodeType":"YulBlock","src":"39766:220:18","statements":[{"nodeType":"YulAssignment","src":"39776:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39842:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"39847:2:18","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39783:58:18"},"nodeType":"YulFunctionCall","src":"39783:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"39776:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39948:3:18"}],"functionName":{"name":"store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b","nodeType":"YulIdentifier","src":"39859:88:18"},"nodeType":"YulFunctionCall","src":"39859:93:18"},"nodeType":"YulExpressionStatement","src":"39859:93:18"},{"nodeType":"YulAssignment","src":"39961:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"39972:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"39977:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39968:3:18"},"nodeType":"YulFunctionCall","src":"39968:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"39961:3:18"}]}]},"name":"abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"39754:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"39762:3:18","type":""}],"src":"39620:366:18"},{"body":{"nodeType":"YulBlock","src":"40163:248:18","statements":[{"nodeType":"YulAssignment","src":"40173:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40185:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40196:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40181:3:18"},"nodeType":"YulFunctionCall","src":"40181:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40173:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40220:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"40231:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40216:3:18"},"nodeType":"YulFunctionCall","src":"40216:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40239:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"40245:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40235:3:18"},"nodeType":"YulFunctionCall","src":"40235:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40209:6:18"},"nodeType":"YulFunctionCall","src":"40209:47:18"},"nodeType":"YulExpressionStatement","src":"40209:47:18"},{"nodeType":"YulAssignment","src":"40265:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40399:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40273:124:18"},"nodeType":"YulFunctionCall","src":"40273:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40265:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40143:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40158:4:18","type":""}],"src":"39992:419:18"},{"body":{"nodeType":"YulBlock","src":"40523:65:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"40545:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"40553:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40541:3:18"},"nodeType":"YulFunctionCall","src":"40541:14:18"},{"hexValue":"536f6c64204e4654207375636365737366756c6c79","kind":"string","nodeType":"YulLiteral","src":"40557:23:18","type":"","value":"Sold NFT successfully"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40534:6:18"},"nodeType":"YulFunctionCall","src":"40534:47:18"},"nodeType":"YulExpressionStatement","src":"40534:47:18"}]},"name":"store_literal_in_memory_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"40515:6:18","type":""}],"src":"40417:171:18"},{"body":{"nodeType":"YulBlock","src":"40740:220:18","statements":[{"nodeType":"YulAssignment","src":"40750:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40816:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"40821:2:18","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40757:58:18"},"nodeType":"YulFunctionCall","src":"40757:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40750:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40922:3:18"}],"functionName":{"name":"store_literal_in_memory_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580","nodeType":"YulIdentifier","src":"40833:88:18"},"nodeType":"YulFunctionCall","src":"40833:93:18"},"nodeType":"YulExpressionStatement","src":"40833:93:18"},{"nodeType":"YulAssignment","src":"40935:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40946:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"40951:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40942:3:18"},"nodeType":"YulFunctionCall","src":"40942:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40935:3:18"}]}]},"name":"abi_encode_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40728:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40736:3:18","type":""}],"src":"40594:366:18"},{"body":{"nodeType":"YulBlock","src":"41271:655:18","statements":[{"nodeType":"YulAssignment","src":"41281:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41293:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41304:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41289:3:18"},"nodeType":"YulFunctionCall","src":"41289:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41281:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41362:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41375:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41386:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41371:3:18"},"nodeType":"YulFunctionCall","src":"41371:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41318:43:18"},"nodeType":"YulFunctionCall","src":"41318:71:18"},"nodeType":"YulExpressionStatement","src":"41318:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"41443:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41456:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41467:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41452:3:18"},"nodeType":"YulFunctionCall","src":"41452:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41399:43:18"},"nodeType":"YulFunctionCall","src":"41399:72:18"},"nodeType":"YulExpressionStatement","src":"41399:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"41525:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41538:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41549:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41534:3:18"},"nodeType":"YulFunctionCall","src":"41534:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"41481:43:18"},"nodeType":"YulFunctionCall","src":"41481:72:18"},"nodeType":"YulExpressionStatement","src":"41481:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"41607:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41620:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41631:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41616:3:18"},"nodeType":"YulFunctionCall","src":"41616:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41563:43:18"},"nodeType":"YulFunctionCall","src":"41563:72:18"},"nodeType":"YulExpressionStatement","src":"41563:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"41683:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41696:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41707:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41692:3:18"},"nodeType":"YulFunctionCall","src":"41692:19:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"41645:37:18"},"nodeType":"YulFunctionCall","src":"41645:67:18"},"nodeType":"YulExpressionStatement","src":"41645:67:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41733:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"41744:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41729:3:18"},"nodeType":"YulFunctionCall","src":"41729:19:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41754:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"41760:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"41750:3:18"},"nodeType":"YulFunctionCall","src":"41750:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41722:6:18"},"nodeType":"YulFunctionCall","src":"41722:49:18"},"nodeType":"YulExpressionStatement","src":"41722:49:18"},{"nodeType":"YulAssignment","src":"41780:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41914:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41788:124:18"},"nodeType":"YulFunctionCall","src":"41788:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41780:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580__to_t_uint256_t_address_t_address_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41211:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"41223:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"41231:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"41239:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"41247:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41255:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41266:4:18","type":""}],"src":"40966:960:18"},{"body":{"nodeType":"YulBlock","src":"42038:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42060:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"42068:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42056:3:18"},"nodeType":"YulFunctionCall","src":"42056:14:18"},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","kind":"string","nodeType":"YulLiteral","src":"42072:33:18","type":"","value":"ReentrancyGuard: reentrant call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42049:6:18"},"nodeType":"YulFunctionCall","src":"42049:57:18"},"nodeType":"YulExpressionStatement","src":"42049:57:18"}]},"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42030:6:18","type":""}],"src":"41932:181:18"},{"body":{"nodeType":"YulBlock","src":"42265:220:18","statements":[{"nodeType":"YulAssignment","src":"42275:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42341:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"42346:2:18","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42282:58:18"},"nodeType":"YulFunctionCall","src":"42282:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42275:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42447:3:18"}],"functionName":{"name":"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","nodeType":"YulIdentifier","src":"42358:88:18"},"nodeType":"YulFunctionCall","src":"42358:93:18"},"nodeType":"YulExpressionStatement","src":"42358:93:18"},{"nodeType":"YulAssignment","src":"42460:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42471:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"42476:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42467:3:18"},"nodeType":"YulFunctionCall","src":"42467:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42460:3:18"}]}]},"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42253:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42261:3:18","type":""}],"src":"42119:366:18"},{"body":{"nodeType":"YulBlock","src":"42662:248:18","statements":[{"nodeType":"YulAssignment","src":"42672:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42684:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42695:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42680:3:18"},"nodeType":"YulFunctionCall","src":"42680:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42672:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42719:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"42730:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42715:3:18"},"nodeType":"YulFunctionCall","src":"42715:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42738:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"42744:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42734:3:18"},"nodeType":"YulFunctionCall","src":"42734:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42708:6:18"},"nodeType":"YulFunctionCall","src":"42708:47:18"},"nodeType":"YulExpressionStatement","src":"42708:47:18"},{"nodeType":"YulAssignment","src":"42764:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42898:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42772:124:18"},"nodeType":"YulFunctionCall","src":"42772:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42764:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42642:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42657:4:18","type":""}],"src":"42491:419:18"},{"body":{"nodeType":"YulBlock","src":"43022:118:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43044:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43052:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43040:3:18"},"nodeType":"YulFunctionCall","src":"43040:14:18"},{"hexValue":"4552433732313a207472616e736665722066726f6d20696e636f727265637420","kind":"string","nodeType":"YulLiteral","src":"43056:34:18","type":"","value":"ERC721: transfer from incorrect "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43033:6:18"},"nodeType":"YulFunctionCall","src":"43033:58:18"},"nodeType":"YulExpressionStatement","src":"43033:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"43112:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"43120:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43108:3:18"},"nodeType":"YulFunctionCall","src":"43108:15:18"},{"hexValue":"6f776e6572","kind":"string","nodeType":"YulLiteral","src":"43125:7:18","type":"","value":"owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43101:6:18"},"nodeType":"YulFunctionCall","src":"43101:32:18"},"nodeType":"YulExpressionStatement","src":"43101:32:18"}]},"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"43014:6:18","type":""}],"src":"42916:224:18"},{"body":{"nodeType":"YulBlock","src":"43292:220:18","statements":[{"nodeType":"YulAssignment","src":"43302:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43368:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"43373:2:18","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43309:58:18"},"nodeType":"YulFunctionCall","src":"43309:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"43302:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43474:3:18"}],"functionName":{"name":"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48","nodeType":"YulIdentifier","src":"43385:88:18"},"nodeType":"YulFunctionCall","src":"43385:93:18"},"nodeType":"YulExpressionStatement","src":"43385:93:18"},{"nodeType":"YulAssignment","src":"43487:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"43498:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"43503:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43494:3:18"},"nodeType":"YulFunctionCall","src":"43494:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"43487:3:18"}]}]},"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"43280:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"43288:3:18","type":""}],"src":"43146:366:18"},{"body":{"nodeType":"YulBlock","src":"43689:248:18","statements":[{"nodeType":"YulAssignment","src":"43699:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43711:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43722:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43707:3:18"},"nodeType":"YulFunctionCall","src":"43707:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43699:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43746:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"43757:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43742:3:18"},"nodeType":"YulFunctionCall","src":"43742:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43765:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"43771:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43761:3:18"},"nodeType":"YulFunctionCall","src":"43761:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43735:6:18"},"nodeType":"YulFunctionCall","src":"43735:47:18"},"nodeType":"YulExpressionStatement","src":"43735:47:18"},{"nodeType":"YulAssignment","src":"43791:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43925:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43799:124:18"},"nodeType":"YulFunctionCall","src":"43799:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43791:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43669:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43684:4:18","type":""}],"src":"43518:419:18"},{"body":{"nodeType":"YulBlock","src":"44049:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44071:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44079:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44067:3:18"},"nodeType":"YulFunctionCall","src":"44067:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"44083:34:18","type":"","value":"ERC721: transfer to the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44060:6:18"},"nodeType":"YulFunctionCall","src":"44060:58:18"},"nodeType":"YulExpressionStatement","src":"44060:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"44139:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"44147:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44135:3:18"},"nodeType":"YulFunctionCall","src":"44135:15:18"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"44152:6:18","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44128:6:18"},"nodeType":"YulFunctionCall","src":"44128:31:18"},"nodeType":"YulExpressionStatement","src":"44128:31:18"}]},"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"44041:6:18","type":""}],"src":"43943:223:18"},{"body":{"nodeType":"YulBlock","src":"44318:220:18","statements":[{"nodeType":"YulAssignment","src":"44328:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44394:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"44399:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44335:58:18"},"nodeType":"YulFunctionCall","src":"44335:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"44328:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44500:3:18"}],"functionName":{"name":"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4","nodeType":"YulIdentifier","src":"44411:88:18"},"nodeType":"YulFunctionCall","src":"44411:93:18"},"nodeType":"YulExpressionStatement","src":"44411:93:18"},{"nodeType":"YulAssignment","src":"44513:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"44524:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"44529:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44520:3:18"},"nodeType":"YulFunctionCall","src":"44520:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"44513:3:18"}]}]},"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"44306:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"44314:3:18","type":""}],"src":"44172:366:18"},{"body":{"nodeType":"YulBlock","src":"44715:248:18","statements":[{"nodeType":"YulAssignment","src":"44725:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44737:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"44748:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44733:3:18"},"nodeType":"YulFunctionCall","src":"44733:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44725:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"44772:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"44783:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"44768:3:18"},"nodeType":"YulFunctionCall","src":"44768:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44791:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"44797:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"44787:3:18"},"nodeType":"YulFunctionCall","src":"44787:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"44761:6:18"},"nodeType":"YulFunctionCall","src":"44761:47:18"},"nodeType":"YulExpressionStatement","src":"44761:47:18"},{"nodeType":"YulAssignment","src":"44817:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"44951:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"44825:124:18"},"nodeType":"YulFunctionCall","src":"44825:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"44817:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"44695:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"44710:4:18","type":""}],"src":"44544:419:18"},{"body":{"nodeType":"YulBlock","src":"45075:117:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45097:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45105:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45093:3:18"},"nodeType":"YulFunctionCall","src":"45093:14:18"},{"hexValue":"4572726f722c2063616e6e6f74207472616e7366657220746f20616464726573","kind":"string","nodeType":"YulLiteral","src":"45109:34:18","type":"","value":"Error, cannot transfer to addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45086:6:18"},"nodeType":"YulFunctionCall","src":"45086:58:18"},"nodeType":"YulExpressionStatement","src":"45086:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"45165:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"45173:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45161:3:18"},"nodeType":"YulFunctionCall","src":"45161:15:18"},{"hexValue":"73283029","kind":"string","nodeType":"YulLiteral","src":"45178:6:18","type":"","value":"s(0)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45154:6:18"},"nodeType":"YulFunctionCall","src":"45154:31:18"},"nodeType":"YulExpressionStatement","src":"45154:31:18"}]},"name":"store_literal_in_memory_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"45067:6:18","type":""}],"src":"44969:223:18"},{"body":{"nodeType":"YulBlock","src":"45344:220:18","statements":[{"nodeType":"YulAssignment","src":"45354:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45420:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"45425:2:18","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45361:58:18"},"nodeType":"YulFunctionCall","src":"45361:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"45354:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45526:3:18"}],"functionName":{"name":"store_literal_in_memory_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59","nodeType":"YulIdentifier","src":"45437:88:18"},"nodeType":"YulFunctionCall","src":"45437:93:18"},"nodeType":"YulExpressionStatement","src":"45437:93:18"},{"nodeType":"YulAssignment","src":"45539:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"45550:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"45555:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45546:3:18"},"nodeType":"YulFunctionCall","src":"45546:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"45539:3:18"}]}]},"name":"abi_encode_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"45332:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"45340:3:18","type":""}],"src":"45198:366:18"},{"body":{"nodeType":"YulBlock","src":"45741:248:18","statements":[{"nodeType":"YulAssignment","src":"45751:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45763:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"45774:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45759:3:18"},"nodeType":"YulFunctionCall","src":"45759:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45751:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"45798:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"45809:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"45794:3:18"},"nodeType":"YulFunctionCall","src":"45794:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45817:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"45823:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"45813:3:18"},"nodeType":"YulFunctionCall","src":"45813:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45787:6:18"},"nodeType":"YulFunctionCall","src":"45787:47:18"},"nodeType":"YulExpressionStatement","src":"45787:47:18"},{"nodeType":"YulAssignment","src":"45843:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"45977:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"45851:124:18"},"nodeType":"YulFunctionCall","src":"45851:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"45843:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"45721:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"45736:4:18","type":""}],"src":"45570:419:18"},{"body":{"nodeType":"YulBlock","src":"46101:71:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"46123:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"46131:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46119:3:18"},"nodeType":"YulFunctionCall","src":"46119:14:18"},{"hexValue":"4572726f722c206661696c656420746f2073656e64204574686572","kind":"string","nodeType":"YulLiteral","src":"46135:29:18","type":"","value":"Error, failed to send Ether"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46112:6:18"},"nodeType":"YulFunctionCall","src":"46112:53:18"},"nodeType":"YulExpressionStatement","src":"46112:53:18"}]},"name":"store_literal_in_memory_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"46093:6:18","type":""}],"src":"45995:177:18"},{"body":{"nodeType":"YulBlock","src":"46324:220:18","statements":[{"nodeType":"YulAssignment","src":"46334:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46400:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"46405:2:18","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46341:58:18"},"nodeType":"YulFunctionCall","src":"46341:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"46334:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46506:3:18"}],"functionName":{"name":"store_literal_in_memory_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1","nodeType":"YulIdentifier","src":"46417:88:18"},"nodeType":"YulFunctionCall","src":"46417:93:18"},"nodeType":"YulExpressionStatement","src":"46417:93:18"},{"nodeType":"YulAssignment","src":"46519:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"46530:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"46535:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46526:3:18"},"nodeType":"YulFunctionCall","src":"46526:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"46519:3:18"}]}]},"name":"abi_encode_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"46312:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"46320:3:18","type":""}],"src":"46178:366:18"},{"body":{"nodeType":"YulBlock","src":"46721:248:18","statements":[{"nodeType":"YulAssignment","src":"46731:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46743:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"46754:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46739:3:18"},"nodeType":"YulFunctionCall","src":"46739:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46731:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"46778:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"46789:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"46774:3:18"},"nodeType":"YulFunctionCall","src":"46774:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46797:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"46803:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"46793:3:18"},"nodeType":"YulFunctionCall","src":"46793:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"46767:6:18"},"nodeType":"YulFunctionCall","src":"46767:47:18"},"nodeType":"YulExpressionStatement","src":"46767:47:18"},{"nodeType":"YulAssignment","src":"46823:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"46957:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"46831:124:18"},"nodeType":"YulFunctionCall","src":"46831:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"46823:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"46701:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"46716:4:18","type":""}],"src":"46550:419:18"},{"body":{"nodeType":"YulBlock","src":"47081:69:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"47103:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"47111:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47099:3:18"},"nodeType":"YulFunctionCall","src":"47099:14:18"},{"hexValue":"4552433732313a20617070726f766520746f2063616c6c6572","kind":"string","nodeType":"YulLiteral","src":"47115:27:18","type":"","value":"ERC721: approve to caller"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47092:6:18"},"nodeType":"YulFunctionCall","src":"47092:51:18"},"nodeType":"YulExpressionStatement","src":"47092:51:18"}]},"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"47073:6:18","type":""}],"src":"46975:175:18"},{"body":{"nodeType":"YulBlock","src":"47302:220:18","statements":[{"nodeType":"YulAssignment","src":"47312:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47378:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"47383:2:18","type":"","value":"25"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47319:58:18"},"nodeType":"YulFunctionCall","src":"47319:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"47312:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47484:3:18"}],"functionName":{"name":"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05","nodeType":"YulIdentifier","src":"47395:88:18"},"nodeType":"YulFunctionCall","src":"47395:93:18"},"nodeType":"YulExpressionStatement","src":"47395:93:18"},{"nodeType":"YulAssignment","src":"47497:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"47508:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"47513:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47504:3:18"},"nodeType":"YulFunctionCall","src":"47504:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"47497:3:18"}]}]},"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"47290:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"47298:3:18","type":""}],"src":"47156:366:18"},{"body":{"nodeType":"YulBlock","src":"47699:248:18","statements":[{"nodeType":"YulAssignment","src":"47709:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47721:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"47732:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47717:3:18"},"nodeType":"YulFunctionCall","src":"47717:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47709:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"47756:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"47767:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"47752:3:18"},"nodeType":"YulFunctionCall","src":"47752:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47775:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"47781:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"47771:3:18"},"nodeType":"YulFunctionCall","src":"47771:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"47745:6:18"},"nodeType":"YulFunctionCall","src":"47745:47:18"},"nodeType":"YulExpressionStatement","src":"47745:47:18"},{"nodeType":"YulAssignment","src":"47801:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"47935:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"47809:124:18"},"nodeType":"YulFunctionCall","src":"47809:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"47801:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"47679:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"47694:4:18","type":""}],"src":"47528:419:18"},{"body":{"nodeType":"YulBlock","src":"48059:131:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48081:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"48089:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48077:3:18"},"nodeType":"YulFunctionCall","src":"48077:14:18"},{"hexValue":"4552433732313a207472616e7366657220746f206e6f6e204552433732315265","kind":"string","nodeType":"YulLiteral","src":"48093:34:18","type":"","value":"ERC721: transfer to non ERC721Re"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48070:6:18"},"nodeType":"YulFunctionCall","src":"48070:58:18"},"nodeType":"YulExpressionStatement","src":"48070:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"48149:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"48157:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48145:3:18"},"nodeType":"YulFunctionCall","src":"48145:15:18"},{"hexValue":"63656976657220696d706c656d656e746572","kind":"string","nodeType":"YulLiteral","src":"48162:20:18","type":"","value":"ceiver implementer"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48138:6:18"},"nodeType":"YulFunctionCall","src":"48138:45:18"},"nodeType":"YulExpressionStatement","src":"48138:45:18"}]},"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"48051:6:18","type":""}],"src":"47953:237:18"},{"body":{"nodeType":"YulBlock","src":"48342:220:18","statements":[{"nodeType":"YulAssignment","src":"48352:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48418:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"48423:2:18","type":"","value":"50"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48359:58:18"},"nodeType":"YulFunctionCall","src":"48359:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"48352:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48524:3:18"}],"functionName":{"name":"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e","nodeType":"YulIdentifier","src":"48435:88:18"},"nodeType":"YulFunctionCall","src":"48435:93:18"},"nodeType":"YulExpressionStatement","src":"48435:93:18"},{"nodeType":"YulAssignment","src":"48537:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"48548:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"48553:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48544:3:18"},"nodeType":"YulFunctionCall","src":"48544:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"48537:3:18"}]}]},"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"48330:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"48338:3:18","type":""}],"src":"48196:366:18"},{"body":{"nodeType":"YulBlock","src":"48739:248:18","statements":[{"nodeType":"YulAssignment","src":"48749:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48761:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"48772:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48757:3:18"},"nodeType":"YulFunctionCall","src":"48757:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48749:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"48796:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"48807:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"48792:3:18"},"nodeType":"YulFunctionCall","src":"48792:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48815:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"48821:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"48811:3:18"},"nodeType":"YulFunctionCall","src":"48811:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"48785:6:18"},"nodeType":"YulFunctionCall","src":"48785:47:18"},"nodeType":"YulExpressionStatement","src":"48785:47:18"},{"nodeType":"YulAssignment","src":"48841:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"48975:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"48849:124:18"},"nodeType":"YulFunctionCall","src":"48849:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"48841:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"48719:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"48734:4:18","type":""}],"src":"48568:419:18"},{"body":{"nodeType":"YulBlock","src":"49099:76:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"49121:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"49129:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49117:3:18"},"nodeType":"YulFunctionCall","src":"49117:14:18"},{"hexValue":"4552433732313a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"49133:34:18","type":"","value":"ERC721: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49110:6:18"},"nodeType":"YulFunctionCall","src":"49110:58:18"},"nodeType":"YulExpressionStatement","src":"49110:58:18"}]},"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"49091:6:18","type":""}],"src":"48993:182:18"},{"body":{"nodeType":"YulBlock","src":"49327:220:18","statements":[{"nodeType":"YulAssignment","src":"49337:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49403:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"49408:2:18","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49344:58:18"},"nodeType":"YulFunctionCall","src":"49344:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"49337:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49509:3:18"}],"functionName":{"name":"store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6","nodeType":"YulIdentifier","src":"49420:88:18"},"nodeType":"YulFunctionCall","src":"49420:93:18"},"nodeType":"YulExpressionStatement","src":"49420:93:18"},{"nodeType":"YulAssignment","src":"49522:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"49533:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"49538:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49529:3:18"},"nodeType":"YulFunctionCall","src":"49529:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"49522:3:18"}]}]},"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"49315:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"49323:3:18","type":""}],"src":"49181:366:18"},{"body":{"nodeType":"YulBlock","src":"49724:248:18","statements":[{"nodeType":"YulAssignment","src":"49734:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49746:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"49757:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49742:3:18"},"nodeType":"YulFunctionCall","src":"49742:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49734:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"49781:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"49792:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"49777:3:18"},"nodeType":"YulFunctionCall","src":"49777:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49800:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"49806:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"49796:3:18"},"nodeType":"YulFunctionCall","src":"49796:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"49770:6:18"},"nodeType":"YulFunctionCall","src":"49770:47:18"},"nodeType":"YulExpressionStatement","src":"49770:47:18"},{"nodeType":"YulAssignment","src":"49826:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"49960:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"49834:124:18"},"nodeType":"YulFunctionCall","src":"49834:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"49826:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49704:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"49719:4:18","type":""}],"src":"49553:419:18"},{"body":{"nodeType":"YulBlock","src":"50084:72:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"50106:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"50114:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50102:3:18"},"nodeType":"YulFunctionCall","src":"50102:14:18"},{"hexValue":"4552433732313a20746f6b656e20616c7265616479206d696e746564","kind":"string","nodeType":"YulLiteral","src":"50118:30:18","type":"","value":"ERC721: token already minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50095:6:18"},"nodeType":"YulFunctionCall","src":"50095:54:18"},"nodeType":"YulExpressionStatement","src":"50095:54:18"}]},"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"50076:6:18","type":""}],"src":"49978:178:18"},{"body":{"nodeType":"YulBlock","src":"50308:220:18","statements":[{"nodeType":"YulAssignment","src":"50318:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50384:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"50389:2:18","type":"","value":"28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50325:58:18"},"nodeType":"YulFunctionCall","src":"50325:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"50318:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50490:3:18"}],"functionName":{"name":"store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57","nodeType":"YulIdentifier","src":"50401:88:18"},"nodeType":"YulFunctionCall","src":"50401:93:18"},"nodeType":"YulExpressionStatement","src":"50401:93:18"},{"nodeType":"YulAssignment","src":"50503:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"50514:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"50519:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50510:3:18"},"nodeType":"YulFunctionCall","src":"50510:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"50503:3:18"}]}]},"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"50296:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"50304:3:18","type":""}],"src":"50162:366:18"},{"body":{"nodeType":"YulBlock","src":"50705:248:18","statements":[{"nodeType":"YulAssignment","src":"50715:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50727:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"50738:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50723:3:18"},"nodeType":"YulFunctionCall","src":"50723:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50715:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"50762:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"50773:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"50758:3:18"},"nodeType":"YulFunctionCall","src":"50758:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50781:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"50787:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"50777:3:18"},"nodeType":"YulFunctionCall","src":"50777:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"50751:6:18"},"nodeType":"YulFunctionCall","src":"50751:47:18"},"nodeType":"YulExpressionStatement","src":"50751:47:18"},{"nodeType":"YulAssignment","src":"50807:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"50941:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"50815:124:18"},"nodeType":"YulFunctionCall","src":"50815:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"50807:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"50685:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"50700:4:18","type":""}],"src":"50534:419:18"},{"body":{"nodeType":"YulBlock","src":"51065:127:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51087:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"51095:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51083:3:18"},"nodeType":"YulFunctionCall","src":"51083:14:18"},{"hexValue":"45524337323155524953746f726167653a2055524920736574206f66206e6f6e","kind":"string","nodeType":"YulLiteral","src":"51099:34:18","type":"","value":"ERC721URIStorage: URI set of non"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51076:6:18"},"nodeType":"YulFunctionCall","src":"51076:58:18"},"nodeType":"YulExpressionStatement","src":"51076:58:18"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"51155:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"51163:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51151:3:18"},"nodeType":"YulFunctionCall","src":"51151:15:18"},{"hexValue":"6578697374656e7420746f6b656e","kind":"string","nodeType":"YulLiteral","src":"51168:16:18","type":"","value":"existent token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51144:6:18"},"nodeType":"YulFunctionCall","src":"51144:41:18"},"nodeType":"YulExpressionStatement","src":"51144:41:18"}]},"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"51057:6:18","type":""}],"src":"50959:233:18"},{"body":{"nodeType":"YulBlock","src":"51344:220:18","statements":[{"nodeType":"YulAssignment","src":"51354:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51420:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"51425:2:18","type":"","value":"46"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51361:58:18"},"nodeType":"YulFunctionCall","src":"51361:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"51354:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51526:3:18"}],"functionName":{"name":"store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4","nodeType":"YulIdentifier","src":"51437:88:18"},"nodeType":"YulFunctionCall","src":"51437:93:18"},"nodeType":"YulExpressionStatement","src":"51437:93:18"},{"nodeType":"YulAssignment","src":"51539:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"51550:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"51555:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51546:3:18"},"nodeType":"YulFunctionCall","src":"51546:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"51539:3:18"}]}]},"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"51332:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"51340:3:18","type":""}],"src":"51198:366:18"},{"body":{"nodeType":"YulBlock","src":"51741:248:18","statements":[{"nodeType":"YulAssignment","src":"51751:26:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51763:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"51774:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51759:3:18"},"nodeType":"YulFunctionCall","src":"51759:18:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51751:4:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"51798:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"51809:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"51794:3:18"},"nodeType":"YulFunctionCall","src":"51794:17:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51817:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"51823:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"51813:3:18"},"nodeType":"YulFunctionCall","src":"51813:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"51787:6:18"},"nodeType":"YulFunctionCall","src":"51787:47:18"},"nodeType":"YulExpressionStatement","src":"51787:47:18"},{"nodeType":"YulAssignment","src":"51843:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"51977:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"51851:124:18"},"nodeType":"YulFunctionCall","src":"51851:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"51843:4:18"}]}]},"name":"abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"51721:9:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"51736:4:18","type":""}],"src":"51570:419:18"},{"body":{"nodeType":"YulBlock","src":"52049:87:18","statements":[{"nodeType":"YulAssignment","src":"52059:11:18","value":{"name":"ptr","nodeType":"YulIdentifier","src":"52067:3:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52059:4:18"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52087:1:18","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"52090:3:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"52080:6:18"},"nodeType":"YulFunctionCall","src":"52080:14:18"},"nodeType":"YulExpressionStatement","src":"52080:14:18"},{"nodeType":"YulAssignment","src":"52103:26:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52121:1:18","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"52124:4:18","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"52111:9:18"},"nodeType":"YulFunctionCall","src":"52111:18:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"52103:4:18"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"52036:3:18","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"52044:4:18","type":""}],"src":"51995:141:18"},{"body":{"nodeType":"YulBlock","src":"52186:49:18","statements":[{"nodeType":"YulAssignment","src":"52196:33:18","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52214:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"52221:2:18","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"52210:3:18"},"nodeType":"YulFunctionCall","src":"52210:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"52226:2:18","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"52206:3:18"},"nodeType":"YulFunctionCall","src":"52206:23:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"52196:6:18"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52169:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"52179:6:18","type":""}],"src":"52142:93:18"},{"body":{"nodeType":"YulBlock","src":"52294:54:18","statements":[{"nodeType":"YulAssignment","src":"52304:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"52329:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"52335:5:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"52325:3:18"},"nodeType":"YulFunctionCall","src":"52325:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"52304:8:18"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"52269:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"52275:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"52285:8:18","type":""}],"src":"52241:107:18"},{"body":{"nodeType":"YulBlock","src":"52430:317:18","statements":[{"nodeType":"YulVariableDeclaration","src":"52440:35:18","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"52461:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"52473:1:18","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"52457:3:18"},"nodeType":"YulFunctionCall","src":"52457:18:18"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"52444:9:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"52484:109:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"52515:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"52526:66:18","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"52496:18:18"},"nodeType":"YulFunctionCall","src":"52496:97:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"52488:4:18","type":""}]},{"nodeType":"YulAssignment","src":"52602:51:18","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"52633:9:18"},{"name":"toInsert","nodeType":"YulIdentifier","src":"52644:8:18"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"52614:18:18"},"nodeType":"YulFunctionCall","src":"52614:39:18"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"52602:8:18"}]},{"nodeType":"YulAssignment","src":"52662:30:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52675:5:18"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"52686:4:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"52682:3:18"},"nodeType":"YulFunctionCall","src":"52682:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52671:3:18"},"nodeType":"YulFunctionCall","src":"52671:21:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"52662:5:18"}]},{"nodeType":"YulAssignment","src":"52701:40:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52714:5:18"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"52725:8:18"},{"name":"mask","nodeType":"YulIdentifier","src":"52735:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"52721:3:18"},"nodeType":"YulFunctionCall","src":"52721:19:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"52711:2:18"},"nodeType":"YulFunctionCall","src":"52711:30:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"52701:6:18"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52391:5:18","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"52398:10:18","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"52410:8:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"52423:6:18","type":""}],"src":"52354:393:18"},{"body":{"nodeType":"YulBlock","src":"52785:28:18","statements":[{"nodeType":"YulAssignment","src":"52795:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"52802:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"52795:3:18"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52771:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"52781:3:18","type":""}],"src":"52753:60:18"},{"body":{"nodeType":"YulBlock","src":"52879:82:18","statements":[{"nodeType":"YulAssignment","src":"52889:66:18","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"52947:5:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"52929:17:18"},"nodeType":"YulFunctionCall","src":"52929:24:18"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"52920:8:18"},"nodeType":"YulFunctionCall","src":"52920:34:18"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"52902:17:18"},"nodeType":"YulFunctionCall","src":"52902:53:18"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"52889:9:18"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"52859:5:18","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"52869:9:18","type":""}],"src":"52819:142:18"},{"body":{"nodeType":"YulBlock","src":"53014:28:18","statements":[{"nodeType":"YulAssignment","src":"53024:12:18","value":{"name":"value","nodeType":"YulIdentifier","src":"53031:5:18"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"53024:3:18"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"53000:5:18","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"53010:3:18","type":""}],"src":"52967:75:18"},{"body":{"nodeType":"YulBlock","src":"53124:193:18","statements":[{"nodeType":"YulVariableDeclaration","src":"53134:63:18","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"53189:7:18"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"53158:30:18"},"nodeType":"YulFunctionCall","src":"53158:39:18"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"53138:16:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"53213:4:18"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"53253:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"53247:5:18"},"nodeType":"YulFunctionCall","src":"53247:11:18"},{"name":"offset","nodeType":"YulIdentifier","src":"53260:6:18"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"53292:16:18"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"53268:23:18"},"nodeType":"YulFunctionCall","src":"53268:41:18"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"53219:27:18"},"nodeType":"YulFunctionCall","src":"53219:91:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"53206:6:18"},"nodeType":"YulFunctionCall","src":"53206:105:18"},"nodeType":"YulExpressionStatement","src":"53206:105:18"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"53101:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"53107:6:18","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"53115:7:18","type":""}],"src":"53048:269:18"},{"body":{"nodeType":"YulBlock","src":"53372:24:18","statements":[{"nodeType":"YulAssignment","src":"53382:8:18","value":{"kind":"number","nodeType":"YulLiteral","src":"53389:1:18","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"53382:3:18"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"53368:3:18","type":""}],"src":"53323:73:18"},{"body":{"nodeType":"YulBlock","src":"53455:136:18","statements":[{"nodeType":"YulVariableDeclaration","src":"53465:46:18","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"53479:30:18"},"nodeType":"YulFunctionCall","src":"53479:32:18"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"53469:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"53564:4:18"},{"name":"offset","nodeType":"YulIdentifier","src":"53570:6:18"},{"name":"zero_0","nodeType":"YulIdentifier","src":"53578:6:18"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"53520:43:18"},"nodeType":"YulFunctionCall","src":"53520:65:18"},"nodeType":"YulExpressionStatement","src":"53520:65:18"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"53441:4:18","type":""},{"name":"offset","nodeType":"YulTypedName","src":"53447:6:18","type":""}],"src":"53402:189:18"},{"body":{"nodeType":"YulBlock","src":"53647:136:18","statements":[{"body":{"nodeType":"YulBlock","src":"53714:63:18","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"53758:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"53765:1:18","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"53728:29:18"},"nodeType":"YulFunctionCall","src":"53728:39:18"},"nodeType":"YulExpressionStatement","src":"53728:39:18"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"53667:5:18"},{"name":"end","nodeType":"YulIdentifier","src":"53674:3:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"53664:2:18"},"nodeType":"YulFunctionCall","src":"53664:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"53679:26:18","statements":[{"nodeType":"YulAssignment","src":"53681:22:18","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"53694:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"53701:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53690:3:18"},"nodeType":"YulFunctionCall","src":"53690:13:18"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"53681:5:18"}]}]},"pre":{"nodeType":"YulBlock","src":"53661:2:18","statements":[]},"src":"53657:120:18"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"53635:5:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"53642:3:18","type":""}],"src":"53597:186:18"},{"body":{"nodeType":"YulBlock","src":"53868:464:18","statements":[{"body":{"nodeType":"YulBlock","src":"53894:431:18","statements":[{"nodeType":"YulVariableDeclaration","src":"53908:54:18","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"53956:5:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"53924:31:18"},"nodeType":"YulFunctionCall","src":"53924:38:18"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"53912:8:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"53975:63:18","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"53998:8:18"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"54026:10:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"54008:17:18"},"nodeType":"YulFunctionCall","src":"54008:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"53994:3:18"},"nodeType":"YulFunctionCall","src":"53994:44:18"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"53979:11:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"54195:27:18","statements":[{"nodeType":"YulAssignment","src":"54197:23:18","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"54212:8:18"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"54197:11:18"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"54179:10:18"},{"kind":"number","nodeType":"YulLiteral","src":"54191:2:18","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"54176:2:18"},"nodeType":"YulFunctionCall","src":"54176:18:18"},"nodeType":"YulIf","src":"54173:49:18"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"54264:11:18"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"54281:8:18"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"54309:3:18"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"54291:17:18"},"nodeType":"YulFunctionCall","src":"54291:22:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"54277:3:18"},"nodeType":"YulFunctionCall","src":"54277:37:18"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"54235:28:18"},"nodeType":"YulFunctionCall","src":"54235:80:18"},"nodeType":"YulExpressionStatement","src":"54235:80:18"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"53885:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"53890:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"53882:2:18"},"nodeType":"YulFunctionCall","src":"53882:11:18"},"nodeType":"YulIf","src":"53879:446:18"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"53844:5:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"53851:3:18","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"53856:10:18","type":""}],"src":"53789:543:18"},{"body":{"nodeType":"YulBlock","src":"54401:54:18","statements":[{"nodeType":"YulAssignment","src":"54411:37:18","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"54436:4:18"},{"name":"value","nodeType":"YulIdentifier","src":"54442:5:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"54432:3:18"},"nodeType":"YulFunctionCall","src":"54432:16:18"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"54411:8:18"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"54376:4:18","type":""},{"name":"value","nodeType":"YulTypedName","src":"54382:5:18","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"54392:8:18","type":""}],"src":"54338:117:18"},{"body":{"nodeType":"YulBlock","src":"54512:118:18","statements":[{"nodeType":"YulVariableDeclaration","src":"54522:68:18","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54571:1:18","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"54574:5:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"54567:3:18"},"nodeType":"YulFunctionCall","src":"54567:13:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54586:1:18","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"54582:3:18"},"nodeType":"YulFunctionCall","src":"54582:6:18"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"54538:28:18"},"nodeType":"YulFunctionCall","src":"54538:51:18"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"54534:3:18"},"nodeType":"YulFunctionCall","src":"54534:56:18"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"54526:4:18","type":""}]},{"nodeType":"YulAssignment","src":"54599:25:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"54613:4:18"},{"name":"mask","nodeType":"YulIdentifier","src":"54619:4:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"54609:3:18"},"nodeType":"YulFunctionCall","src":"54609:15:18"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"54599:6:18"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"54489:4:18","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"54495:5:18","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"54505:6:18","type":""}],"src":"54461:169:18"},{"body":{"nodeType":"YulBlock","src":"54716:214:18","statements":[{"nodeType":"YulAssignment","src":"54849:37:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"54876:4:18"},{"name":"len","nodeType":"YulIdentifier","src":"54882:3:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"54857:18:18"},"nodeType":"YulFunctionCall","src":"54857:29:18"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"54849:4:18"}]},{"nodeType":"YulAssignment","src":"54895:29:18","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"54906:4:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"54916:1:18","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"54919:3:18"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"54912:3:18"},"nodeType":"YulFunctionCall","src":"54912:11:18"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"54903:2:18"},"nodeType":"YulFunctionCall","src":"54903:21:18"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"54895:4:18"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"54697:4:18","type":""},{"name":"len","nodeType":"YulTypedName","src":"54703:3:18","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"54711:4:18","type":""}],"src":"54635:295:18"},{"body":{"nodeType":"YulBlock","src":"55027:1303:18","statements":[{"nodeType":"YulVariableDeclaration","src":"55038:51:18","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"55085:3:18"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"55052:32:18"},"nodeType":"YulFunctionCall","src":"55052:37:18"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"55042:6:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"55174:22:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"55176:16:18"},"nodeType":"YulFunctionCall","src":"55176:18:18"},"nodeType":"YulExpressionStatement","src":"55176:18:18"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"55146:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"55154:18:18","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"55143:2:18"},"nodeType":"YulFunctionCall","src":"55143:30:18"},"nodeType":"YulIf","src":"55140:56:18"},{"nodeType":"YulVariableDeclaration","src":"55206:52:18","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"55252:4:18"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"55246:5:18"},"nodeType":"YulFunctionCall","src":"55246:11:18"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"55220:25:18"},"nodeType":"YulFunctionCall","src":"55220:38:18"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"55210:6:18","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"55351:4:18"},{"name":"oldLen","nodeType":"YulIdentifier","src":"55357:6:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"55365:6:18"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"55305:45:18"},"nodeType":"YulFunctionCall","src":"55305:67:18"},"nodeType":"YulExpressionStatement","src":"55305:67:18"},{"nodeType":"YulVariableDeclaration","src":"55382:18:18","value":{"kind":"number","nodeType":"YulLiteral","src":"55399:1:18","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"55386:9:18","type":""}]},{"nodeType":"YulAssignment","src":"55410:17:18","value":{"kind":"number","nodeType":"YulLiteral","src":"55423:4:18","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"55410:9:18"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"55474:611:18","statements":[{"nodeType":"YulVariableDeclaration","src":"55488:37:18","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"55507:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"55519:4:18","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"55515:3:18"},"nodeType":"YulFunctionCall","src":"55515:9:18"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"55503:3:18"},"nodeType":"YulFunctionCall","src":"55503:22:18"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"55492:7:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"55539:51:18","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"55585:4:18"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"55553:31:18"},"nodeType":"YulFunctionCall","src":"55553:37:18"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"55543:6:18","type":""}]},{"nodeType":"YulVariableDeclaration","src":"55603:10:18","value":{"kind":"number","nodeType":"YulLiteral","src":"55612:1:18","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"55607:1:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"55671:163:18","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"55696:6:18"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"55714:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"55719:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55710:3:18"},"nodeType":"YulFunctionCall","src":"55710:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55704:5:18"},"nodeType":"YulFunctionCall","src":"55704:26:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"55689:6:18"},"nodeType":"YulFunctionCall","src":"55689:42:18"},"nodeType":"YulExpressionStatement","src":"55689:42:18"},{"nodeType":"YulAssignment","src":"55748:24:18","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"55762:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"55770:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55758:3:18"},"nodeType":"YulFunctionCall","src":"55758:14:18"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"55748:6:18"}]},{"nodeType":"YulAssignment","src":"55789:31:18","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"55806:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"55817:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55802:3:18"},"nodeType":"YulFunctionCall","src":"55802:18:18"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"55789:9:18"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"55637:1:18"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"55640:7:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"55634:2:18"},"nodeType":"YulFunctionCall","src":"55634:14:18"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"55649:21:18","statements":[{"nodeType":"YulAssignment","src":"55651:17:18","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"55660:1:18"},{"kind":"number","nodeType":"YulLiteral","src":"55663:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55656:3:18"},"nodeType":"YulFunctionCall","src":"55656:12:18"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"55651:1:18"}]}]},"pre":{"nodeType":"YulBlock","src":"55630:3:18","statements":[]},"src":"55626:208:18"},{"body":{"nodeType":"YulBlock","src":"55870:156:18","statements":[{"nodeType":"YulVariableDeclaration","src":"55888:43:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"55915:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"55920:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"55911:3:18"},"nodeType":"YulFunctionCall","src":"55911:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"55905:5:18"},"nodeType":"YulFunctionCall","src":"55905:26:18"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"55892:9:18","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"55955:6:18"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"55982:9:18"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"55997:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"56005:4:18","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"55993:3:18"},"nodeType":"YulFunctionCall","src":"55993:17:18"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"55963:18:18"},"nodeType":"YulFunctionCall","src":"55963:48:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"55948:6:18"},"nodeType":"YulFunctionCall","src":"55948:64:18"},"nodeType":"YulExpressionStatement","src":"55948:64:18"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"55853:7:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"55862:6:18"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"55850:2:18"},"nodeType":"YulFunctionCall","src":"55850:19:18"},"nodeType":"YulIf","src":"55847:179:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56046:4:18"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"56060:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"56068:1:18","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"56056:3:18"},"nodeType":"YulFunctionCall","src":"56056:14:18"},{"kind":"number","nodeType":"YulLiteral","src":"56072:1:18","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56052:3:18"},"nodeType":"YulFunctionCall","src":"56052:22:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"56039:6:18"},"nodeType":"YulFunctionCall","src":"56039:36:18"},"nodeType":"YulExpressionStatement","src":"56039:36:18"}]},"nodeType":"YulCase","src":"55467:618:18","value":{"kind":"number","nodeType":"YulLiteral","src":"55472:1:18","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"56102:222:18","statements":[{"nodeType":"YulVariableDeclaration","src":"56116:14:18","value":{"kind":"number","nodeType":"YulLiteral","src":"56129:1:18","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"56120:5:18","type":""}]},{"body":{"nodeType":"YulBlock","src":"56153:67:18","statements":[{"nodeType":"YulAssignment","src":"56171:35:18","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"56190:3:18"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"56195:9:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56186:3:18"},"nodeType":"YulFunctionCall","src":"56186:19:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"56180:5:18"},"nodeType":"YulFunctionCall","src":"56180:26:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"56171:5:18"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"56146:6:18"},"nodeType":"YulIf","src":"56143:77:18"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"56240:4:18"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"56299:5:18"},{"name":"newLen","nodeType":"YulIdentifier","src":"56306:6:18"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"56246:52:18"},"nodeType":"YulFunctionCall","src":"56246:67:18"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"56233:6:18"},"nodeType":"YulFunctionCall","src":"56233:81:18"},"nodeType":"YulExpressionStatement","src":"56233:81:18"}]},"nodeType":"YulCase","src":"56094:230:18","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"55447:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"55455:2:18","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"55444:2:18"},"nodeType":"YulFunctionCall","src":"55444:14:18"},"nodeType":"YulSwitch","src":"55437:887:18"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"55016:4:18","type":""},{"name":"src","nodeType":"YulTypedName","src":"55022:3:18","type":""}],"src":"54935:1395:18"},{"body":{"nodeType":"YulBlock","src":"56442:67:18","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"56464:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"56472:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56460:3:18"},"nodeType":"YulFunctionCall","src":"56460:14:18"},{"hexValue":"4e46542063726561746564207375636365737366756c79","kind":"string","nodeType":"YulLiteral","src":"56476:25:18","type":"","value":"NFT created successfuly"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56453:6:18"},"nodeType":"YulFunctionCall","src":"56453:49:18"},"nodeType":"YulExpressionStatement","src":"56453:49:18"}]},"name":"store_literal_in_memory_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"56434:6:18","type":""}],"src":"56336:173:18"},{"body":{"nodeType":"YulBlock","src":"56661:220:18","statements":[{"nodeType":"YulAssignment","src":"56671:74:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56737:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"56742:2:18","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"56678:58:18"},"nodeType":"YulFunctionCall","src":"56678:67:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"56671:3:18"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56843:3:18"}],"functionName":{"name":"store_literal_in_memory_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4","nodeType":"YulIdentifier","src":"56754:88:18"},"nodeType":"YulFunctionCall","src":"56754:93:18"},"nodeType":"YulExpressionStatement","src":"56754:93:18"},{"nodeType":"YulAssignment","src":"56856:19:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"56867:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"56872:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"56863:3:18"},"nodeType":"YulFunctionCall","src":"56863:12:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"56856:3:18"}]}]},"name":"abi_encode_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"56649:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"56657:3:18","type":""}],"src":"56515:366:18"},{"body":{"nodeType":"YulBlock","src":"57192:655:18","statements":[{"nodeType":"YulAssignment","src":"57202:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57214:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57225:3:18","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57210:3:18"},"nodeType":"YulFunctionCall","src":"57210:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57202:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"57283:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57296:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57307:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57292:3:18"},"nodeType":"YulFunctionCall","src":"57292:17:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57239:43:18"},"nodeType":"YulFunctionCall","src":"57239:71:18"},"nodeType":"YulExpressionStatement","src":"57239:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"57364:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57377:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57388:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57373:3:18"},"nodeType":"YulFunctionCall","src":"57373:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"57320:43:18"},"nodeType":"YulFunctionCall","src":"57320:72:18"},"nodeType":"YulExpressionStatement","src":"57320:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"57446:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57459:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57470:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57455:3:18"},"nodeType":"YulFunctionCall","src":"57455:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"57402:43:18"},"nodeType":"YulFunctionCall","src":"57402:72:18"},"nodeType":"YulExpressionStatement","src":"57402:72:18"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"57528:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57541:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57552:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57537:3:18"},"nodeType":"YulFunctionCall","src":"57537:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"57484:43:18"},"nodeType":"YulFunctionCall","src":"57484:72:18"},"nodeType":"YulExpressionStatement","src":"57484:72:18"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"57604:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57617:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57628:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57613:3:18"},"nodeType":"YulFunctionCall","src":"57613:19:18"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"57566:37:18"},"nodeType":"YulFunctionCall","src":"57566:67:18"},"nodeType":"YulExpressionStatement","src":"57566:67:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"57654:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"57665:3:18","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"57650:3:18"},"nodeType":"YulFunctionCall","src":"57650:19:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57675:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"57681:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"57671:3:18"},"nodeType":"YulFunctionCall","src":"57671:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"57643:6:18"},"nodeType":"YulFunctionCall","src":"57643:49:18"},"nodeType":"YulExpressionStatement","src":"57643:49:18"},{"nodeType":"YulAssignment","src":"57701:139:18","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"57835:4:18"}],"functionName":{"name":"abi_encode_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"57709:124:18"},"nodeType":"YulFunctionCall","src":"57709:131:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"57701:4:18"}]}]},"name":"abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4__to_t_uint256_t_address_t_address_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"57132:9:18","type":""},{"name":"value4","nodeType":"YulTypedName","src":"57144:6:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"57152:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"57160:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"57168:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"57176:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"57187:4:18","type":""}],"src":"56887:960:18"},{"body":{"nodeType":"YulBlock","src":"57911:40:18","statements":[{"nodeType":"YulAssignment","src":"57922:22:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"57938:5:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"57932:5:18"},"nodeType":"YulFunctionCall","src":"57932:12:18"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"57922:6:18"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"57894:5:18","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"57904:6:18","type":""}],"src":"57853:98:18"},{"body":{"nodeType":"YulBlock","src":"58052:73:18","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58069:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"58074:6:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"58062:6:18"},"nodeType":"YulFunctionCall","src":"58062:19:18"},"nodeType":"YulExpressionStatement","src":"58062:19:18"},{"nodeType":"YulAssignment","src":"58090:29:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58109:3:18"},{"kind":"number","nodeType":"YulLiteral","src":"58114:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58105:3:18"},"nodeType":"YulFunctionCall","src":"58105:14:18"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"58090:11:18"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"58024:3:18","type":""},{"name":"length","nodeType":"YulTypedName","src":"58029:6:18","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"58040:11:18","type":""}],"src":"57957:168:18"},{"body":{"nodeType":"YulBlock","src":"58221:283:18","statements":[{"nodeType":"YulVariableDeclaration","src":"58231:52:18","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58277:5:18"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"58245:31:18"},"nodeType":"YulFunctionCall","src":"58245:38:18"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"58235:6:18","type":""}]},{"nodeType":"YulAssignment","src":"58292:77:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58357:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"58362:6:18"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"58299:57:18"},"nodeType":"YulFunctionCall","src":"58299:70:18"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"58292:3:18"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"58417:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"58424:4:18","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58413:3:18"},"nodeType":"YulFunctionCall","src":"58413:16:18"},{"name":"pos","nodeType":"YulIdentifier","src":"58431:3:18"},{"name":"length","nodeType":"YulIdentifier","src":"58436:6:18"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"58378:34:18"},"nodeType":"YulFunctionCall","src":"58378:65:18"},"nodeType":"YulExpressionStatement","src":"58378:65:18"},{"nodeType":"YulAssignment","src":"58452:46:18","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"58463:3:18"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"58490:6:18"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"58468:21:18"},"nodeType":"YulFunctionCall","src":"58468:29:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58459:3:18"},"nodeType":"YulFunctionCall","src":"58459:39:18"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"58452:3:18"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"58202:5:18","type":""},{"name":"pos","nodeType":"YulTypedName","src":"58209:3:18","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"58217:3:18","type":""}],"src":"58131:373:18"},{"body":{"nodeType":"YulBlock","src":"58710:440:18","statements":[{"nodeType":"YulAssignment","src":"58720:27:18","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58732:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"58743:3:18","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58728:3:18"},"nodeType":"YulFunctionCall","src":"58728:19:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"58720:4:18"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"58801:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58814:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"58825:1:18","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58810:3:18"},"nodeType":"YulFunctionCall","src":"58810:17:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58757:43:18"},"nodeType":"YulFunctionCall","src":"58757:71:18"},"nodeType":"YulExpressionStatement","src":"58757:71:18"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"58882:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58895:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"58906:2:18","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58891:3:18"},"nodeType":"YulFunctionCall","src":"58891:18:18"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"58838:43:18"},"nodeType":"YulFunctionCall","src":"58838:72:18"},"nodeType":"YulExpressionStatement","src":"58838:72:18"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"58964:6:18"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"58977:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"58988:2:18","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"58973:3:18"},"nodeType":"YulFunctionCall","src":"58973:18:18"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"58920:43:18"},"nodeType":"YulFunctionCall","src":"58920:72:18"},"nodeType":"YulExpressionStatement","src":"58920:72:18"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59013:9:18"},{"kind":"number","nodeType":"YulLiteral","src":"59024:2:18","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59009:3:18"},"nodeType":"YulFunctionCall","src":"59009:18:18"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"59033:4:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"59039:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59029:3:18"},"nodeType":"YulFunctionCall","src":"59029:20:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"59002:6:18"},"nodeType":"YulFunctionCall","src":"59002:48:18"},"nodeType":"YulExpressionStatement","src":"59002:48:18"},{"nodeType":"YulAssignment","src":"59059:84:18","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"59129:6:18"},{"name":"tail","nodeType":"YulIdentifier","src":"59138:4:18"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"59067:61:18"},"nodeType":"YulFunctionCall","src":"59067:76:18"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"59059:4:18"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"58658:9:18","type":""},{"name":"value3","nodeType":"YulTypedName","src":"58670:6:18","type":""},{"name":"value2","nodeType":"YulTypedName","src":"58678:6:18","type":""},{"name":"value1","nodeType":"YulTypedName","src":"58686:6:18","type":""},{"name":"value0","nodeType":"YulTypedName","src":"58694:6:18","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"58705:4:18","type":""}],"src":"58510:640:18"},{"body":{"nodeType":"YulBlock","src":"59218:79:18","statements":[{"nodeType":"YulAssignment","src":"59228:22:18","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"59243:6:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"59237:5:18"},"nodeType":"YulFunctionCall","src":"59237:13:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"59228:5:18"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"59285:5:18"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"59259:25:18"},"nodeType":"YulFunctionCall","src":"59259:32:18"},"nodeType":"YulExpressionStatement","src":"59259:32:18"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"59196:6:18","type":""},{"name":"end","nodeType":"YulTypedName","src":"59204:3:18","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"59212:5:18","type":""}],"src":"59156:141:18"},{"body":{"nodeType":"YulBlock","src":"59379:273:18","statements":[{"body":{"nodeType":"YulBlock","src":"59425:83:18","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"59427:77:18"},"nodeType":"YulFunctionCall","src":"59427:79:18"},"nodeType":"YulExpressionStatement","src":"59427:79:18"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"59400:7:18"},{"name":"headStart","nodeType":"YulIdentifier","src":"59409:9:18"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"59396:3:18"},"nodeType":"YulFunctionCall","src":"59396:23:18"},{"kind":"number","nodeType":"YulLiteral","src":"59421:2:18","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"59392:3:18"},"nodeType":"YulFunctionCall","src":"59392:32:18"},"nodeType":"YulIf","src":"59389:119:18"},{"nodeType":"YulBlock","src":"59518:127:18","statements":[{"nodeType":"YulVariableDeclaration","src":"59533:15:18","value":{"kind":"number","nodeType":"YulLiteral","src":"59547:1:18","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"59537:6:18","type":""}]},{"nodeType":"YulAssignment","src":"59562:73:18","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"59607:9:18"},{"name":"offset","nodeType":"YulIdentifier","src":"59618:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"59603:3:18"},"nodeType":"YulFunctionCall","src":"59603:22:18"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"59627:7:18"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"59572:30:18"},"nodeType":"YulFunctionCall","src":"59572:63:18"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"59562:6:18"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"59349:9:18","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"59360:7:18","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"59372:6:18","type":""}],"src":"59303:349:18"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct RSKNFT.NFT -> struct RSKNFT.NFT\n    function abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // sold\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_NFT_$3060_memory_ptr__to_t_struct$_NFT_$3060_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct RSKNFT.NFT -> struct RSKNFT.NFT\n    function abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // seller\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // sold\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct RSKNFT.NFT[] -> struct RSKNFT.NFT[]\n    function abi_encode_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_NFT_$3060_memory_ptr_to_t_struct$_NFT_$3060_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_NFT_$3060_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__to_t_address_t_address_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint8__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353(memPtr) {\n\n        mstore(add(memPtr, 0), \"auction is still open\")\n\n    }\n\n    function abi_encode_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da15df0495681aa13ee66d8335f37d6a2aeebbc18f421ecd2c02a87eed2ea353_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a(memPtr) {\n\n        mstore(add(memPtr, 0), \"only seller or winner can comple\")\n\n        mstore(add(memPtr, 32), \"te auction\")\n\n    }\n\n    function abi_encode_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9734b27f04d1472a71f8e057678975b094f427a46cd641fba338fe7262217d7a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction completed successfully\")\n\n    }\n\n    function abi_encode_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c29cd60be2bd8d6f5a3b69185f8dc115b639e11746bd1cedb633685de9c9016f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef(memPtr) {\n\n        mstore(add(memPtr, 0), \"auction has ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45ca11ce097d9137e33bbc79cc7be2bbd356b7d2acc700c879718b8547a9deef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot bid on what you own\")\n\n    }\n\n    function abi_encode_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e0220acfd718f6aeb409a36e8b63893f818720cd21d5f2e0b5178878707bbd2e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10(memPtr) {\n\n        mstore(add(memPtr, 0), \"cannot bid below the latest bidd\")\n\n        mstore(add(memPtr, 32), \"ing price\")\n\n    }\n\n    function abi_encode_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8087d73b4cdbb3c96fc585aaadb3c99504958b48163ea125900ad9edd679ec10_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Bid created successfully\")\n\n    }\n\n    function abi_encode_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_19392579974b8c9f71649b03e8e45cd074fb47d57a7064747210a2718d28a1d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auction created successfully\")\n\n    }\n\n    function abi_encode_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_afc957108fac91ebc08fffd5ca69d1d763e2c4cfd2d40a444a51fbe7a13afb7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970(memPtr) {\n\n        mstore(add(memPtr, 0), \"incorrect amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b70721f76d3541a69ad6b0e17a3461e0bdcdc49eb17576f0ad143fe284225970_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(memPtr) {\n\n    }\n\n    function abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, 0)\n        store_literal_in_memory_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470(pos)\n        end := add(pos, 0)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos ) -> end {\n\n        pos := abi_encode_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b(memPtr) {\n\n        mstore(add(memPtr, 0), \"payment failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6e84cb5e4d0821250663551de1687e9f522f5750d02d062f34c30b7148f7275b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sold NFT successfully\")\n\n    }\n\n    function abi_encode_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580__to_t_uint256_t_address_t_address_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07d79a04dc98b5ef3025415b42519e76cfc2cb8f1d1143eac1b6763757e8c580_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error, cannot transfer to addres\")\n\n        mstore(add(memPtr, 32), \"s(0)\")\n\n    }\n\n    function abi_encode_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_516e2a02a2f2741c7b305ddf8230fcd9c996c8ee0ff1141fb1de92d11149cf59_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Error, failed to send Ether\")\n\n    }\n\n    function abi_encode_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e85d53262326ac5d59fdca34cc4b8ff4e655adca6e9f4c62b4568751fa5e5cb1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: token already minted\")\n\n    }\n\n    function abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721URIStorage: URI set of non\")\n\n        mstore(add(memPtr, 32), \"existent token\")\n\n    }\n\n    function abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 46)\n        store_literal_in_memory_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7521de1f20ce4d7bb86b61090bad73a87315a1f4baff36cc352901c7777280c4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function store_literal_in_memory_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4(memPtr) {\n\n        mstore(add(memPtr, 0), \"NFT created successfuly\")\n\n    }\n\n    function abi_encode_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_address_t_uint256_t_bool_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4__to_t_uint256_t_address_t_address_t_uint256_t_bool_t_string_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        mstore(add(headStart, 160), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b61ae11e59cc7c1dfa0456ce49b08a1ddb2603f1fbf33f81c70438bc542117d4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":18,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106101cd5760003560e01c80634c22f381116100f7578063b88d4fde11610095578063de74e57b11610064578063de74e57b146106f2578063e985e9c514610736578063ee9cdfb314610773578063f2b8aa6f1461078f576101cd565b8063b88d4fde14610612578063bbb52fff1461063b578063c046372c14610678578063c87b56dd146106b5576101cd565b806370a08231116100d157806370a08231146105445780637bf0989a1461058157806395d89b41146105be578063a22cb465146105e9576101cd565b80634c22f3811461049f5780636352211e146104dc578063708d4d3514610519576101cd565b806315bfa6121161016f5780633f1ffcec1161013e5780633f1ffcec146103e057806342842e0e1461041d578063451df52e14610446578063454a2ab314610483576101cd565b806315bfa6121461034557806321b6288614610370578063236d47251461038c57806323b872dd146103b7576101cd565b806306fdde03116101ab57806306fdde0314610277578063081812fc146102a2578063095ea7b3146102df5780630ad4862814610308576101cd565b806301ffc9a7146101d2578063043a2df41461020f578063051d2b6b1461024c575b600080fd5b3480156101de57600080fd5b506101f960048036038101906101f49190613449565b6107ba565b6040516102069190613491565b60405180910390f35b34801561021b57600080fd5b50610236600480360381019061023191906134e2565b61081b565b60405161024391906135d6565b60405180910390f35b34801561025857600080fd5b50610261610923565b60405161026e9190613708565b60405180910390f35b34801561028357600080fd5b5061028c610be4565b60405161029991906137ba565b60405180910390f35b3480156102ae57600080fd5b506102c960048036038101906102c491906134e2565b610c76565b6040516102d691906137eb565b60405180910390f35b3480156102eb57600080fd5b5061030660048036038101906103019190613832565b610cbc565b005b34801561031457600080fd5b5061032f600480360381019061032a91906134e2565b610dd3565b60405161033c9190613491565b60405180910390f35b34801561035157600080fd5b5061035a610e2a565b604051610367919061388e565b60405180910390f35b61038a600480360381019061038591906134e2565b610e2f565b005b34801561039857600080fd5b506103a16111f3565b6040516103ae919061388e565b60405180910390f35b3480156103c357600080fd5b506103de60048036038101906103d991906138a9565b6111f8565b005b3480156103ec57600080fd5b50610407600480360381019061040291906138fc565b611258565b604051610414919061394b565b60405180910390f35b34801561042957600080fd5b50610444600480360381019061043f91906138a9565b61127d565b005b34801561045257600080fd5b5061046d600480360381019061046891906134e2565b61129d565b60405161047a91906137eb565b60405180910390f35b61049d600480360381019061049891906134e2565b6112d0565b005b3480156104ab57600080fd5b506104c660048036038101906104c19190613966565b6115b5565b6040516104d3919061394b565b60405180910390f35b3480156104e857600080fd5b5061050360048036038101906104fe91906134e2565b6117ae565b60405161051091906137eb565b60405180910390f35b34801561052557600080fd5b5061052e611834565b60405161053b919061394b565b60405180910390f35b34801561055057600080fd5b5061056b600480360381019061056691906139b9565b61183a565b604051610578919061394b565b60405180910390f35b34801561058d57600080fd5b506105a860048036038101906105a391906134e2565b6118f1565b6040516105b5919061394b565b60405180910390f35b3480156105ca57600080fd5b506105d3611911565b6040516105e091906137ba565b60405180910390f35b3480156105f557600080fd5b50610610600480360381019061060b9190613a12565b6119a3565b005b34801561061e57600080fd5b5061063960048036038101906106349190613b87565b6119b9565b005b34801561064757600080fd5b50610662600480360381019061065d9190613cab565b611a1b565b60405161066f919061394b565b60405180910390f35b34801561068457600080fd5b5061069f600480360381019061069a9190613d1a565b611a60565b6040516106ac919061394b565b60405180910390f35b3480156106c157600080fd5b506106dc60048036038101906106d791906134e2565b611aa2565b6040516106e991906137ba565b60405180910390f35b3480156106fe57600080fd5b50610719600480360381019061071491906134e2565b611bb4565b60405161072d989796959493929190613d76565b60405180910390f35b34801561074257600080fd5b5061075d60048036038101906107589190613df4565b611c49565b60405161076a9190613491565b60405180910390f35b61078d600480360381019061078891906134e2565b611cdd565b005b34801561079b57600080fd5b506107a4611f57565b6040516107b19190613708565b60405180910390f35b6000634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061081457506108138261210a565b5b9050919050565b610823613380565b600c60008381526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016004820154815250509050919050565b6060600061093160086121ec565b9050600080600190505b8281116109cd573373ffffffffffffffffffffffffffffffffffffffff16600c600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036109ba5781806109b690613e63565b9250505b80806109c590613e63565b91505061093b565b5060008167ffffffffffffffff8111156109ea576109e9613a5c565b5b604051908082528060200260200182016040528015610a2357816020015b610a10613380565b815260200190600190039081610a085790505b509050600091506000600190505b838111610bda573373ffffffffffffffffffffffffffffffffffffffff16600c600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610bc757600c60008281526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff16151515158152602001600482015481525050828481518110610bad57610bac613eab565b5b60200260200101819052508280610bc390613e63565b9350505b8080610bd290613e63565b915050610a31565b5080935050505090565b606060008054610bf390613f09565b80601f0160208091040260200160405190810160405280929190818152602001828054610c1f90613f09565b8015610c6c5780601f10610c4157610100808354040283529160200191610c6c565b820191906000526020600020905b815481529060010190602001808311610c4f57829003601f168201915b5050505050905090565b6000610c81826121fa565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610cc7826117ae565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d2e90613fac565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610d56612245565b73ffffffffffffffffffffffffffffffffffffffff161480610d855750610d8481610d7f612245565b611c49565b5b610dc4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbb9061403e565b60405180910390fd5b610dce838361224d565b505050565b6000600160ff16600d600084815260200190815260200160002060070160009054906101000a900460ff1660ff16148015610e23575042600d600084815260200190815260200160002060060154115b9050919050565b600281565b610e37612306565b610e4081610dd3565b15610e80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e77906140aa565b60405180910390fd5b6000600d600083815260200190815260200160002090506000600f600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610f5857508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b610f97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8e9061413c565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146110b957610fda30828460020154612355565b6000600e600085815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490506000600e600086815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110b38360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168261264e565b506110ed565b6110ec308360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168460020154612355565b5b60028260070160006101000a81548160ff021916908360ff1602179055508073ffffffffffffffffffffffffffffffffffffffff168260000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f7e7751e116c86dcb924f03557ed09ee35423dfcfd5cb5c84da25efb40bbc291e85600e600088815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040516111de9291906141a8565b60405180910390a350506111f0612778565b50565b600181565b611209611203612245565b82612782565b611248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123f90614256565b60405180910390fd5b611253838383612355565b505050565b600e602052816000526040600020602052806000526040600020600091509150505481565b611298838383604051806020016040528060008152506119b9565b505050565b600f6020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6112d8612306565b6112e181610dd3565b611320576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611317906142c2565b60405180910390fd5b6000600d600083815260200190815260200160002090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16036113c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113c09061432e565b60405180910390fd5b600034600e600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054611427919061434e565b90508160030154811015611470576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611467906143f4565b60405180910390fd5b34600e600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546114d0919061434e565b9250508190555033600f600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a54836003015461153d9190614443565b905080836003015461154f919061434e565b83600301819055503373ffffffffffffffffffffffffffffffffffffffff167f793c2bc8ccf2234e5e1cbd74248a00015d32ccc7c062247f5120abdbb911e80b858460405161159f9291906144c0565b60405180910390a25050506115b2612778565b50565b6000806115c260086121ec565b905060008190506000429050600085826115dc919061434e565b90506040518061010001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff168152602001888152602001898152602001898152602001838152602001828152602001600160ff16815250600d600085815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a0820151816005015560c0820151816006015560e08201518160070160006101000a81548160ff021916908360ff16021790555090505061174a333089612355565b3373ffffffffffffffffffffffffffffffffffffffff167fe3b4d5ceeb9bd4281ba3f05bf499516adb0de51dd1bbfc4516efbdb369ab7305848a8a8686604051611798959493929190614548565b60405180910390a2829450505050509392505050565b6000806117ba83612817565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361182b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611822906145fa565b60405180910390fd5b80915050919050565b600a5481565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118a19061468c565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600c6000838152602001908152602001600020600201549050919050565b60606001805461192090613f09565b80601f016020809104026020016040519081016040528092919081815260200182805461194c90613f09565b80156119995780601f1061196e57610100808354040283529160200191611999565b820191906000526020600020905b81548152906001019060200180831161197c57829003601f168201915b5050505050905090565b6119b56119ae612245565b8383612854565b5050565b6119ca6119c4612245565b83612782565b611a09576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a0090614256565b60405180910390fd5b611a15848484846129c0565b50505050565b6000611a276008612a1c565b6000611a3360086121ec565b9050611a3f3382612a32565b611a498186612c4f565b611a548482856115b5565b50809150509392505050565b6000611a6c6008612a1c565b6000611a7860086121ec565b9050611a843382612a32565b611a8e8185612c4f565b611a988184612cf3565b8091505092915050565b6060611aad826121fa565b6000600660008481526020019081526020016000208054611acd90613f09565b80601f0160208091040260200160405190810160405280929190818152602001828054611af990613f09565b8015611b465780601f10611b1b57610100808354040283529160200191611b46565b820191906000526020600020905b815481529060010190602001808311611b2957829003601f168201915b505050505090506000611b57612e7f565b90506000815103611b6c578192505050611baf565b600082511115611ba1578082604051602001611b899291906146e8565b60405160208183030381529060405292505050611baf565b611baa84612e96565b925050505b919050565b600d6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050154908060060154908060070160009054906101000a900460ff16905088565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600c60008381526020019081526020016000206002015490506000600c600084815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050813414611d75576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d6c90614758565b60405180910390fd5b60008173ffffffffffffffffffffffffffffffffffffffff1683604051611d9b906147a9565b60006040518083038185875af1925050503d8060008114611dd8576040519150601f19603f3d011682016040523d82523d6000602084013e611ddd565b606091505b5050905080611e21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e189061480a565b60405180910390fd5b33600c600086815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600c600086815260200190815260200160002060010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600c600086815260200190815260200160002060030160006101000a81548160ff021916908315150217905550611f056009612a1c565b611f10303386612355565b7f6abf8fea1f4c585bf426b0fdbd54c0f004a746a4b6dcb76752a2d5d268f8730b84336000866001604051611f49959493929190614876565b60405180910390a150505050565b60606000611f6560086121ec565b905060008167ffffffffffffffff811115611f8357611f82613a5c565b5b604051908082528060200260200182016040528015611fbc57816020015b611fa9613380565b815260200190600190039081611fa15790505b50905060005b815181101561210157600c6000600183611fdc919061434e565b81526020019081526020016000206040518060a00160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015481526020016003820160009054906101000a900460ff161515151581526020016004820154815250508282815181106120e3576120e2613eab565b5b602002602001018190525080806120f990613e63565b915050611fc2565b50809250505090565b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806121d557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806121e557506121e482612efe565b5b9050919050565b600081600001549050919050565b61220381612f68565b612242576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612239906145fa565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff166122c0836117ae565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60026007540361234b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161234290614928565b60405180910390fd5b6002600781905550565b8273ffffffffffffffffffffffffffffffffffffffff16612375826117ae565b73ffffffffffffffffffffffffffffffffffffffff16146123cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123c2906149ba565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361243a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161243190614a4c565b60405180910390fd5b6124478383836001612fa9565b8273ffffffffffffffffffffffffffffffffffffffff16612467826117ae565b73ffffffffffffffffffffffffffffffffffffffff16146124bd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124b4906149ba565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a46126498383836001612faf565b505050565b600081031561277457600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036126c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126bd90614ade565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516126ec906147a9565b60006040518083038185875af1925050503d8060008114612729576040519150601f19603f3d011682016040523d82523d6000602084013e61272e565b606091505b5050905080612772576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161276990614b4a565b60405180910390fd5b505b5050565b6001600781905550565b60008061278e836117ae565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806127d057506127cf8185611c49565b5b8061280e57508373ffffffffffffffffffffffffffffffffffffffff166127f684610c76565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036128c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016128b990614bb6565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516129b39190613491565b60405180910390a3505050565b6129cb848484612355565b6129d784848484612fb5565b612a16576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a0d90614c48565b60405180910390fd5b50505050565b6001816000016000828254019250508190555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a9890614cb4565b60405180910390fd5b612aaa81612f68565b15612aea576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ae190614d20565b60405180910390fd5b612af8600083836001612fa9565b612b0181612f68565b15612b41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612b3890614d20565b60405180910390fd5b6001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4612c4b600083836001612faf565b5050565b612c5882612f68565b612c97576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612c8e90614db2565b60405180910390fd5b80600660008481526020019081526020016000209081612cb79190614f7e565b507ff8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce782604051612ce7919061394b565b60405180910390a15050565b6000612cff60086121ec565b90506040518060a001604052803073ffffffffffffffffffffffffffffffffffffffff1681526020013373ffffffffffffffffffffffffffffffffffffffff16815260200183815260200160001515815260200184815250600c600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff02191690831515021790555060808201518160040155905050612e3a333085612355565b7f6abf8fea1f4c585bf426b0fdbd54c0f004a746a4b6dcb76752a2d5d268f8730b833033856000604051612e7295949392919061509c565b60405180910390a1505050565b606060405180602001604052806000815250905090565b6060612ea1826121fa565b6000612eab612e7f565b90506000815111612ecb5760405180602001604052806000815250612ef6565b80612ed58461313c565b604051602001612ee69291906146e8565b6040516020818303038152906040525b915050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16612f8a83612817565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b50505050565b50505050565b6000612fd68473ffffffffffffffffffffffffffffffffffffffff1661320a565b1561312f578373ffffffffffffffffffffffffffffffffffffffff1663150b7a02612fff612245565b8786866040518563ffffffff1660e01b81526004016130219493929190615157565b6020604051808303816000875af192505050801561305d57506040513d601f19601f8201168201806040525081019061305a91906151b8565b60015b6130df573d806000811461308d576040519150601f19603f3d011682016040523d82523d6000602084013e613092565b606091505b5060008151036130d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016130ce90614c48565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050613134565b600190505b949350505050565b60606000600161314b8461322d565b01905060008167ffffffffffffffff81111561316a57613169613a5c565b5b6040519080825280601f01601f19166020018201604052801561319c5781602001600182028036833780820191505090505b509050600082602001820190505b6001156131ff578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816131f3576131f2614414565b5b049450600085036131aa575b819350505050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061328b577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161328157613280614414565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106132c8576d04ee2d6d415b85acef810000000083816132be576132bd614414565b5b0492506020810190505b662386f26fc1000083106132f757662386f26fc1000083816132ed576132ec614414565b5b0492506010810190505b6305f5e1008310613320576305f5e100838161331657613315614414565b5b0492506008810190505b612710831061334557612710838161333b5761333a614414565b5b0492506004810190505b60648310613368576064838161335e5761335d614414565b5b0492506002810190505b600a8310613377576001810190505b80915050919050565b6040518060a00160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152602001600081525090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b613426816133f1565b811461343157600080fd5b50565b6000813590506134438161341d565b92915050565b60006020828403121561345f5761345e6133e7565b5b600061346d84828501613434565b91505092915050565b60008115159050919050565b61348b81613476565b82525050565b60006020820190506134a66000830184613482565b92915050565b6000819050919050565b6134bf816134ac565b81146134ca57600080fd5b50565b6000813590506134dc816134b6565b92915050565b6000602082840312156134f8576134f76133e7565b5b6000613506848285016134cd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061353a8261350f565b9050919050565b61354a8161352f565b82525050565b613559816134ac565b82525050565b61356881613476565b82525050565b60a0820160008201516135846000850182613541565b5060208201516135976020850182613541565b5060408201516135aa6040850182613550565b5060608201516135bd606085018261355f565b5060808201516135d06080850182613550565b50505050565b600060a0820190506135eb600083018461356e565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60a0820160008201516136336000850182613541565b5060208201516136466020850182613541565b5060408201516136596040850182613550565b50606082015161366c606085018261355f565b50608082015161367f6080850182613550565b50505050565b6000613691838361361d565b60a08301905092915050565b6000602082019050919050565b60006136b5826135f1565b6136bf81856135fc565b93506136ca8361360d565b8060005b838110156136fb5781516136e28882613685565b97506136ed8361369d565b9250506001810190506136ce565b5085935050505092915050565b6000602082019050818103600083015261372281846136aa565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613764578082015181840152602081019050613749565b60008484015250505050565b6000601f19601f8301169050919050565b600061378c8261372a565b6137968185613735565b93506137a6818560208601613746565b6137af81613770565b840191505092915050565b600060208201905081810360008301526137d48184613781565b905092915050565b6137e58161352f565b82525050565b600060208201905061380060008301846137dc565b92915050565b61380f8161352f565b811461381a57600080fd5b50565b60008135905061382c81613806565b92915050565b60008060408385031215613849576138486133e7565b5b60006138578582860161381d565b9250506020613868858286016134cd565b9150509250929050565b600060ff82169050919050565b61388881613872565b82525050565b60006020820190506138a3600083018461387f565b92915050565b6000806000606084860312156138c2576138c16133e7565b5b60006138d08682870161381d565b93505060206138e18682870161381d565b92505060406138f2868287016134cd565b9150509250925092565b60008060408385031215613913576139126133e7565b5b6000613921858286016134cd565b92505060206139328582860161381d565b9150509250929050565b613945816134ac565b82525050565b6000602082019050613960600083018461393c565b92915050565b60008060006060848603121561397f5761397e6133e7565b5b600061398d868287016134cd565b935050602061399e868287016134cd565b92505060406139af868287016134cd565b9150509250925092565b6000602082840312156139cf576139ce6133e7565b5b60006139dd8482850161381d565b91505092915050565b6139ef81613476565b81146139fa57600080fd5b50565b600081359050613a0c816139e6565b92915050565b60008060408385031215613a2957613a286133e7565b5b6000613a378582860161381d565b9250506020613a48858286016139fd565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b613a9482613770565b810181811067ffffffffffffffff82111715613ab357613ab2613a5c565b5b80604052505050565b6000613ac66133dd565b9050613ad28282613a8b565b919050565b600067ffffffffffffffff821115613af257613af1613a5c565b5b613afb82613770565b9050602081019050919050565b82818337600083830152505050565b6000613b2a613b2584613ad7565b613abc565b905082815260208101848484011115613b4657613b45613a57565b5b613b51848285613b08565b509392505050565b600082601f830112613b6e57613b6d613a52565b5b8135613b7e848260208601613b17565b91505092915050565b60008060008060808587031215613ba157613ba06133e7565b5b6000613baf8782880161381d565b9450506020613bc08782880161381d565b9350506040613bd1878288016134cd565b925050606085013567ffffffffffffffff811115613bf257613bf16133ec565b5b613bfe87828801613b59565b91505092959194509250565b600067ffffffffffffffff821115613c2557613c24613a5c565b5b613c2e82613770565b9050602081019050919050565b6000613c4e613c4984613c0a565b613abc565b905082815260208101848484011115613c6a57613c69613a57565b5b613c75848285613b08565b509392505050565b600082601f830112613c9257613c91613a52565b5b8135613ca2848260208601613c3b565b91505092915050565b600080600060608486031215613cc457613cc36133e7565b5b600084013567ffffffffffffffff811115613ce257613ce16133ec565b5b613cee86828701613c7d565b9350506020613cff868287016134cd565b9250506040613d10868287016134cd565b9150509250925092565b60008060408385031215613d3157613d306133e7565b5b600083013567ffffffffffffffff811115613d4f57613d4e6133ec565b5b613d5b85828601613c7d565b9250506020613d6c858286016134cd565b9150509250929050565b600061010082019050613d8c600083018b6137dc565b613d99602083018a6137dc565b613da6604083018961393c565b613db3606083018861393c565b613dc0608083018761393c565b613dcd60a083018661393c565b613dda60c083018561393c565b613de760e083018461387f565b9998505050505050505050565b60008060408385031215613e0b57613e0a6133e7565b5b6000613e198582860161381d565b9250506020613e2a8582860161381d565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000613e6e826134ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613ea057613e9f613e34565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613f2157607f821691505b602082108103613f3457613f33613eda565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b6000613f96602183613735565b9150613fa182613f3a565b604082019050919050565b60006020820190508181036000830152613fc581613f89565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000614028603d83613735565b915061403382613fcc565b604082019050919050565b600060208201905081810360008301526140578161401b565b9050919050565b7f61756374696f6e206973207374696c6c206f70656e0000000000000000000000600082015250565b6000614094601583613735565b915061409f8261405e565b602082019050919050565b600060208201905081810360008301526140c381614087565b9050919050565b7f6f6e6c792073656c6c6572206f722077696e6e65722063616e20636f6d706c6560008201527f74652061756374696f6e00000000000000000000000000000000000000000000602082015250565b6000614126602a83613735565b9150614131826140ca565b604082019050919050565b6000602082019050818103600083015261415581614119565b9050919050565b7f41756374696f6e20636f6d706c65746564207375636365737366756c6c790000600082015250565b6000614192601e83613735565b915061419d8261415c565b602082019050919050565b60006060820190506141bd600083018561393c565b6141ca602083018461393c565b81810360408301526141db81614185565b90509392505050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000614240602d83613735565b915061424b826141e4565b604082019050919050565b6000602082019050818103600083015261426f81614233565b9050919050565b7f61756374696f6e2068617320656e646564000000000000000000000000000000600082015250565b60006142ac601183613735565b91506142b782614276565b602082019050919050565b600060208201905081810360008301526142db8161429f565b9050919050565b7f63616e6e6f7420626964206f6e207768617420796f75206f776e000000000000600082015250565b6000614318601a83613735565b9150614323826142e2565b602082019050919050565b600060208201905081810360008301526143478161430b565b9050919050565b6000614359826134ac565b9150614364836134ac565b925082820190508082111561437c5761437b613e34565b5b92915050565b7f63616e6e6f74206269642062656c6f7720746865206c6174657374206269646460008201527f696e672070726963650000000000000000000000000000000000000000000000602082015250565b60006143de602983613735565b91506143e982614382565b604082019050919050565b6000602082019050818103600083015261440d816143d1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061444e826134ac565b9150614459836134ac565b92508261446957614468614414565b5b828204905092915050565b7f4269642063726561746564207375636365737366756c6c790000000000000000600082015250565b60006144aa601883613735565b91506144b582614474565b602082019050919050565b60006060820190506144d5600083018561393c565b6144e2602083018461393c565b81810360408301526144f38161449d565b90509392505050565b7f41756374696f6e2063726561746564207375636365737366756c6c7900000000600082015250565b6000614532601c83613735565b915061453d826144fc565b602082019050919050565b600060c08201905061455d600083018861393c565b61456a602083018761393c565b614577604083018661393c565b614584606083018561393c565b614591608083018461393c565b81810360a08301526145a281614525565b90509695505050505050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b60006145e4601883613735565b91506145ef826145ae565b602082019050919050565b60006020820190508181036000830152614613816145d7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000614676602983613735565b91506146818261461a565b604082019050919050565b600060208201905081810360008301526146a581614669565b9050919050565b600081905092915050565b60006146c28261372a565b6146cc81856146ac565b93506146dc818560208601613746565b80840191505092915050565b60006146f482856146b7565b915061470082846146b7565b91508190509392505050565b7f696e636f727265637420616d6f756e7400000000000000000000000000000000600082015250565b6000614742601083613735565b915061474d8261470c565b602082019050919050565b6000602082019050818103600083015261477181614735565b9050919050565b600081905092915050565b50565b6000614793600083614778565b915061479e82614783565b600082019050919050565b60006147b482614786565b9150819050919050565b7f7061796d656e74206661696c6564000000000000000000000000000000000000600082015250565b60006147f4600e83613735565b91506147ff826147be565b602082019050919050565b60006020820190508181036000830152614823816147e7565b9050919050565b7f536f6c64204e4654207375636365737366756c6c790000000000000000000000600082015250565b6000614860601583613735565b915061486b8261482a565b602082019050919050565b600060c08201905061488b600083018861393c565b61489860208301876137dc565b6148a560408301866137dc565b6148b2606083018561393c565b6148bf6080830184613482565b81810360a08301526148d081614853565b90509695505050505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6000614912601f83613735565b915061491d826148dc565b602082019050919050565b6000602082019050818103600083015261494181614905565b9050919050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b60006149a4602583613735565b91506149af82614948565b604082019050919050565b600060208201905081810360008301526149d381614997565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000614a36602483613735565b9150614a41826149da565b604082019050919050565b60006020820190508181036000830152614a6581614a29565b9050919050565b7f4572726f722c2063616e6e6f74207472616e7366657220746f2061646472657360008201527f7328302900000000000000000000000000000000000000000000000000000000602082015250565b6000614ac8602483613735565b9150614ad382614a6c565b604082019050919050565b60006020820190508181036000830152614af781614abb565b9050919050565b7f4572726f722c206661696c656420746f2073656e642045746865720000000000600082015250565b6000614b34601b83613735565b9150614b3f82614afe565b602082019050919050565b60006020820190508181036000830152614b6381614b27565b9050919050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000614ba0601983613735565b9150614bab82614b6a565b602082019050919050565b60006020820190508181036000830152614bcf81614b93565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000614c32603283613735565b9150614c3d82614bd6565b604082019050919050565b60006020820190508181036000830152614c6181614c25565b9050919050565b7f4552433732313a206d696e7420746f20746865207a65726f2061646472657373600082015250565b6000614c9e602083613735565b9150614ca982614c68565b602082019050919050565b60006020820190508181036000830152614ccd81614c91565b9050919050565b7f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000600082015250565b6000614d0a601c83613735565b9150614d1582614cd4565b602082019050919050565b60006020820190508181036000830152614d3981614cfd565b9050919050565b7f45524337323155524953746f726167653a2055524920736574206f66206e6f6e60008201527f6578697374656e7420746f6b656e000000000000000000000000000000000000602082015250565b6000614d9c602e83613735565b9150614da782614d40565b604082019050919050565b60006020820190508181036000830152614dcb81614d8f565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302614e347fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82614df7565b614e3e8683614df7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000614e7b614e76614e71846134ac565b614e56565b6134ac565b9050919050565b6000819050919050565b614e9583614e60565b614ea9614ea182614e82565b848454614e04565b825550505050565b600090565b614ebe614eb1565b614ec9818484614e8c565b505050565b5b81811015614eed57614ee2600082614eb6565b600181019050614ecf565b5050565b601f821115614f3257614f0381614dd2565b614f0c84614de7565b81016020851015614f1b578190505b614f2f614f2785614de7565b830182614ece565b50505b505050565b600082821c905092915050565b6000614f5560001984600802614f37565b1980831691505092915050565b6000614f6e8383614f44565b9150826002028217905092915050565b614f878261372a565b67ffffffffffffffff811115614fa057614f9f613a5c565b5b614faa8254613f09565b614fb5828285614ef1565b600060209050601f831160018114614fe85760008415614fd6578287015190505b614fe08582614f62565b865550615048565b601f198416614ff686614dd2565b60005b8281101561501e57848901518255600182019150602085019450602081019050614ff9565b8683101561503b5784890151615037601f891682614f44565b8355505b6001600288020188555050505b505050505050565b7f4e46542063726561746564207375636365737366756c79000000000000000000600082015250565b6000615086601783613735565b915061509182615050565b602082019050919050565b600060c0820190506150b1600083018861393c565b6150be60208301876137dc565b6150cb60408301866137dc565b6150d8606083018561393c565b6150e56080830184613482565b81810360a08301526150f681615079565b90509695505050505050565b600081519050919050565b600082825260208201905092915050565b600061512982615102565b615133818561510d565b9350615143818560208601613746565b61514c81613770565b840191505092915050565b600060808201905061516c60008301876137dc565b61517960208301866137dc565b615186604083018561393c565b8181036060830152615198818461511e565b905095945050505050565b6000815190506151b28161341d565b92915050565b6000602082840312156151ce576151cd6133e7565b5b60006151dc848285016151a3565b9150509291505056fea26469706673582212200aef6b4479f9fe5a09be60bacea739ba14c4c7af05362c8987332f5c212a934364736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4C22F381 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xDE74E57B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xDE74E57B EQ PUSH2 0x6F2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x736 JUMPI DUP1 PUSH4 0xEE9CDFB3 EQ PUSH2 0x773 JUMPI DUP1 PUSH4 0xF2B8AA6F EQ PUSH2 0x78F JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x612 JUMPI DUP1 PUSH4 0xBBB52FFF EQ PUSH2 0x63B JUMPI DUP1 PUSH4 0xC046372C EQ PUSH2 0x678 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x6B5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x544 JUMPI DUP1 PUSH4 0x7BF0989A EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x5BE JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x5E9 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x4C22F381 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x4DC JUMPI DUP1 PUSH4 0x708D4D35 EQ PUSH2 0x519 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x15BFA612 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x3F1FFCEC GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x3F1FFCEC EQ PUSH2 0x3E0 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x451DF52E EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x454A2AB3 EQ PUSH2 0x483 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x15BFA612 EQ PUSH2 0x345 JUMPI DUP1 PUSH4 0x21B62886 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x236D4725 EQ PUSH2 0x38C JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x3B7 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x2DF JUMPI DUP1 PUSH4 0xAD48628 EQ PUSH2 0x308 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x43A2DF4 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x51D2B6B EQ PUSH2 0x24C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x3449 JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x206 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x236 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x231 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x81B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x243 SWAP2 SWAP1 PUSH2 0x35D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x261 PUSH2 0x923 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26E SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0xBE4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0xC76 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D6 SWAP2 SWAP1 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x3832 JUMP JUMPDEST PUSH2 0xCBC JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x32F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32A SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0xDD3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x33C SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x35A PUSH2 0xE2A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x388E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0xE2F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A1 PUSH2 0x11F3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3AE SWAP2 SWAP1 PUSH2 0x388E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3DE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x38A9 JUMP JUMPDEST PUSH2 0x11F8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x407 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x38FC JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x414 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x429 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x444 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x43F SWAP2 SWAP1 PUSH2 0x38A9 JUMP JUMPDEST PUSH2 0x127D JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x452 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x468 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x129D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x49D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x498 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x12D0 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x3966 JUMP JUMPDEST PUSH2 0x15B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D3 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FE SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x17AE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x510 SWAP2 SWAP1 PUSH2 0x37EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x52E PUSH2 0x1834 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53B SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x550 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x56B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x566 SWAP2 SWAP1 PUSH2 0x39B9 JUMP JUMPDEST PUSH2 0x183A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x578 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5A8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A3 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x18F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B5 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x5D3 PUSH2 0x1911 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x610 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x60B SWAP2 SWAP1 PUSH2 0x3A12 JUMP JUMPDEST PUSH2 0x19A3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x61E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x639 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x634 SWAP2 SWAP1 PUSH2 0x3B87 JUMP JUMPDEST PUSH2 0x19B9 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x647 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x662 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x65D SWAP2 SWAP1 PUSH2 0x3CAB JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x66F SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x684 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x69F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x69A SWAP2 SWAP1 PUSH2 0x3D1A JUMP JUMPDEST PUSH2 0x1A60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6AC SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x6DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6D7 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1AA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E9 SWAP2 SWAP1 PUSH2 0x37BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x6FE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x719 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x714 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1BB4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x72D SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3D76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x742 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x75D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x758 SWAP2 SWAP1 PUSH2 0x3DF4 JUMP JUMPDEST PUSH2 0x1C49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x76A SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x78D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x788 SWAP2 SWAP1 PUSH2 0x34E2 JUMP JUMPDEST PUSH2 0x1CDD JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x79B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x7A4 PUSH2 0x1F57 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7B1 SWAP2 SWAP1 PUSH2 0x3708 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x814 JUMPI POP PUSH2 0x813 DUP3 PUSH2 0x210A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x823 PUSH2 0x3380 JUMP JUMPDEST PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x931 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0x9CD JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9BA JUMPI DUP2 DUP1 PUSH2 0x9B6 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP3 POP POP JUMPDEST DUP1 DUP1 PUSH2 0x9C5 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x93B JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9EA JUMPI PUSH2 0x9E9 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA23 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xA10 PUSH2 0x3380 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xA08 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 SWAP2 POP PUSH1 0x0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0xBDA JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBC7 JUMPI PUSH1 0xC PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xBAD JUMPI PUSH2 0xBAC PUSH2 0x3EAB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP3 DUP1 PUSH2 0xBC3 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP4 POP POP JUMPDEST DUP1 DUP1 PUSH2 0xBD2 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xA31 JUMP JUMPDEST POP DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0xBF3 SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC1F SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC81 DUP3 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCC7 DUP3 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD37 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP1 PUSH2 0x3FAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD56 PUSH2 0x2245 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xD85 JUMPI POP PUSH2 0xD84 DUP2 PUSH2 0xD7F PUSH2 0x2245 JUMP JUMPDEST PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST PUSH2 0xDC4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBB SWAP1 PUSH2 0x403E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xDCE DUP4 DUP4 PUSH2 0x224D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF AND PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0xFF AND EQ DUP1 ISZERO PUSH2 0xE23 JUMPI POP TIMESTAMP PUSH1 0xD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD SLOAD GT JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 DUP2 JUMP JUMPDEST PUSH2 0xE37 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0xE40 DUP2 PUSH2 0xDD3 JUMP JUMPDEST ISZERO PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE77 SWAP1 PUSH2 0x40AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP PUSH1 0x0 PUSH1 0xF PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xF58 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST PUSH2 0xF97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF8E SWAP1 PUSH2 0x413C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x10B9 JUMPI PUSH2 0xFDA ADDRESS DUP3 DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x2355 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xE PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x10B3 DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH2 0x264E JUMP JUMPDEST POP PUSH2 0x10ED JUMP JUMPDEST PUSH2 0x10EC ADDRESS DUP4 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x2 ADD SLOAD PUSH2 0x2355 JUMP JUMPDEST JUMPDEST PUSH1 0x2 DUP3 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7E7751E116C86DCB924F03557ED09EE35423DFCFD5CB5C84DA25EFB40BBC291E DUP6 PUSH1 0xE PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x11DE SWAP3 SWAP2 SWAP1 PUSH2 0x41A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0x11F0 PUSH2 0x2778 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 DUP2 JUMP JUMPDEST PUSH2 0x1209 PUSH2 0x1203 PUSH2 0x2245 JUMP JUMPDEST DUP3 PUSH2 0x2782 JUMP JUMPDEST PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123F SWAP1 PUSH2 0x4256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1253 DUP4 DUP4 DUP4 PUSH2 0x2355 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xE PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1298 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x19B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x12D8 PUSH2 0x2306 JUMP JUMPDEST PUSH2 0x12E1 DUP2 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x1320 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1317 SWAP1 PUSH2 0x42C2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x13C9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13C0 SWAP1 PUSH2 0x432E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x1427 SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST SWAP1 POP DUP2 PUSH1 0x3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1470 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1467 SWAP1 PUSH2 0x43F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLVALUE PUSH1 0xE PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x14D0 SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH1 0xF PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xA SLOAD DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x153D SWAP2 SWAP1 PUSH2 0x4443 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x154F SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST DUP4 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x793C2BC8CCF2234E5E1CBD74248A00015D32CCC7C062247F5120ABDBB911E80B DUP6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x159F SWAP3 SWAP2 SWAP1 PUSH2 0x44C0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x15B2 PUSH2 0x2778 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x15C2 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 DUP6 DUP3 PUSH2 0x15DC SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 PUSH1 0xFF AND DUP2 MSTORE POP PUSH1 0xD PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH2 0x174A CALLER ADDRESS DUP10 PUSH2 0x2355 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE3B4D5CEEB9BD4281BA3F05BF499516ADB0DE51DD1BBFC4516EFBDB369AB7305 DUP5 DUP11 DUP11 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1798 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 DUP3 SWAP5 POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17BA DUP4 PUSH2 0x2817 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x182B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1822 SWAP1 PUSH2 0x45FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18AA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18A1 SWAP1 PUSH2 0x468C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x1920 SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x194C SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1999 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x196E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1999 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x197C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x19B5 PUSH2 0x19AE PUSH2 0x2245 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x2854 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x19CA PUSH2 0x19C4 PUSH2 0x2245 JUMP JUMPDEST DUP4 PUSH2 0x2782 JUMP JUMPDEST PUSH2 0x1A09 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A00 SWAP1 PUSH2 0x4256 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A15 DUP5 DUP5 DUP5 DUP5 PUSH2 0x29C0 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A27 PUSH1 0x8 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A33 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1A3F CALLER DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x1A49 DUP2 DUP7 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x1A54 DUP5 DUP3 DUP6 PUSH2 0x15B5 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A6C PUSH1 0x8 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A78 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH2 0x1A84 CALLER DUP3 PUSH2 0x2A32 JUMP JUMPDEST PUSH2 0x1A8E DUP2 DUP6 PUSH2 0x2C4F JUMP JUMPDEST PUSH2 0x1A98 DUP2 DUP5 PUSH2 0x2CF3 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1AAD DUP3 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x1ACD SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1AF9 SWAP1 PUSH2 0x3F09 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1B46 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1B1B JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1B46 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1B29 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 PUSH2 0x1B57 PUSH2 0x2E7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1B6C JUMPI DUP2 SWAP3 POP POP POP PUSH2 0x1BAF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD GT ISZERO PUSH2 0x1BA1 JUMPI DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1B89 SWAP3 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP3 POP POP POP PUSH2 0x1BAF JUMP JUMPDEST PUSH2 0x1BAA DUP5 PUSH2 0x2E96 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 CALLVALUE EQ PUSH2 0x1D75 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D6C SWAP1 PUSH2 0x4758 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x1D9B SWAP1 PUSH2 0x47A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1DD8 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1DDD JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1E21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E18 SWAP1 PUSH2 0x480A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xC PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1F05 PUSH1 0x9 PUSH2 0x2A1C JUMP JUMPDEST PUSH2 0x1F10 ADDRESS CALLER DUP7 PUSH2 0x2355 JUMP JUMPDEST PUSH32 0x6ABF8FEA1F4C585BF426B0FDBD54C0F004A746A4B6DCB76752A2D5D268F8730B DUP5 CALLER PUSH1 0x0 DUP7 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x1F49 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4876 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1F65 PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F83 JUMPI PUSH2 0x1F82 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1FBC JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x1FA9 PUSH2 0x3380 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1FA1 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 MLOAD DUP2 LT ISZERO PUSH2 0x2101 JUMPI PUSH1 0xC PUSH1 0x0 PUSH1 0x1 DUP4 PUSH2 0x1FDC SWAP2 SWAP1 PUSH2 0x434E JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x20E3 JUMPI PUSH2 0x20E2 PUSH2 0x3EAB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0x20F9 SWAP1 PUSH2 0x3E63 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1FC2 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x21D5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x21E5 JUMPI POP PUSH2 0x21E4 DUP3 PUSH2 0x2EFE JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2203 DUP2 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x2242 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2239 SWAP1 PUSH2 0x45FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x22C0 DUP4 PUSH2 0x17AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x7 SLOAD SUB PUSH2 0x234B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2342 SWAP1 PUSH2 0x4928 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2375 DUP3 PUSH2 0x17AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x23CB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23C2 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x243A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2431 SWAP1 PUSH2 0x4A4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2447 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FA9 JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2467 DUP3 PUSH2 0x17AE JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x24BD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x24B4 SWAP1 PUSH2 0x49BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2649 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FAF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SUB ISZERO PUSH2 0x2774 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x26C6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26BD SWAP1 PUSH2 0x4ADE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0x26EC SWAP1 PUSH2 0x47A9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2729 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x272E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x2772 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2769 SWAP1 PUSH2 0x4B4A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x278E DUP4 PUSH2 0x17AE JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x27D0 JUMPI POP PUSH2 0x27CF DUP2 DUP6 PUSH2 0x1C49 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x280E JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x27F6 DUP5 PUSH2 0xC76 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x28C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x28B9 SWAP1 PUSH2 0x4BB6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x29B3 SWAP2 SWAP1 PUSH2 0x3491 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0x29CB DUP5 DUP5 DUP5 PUSH2 0x2355 JUMP JUMPDEST PUSH2 0x29D7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x2FB5 JUMP JUMPDEST PUSH2 0x2A16 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A0D SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2AA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A98 SWAP1 PUSH2 0x4CB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AAA DUP2 PUSH2 0x2F68 JUMP JUMPDEST ISZERO PUSH2 0x2AEA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AE1 SWAP1 PUSH2 0x4D20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2AF8 PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FA9 JUMP JUMPDEST PUSH2 0x2B01 DUP2 PUSH2 0x2F68 JUMP JUMPDEST ISZERO PUSH2 0x2B41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2B38 SWAP1 PUSH2 0x4D20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x2C4B PUSH1 0x0 DUP4 DUP4 PUSH1 0x1 PUSH2 0x2FAF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x2C58 DUP3 PUSH2 0x2F68 JUMP JUMPDEST PUSH2 0x2C97 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2C8E SWAP1 PUSH2 0x4DB2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 DUP2 PUSH2 0x2CB7 SWAP2 SWAP1 PUSH2 0x4F7E JUMP JUMPDEST POP PUSH32 0xF8E1A15ABA9398E019F0B49DF1A4FDE98EE17AE345CB5F6B5E2C27F5033E8CE7 DUP3 PUSH1 0x40 MLOAD PUSH2 0x2CE7 SWAP2 SWAP1 PUSH2 0x394B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2CFF PUSH1 0x8 PUSH2 0x21EC JUMP JUMPDEST SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP PUSH1 0xC PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP PUSH2 0x2E3A CALLER ADDRESS DUP6 PUSH2 0x2355 JUMP JUMPDEST PUSH32 0x6ABF8FEA1F4C585BF426B0FDBD54C0F004A746A4B6DCB76752A2D5D268F8730B DUP4 ADDRESS CALLER DUP6 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH2 0x2E72 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x509C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2EA1 DUP3 PUSH2 0x21FA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EAB PUSH2 0x2E7F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x2ECB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x2EF6 JUMP JUMPDEST DUP1 PUSH2 0x2ED5 DUP5 PUSH2 0x313C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2EE6 SWAP3 SWAP2 SWAP1 PUSH2 0x46E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2F8A DUP4 PUSH2 0x2817 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2FD6 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x320A JUMP JUMPDEST ISZERO PUSH2 0x312F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x2FFF PUSH2 0x2245 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3021 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x5157 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x305D JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x305A SWAP2 SWAP1 PUSH2 0x51B8 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x30DF JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x308D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3092 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x30D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30CE SWAP1 PUSH2 0x4C48 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x3134 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x314B DUP5 PUSH2 0x322D JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x316A JUMPI PUSH2 0x3169 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x319C JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x31FF JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x31F3 JUMPI PUSH2 0x31F2 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x31AA JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x328B JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x3281 JUMPI PUSH2 0x3280 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x32C8 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x32BE JUMPI PUSH2 0x32BD PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x32F7 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x32ED JUMPI PUSH2 0x32EC PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x3320 JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x3316 JUMPI PUSH2 0x3315 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x3345 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x333B JUMPI PUSH2 0x333A PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x3368 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x335E JUMPI PUSH2 0x335D PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x3377 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3426 DUP2 PUSH2 0x33F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x3431 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3443 DUP2 PUSH2 0x341D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x345F JUMPI PUSH2 0x345E PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x346D DUP5 DUP3 DUP6 ADD PUSH2 0x3434 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x348B DUP2 PUSH2 0x3476 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x34A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3482 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x34BF DUP2 PUSH2 0x34AC JUMP JUMPDEST DUP2 EQ PUSH2 0x34CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x34DC DUP2 PUSH2 0x34B6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x34F8 JUMPI PUSH2 0x34F7 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3506 DUP5 DUP3 DUP6 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x353A DUP3 PUSH2 0x350F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x354A DUP2 PUSH2 0x352F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3559 DUP2 PUSH2 0x34AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x3568 DUP2 PUSH2 0x3476 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3584 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3597 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x35AA PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x35BD PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x355F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x35D0 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x35EB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x356E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x3633 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x3646 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x3541 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x3659 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x366C PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x355F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x367F PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x3550 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3691 DUP4 DUP4 PUSH2 0x361D JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36B5 DUP3 PUSH2 0x35F1 JUMP JUMPDEST PUSH2 0x36BF DUP2 DUP6 PUSH2 0x35FC JUMP JUMPDEST SWAP4 POP PUSH2 0x36CA DUP4 PUSH2 0x360D JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x36FB JUMPI DUP2 MLOAD PUSH2 0x36E2 DUP9 DUP3 PUSH2 0x3685 JUMP JUMPDEST SWAP8 POP PUSH2 0x36ED DUP4 PUSH2 0x369D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x36CE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3722 DUP2 DUP5 PUSH2 0x36AA JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3764 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3749 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x378C DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x3796 DUP2 DUP6 PUSH2 0x3735 JUMP JUMPDEST SWAP4 POP PUSH2 0x37A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x37AF DUP2 PUSH2 0x3770 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x37D4 DUP2 DUP5 PUSH2 0x3781 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x37E5 DUP2 PUSH2 0x352F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3800 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x37DC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x380F DUP2 PUSH2 0x352F JUMP JUMPDEST DUP2 EQ PUSH2 0x381A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x382C DUP2 PUSH2 0x3806 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3849 JUMPI PUSH2 0x3848 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3857 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3868 DUP6 DUP3 DUP7 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3888 DUP2 PUSH2 0x3872 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x38A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x387F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38C2 JUMPI PUSH2 0x38C1 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38D0 DUP7 DUP3 DUP8 ADD PUSH2 0x381D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x38E1 DUP7 DUP3 DUP8 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x38F2 DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3913 JUMPI PUSH2 0x3912 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3921 DUP6 DUP3 DUP7 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3932 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x3945 DUP2 PUSH2 0x34AC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3960 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x397F JUMPI PUSH2 0x397E PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x398D DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x399E DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x39AF DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x39CF JUMPI PUSH2 0x39CE PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x39DD DUP5 DUP3 DUP6 ADD PUSH2 0x381D JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x39EF DUP2 PUSH2 0x3476 JUMP JUMPDEST DUP2 EQ PUSH2 0x39FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A0C DUP2 PUSH2 0x39E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3A29 JUMPI PUSH2 0x3A28 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3A37 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3A48 DUP6 DUP3 DUP7 ADD PUSH2 0x39FD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3A94 DUP3 PUSH2 0x3770 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3AB3 JUMPI PUSH2 0x3AB2 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3AC6 PUSH2 0x33DD JUMP JUMPDEST SWAP1 POP PUSH2 0x3AD2 DUP3 DUP3 PUSH2 0x3A8B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3AF2 JUMPI PUSH2 0x3AF1 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH2 0x3AFB DUP3 PUSH2 0x3770 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B2A PUSH2 0x3B25 DUP5 PUSH2 0x3AD7 JUMP JUMPDEST PUSH2 0x3ABC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3B46 JUMPI PUSH2 0x3B45 PUSH2 0x3A57 JUMP JUMPDEST JUMPDEST PUSH2 0x3B51 DUP5 DUP3 DUP6 PUSH2 0x3B08 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3B6E JUMPI PUSH2 0x3B6D PUSH2 0x3A52 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3B7E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3B17 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3BA1 JUMPI PUSH2 0x3BA0 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3BAF DUP8 DUP3 DUP9 ADD PUSH2 0x381D JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3BC0 DUP8 DUP3 DUP9 ADD PUSH2 0x381D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3BD1 DUP8 DUP3 DUP9 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3BF2 JUMPI PUSH2 0x3BF1 PUSH2 0x33EC JUMP JUMPDEST JUMPDEST PUSH2 0x3BFE DUP8 DUP3 DUP9 ADD PUSH2 0x3B59 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3C25 JUMPI PUSH2 0x3C24 PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH2 0x3C2E DUP3 PUSH2 0x3770 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C4E PUSH2 0x3C49 DUP5 PUSH2 0x3C0A JUMP JUMPDEST PUSH2 0x3ABC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x3C6A JUMPI PUSH2 0x3C69 PUSH2 0x3A57 JUMP JUMPDEST JUMPDEST PUSH2 0x3C75 DUP5 DUP3 DUP6 PUSH2 0x3B08 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x3C92 JUMPI PUSH2 0x3C91 PUSH2 0x3A52 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x3CA2 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3C3B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3CC4 JUMPI PUSH2 0x3CC3 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3CE2 JUMPI PUSH2 0x3CE1 PUSH2 0x33EC JUMP JUMPDEST JUMPDEST PUSH2 0x3CEE DUP7 DUP3 DUP8 ADD PUSH2 0x3C7D JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3CFF DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3D10 DUP7 DUP3 DUP8 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3D31 JUMPI PUSH2 0x3D30 PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D4F JUMPI PUSH2 0x3D4E PUSH2 0x33EC JUMP JUMPDEST JUMPDEST PUSH2 0x3D5B DUP6 DUP3 DUP7 ADD PUSH2 0x3C7D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3D6C DUP6 DUP3 DUP7 ADD PUSH2 0x34CD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x3D8C PUSH1 0x0 DUP4 ADD DUP12 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x3D99 PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x3DA6 PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DB3 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DC0 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DCD PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DDA PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x3DE7 PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x387F JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E0B JUMPI PUSH2 0x3E0A PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3E19 DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3E2A DUP6 DUP3 DUP7 ADD PUSH2 0x381D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3E6E DUP3 PUSH2 0x34AC JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x3EA0 JUMPI PUSH2 0x3E9F PUSH2 0x3E34 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3F21 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3F34 JUMPI PUSH2 0x3F33 PUSH2 0x3EDA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F96 PUSH1 0x21 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x3FA1 DUP3 PUSH2 0x3F3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3FC5 DUP2 PUSH2 0x3F89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4028 PUSH1 0x3D DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4033 DUP3 PUSH2 0x3FCC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4057 DUP2 PUSH2 0x401B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61756374696F6E206973207374696C6C206F70656E0000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4094 PUSH1 0x15 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x409F DUP3 PUSH2 0x405E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x40C3 DUP2 PUSH2 0x4087 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x6F6E6C792073656C6C6572206F722077696E6E65722063616E20636F6D706C65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74652061756374696F6E00000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4126 PUSH1 0x2A DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4131 DUP3 PUSH2 0x40CA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4155 DUP2 PUSH2 0x4119 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x41756374696F6E20636F6D706C65746564207375636365737366756C6C790000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4192 PUSH1 0x1E DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x419D DUP3 PUSH2 0x415C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x41BD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x41CA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x41DB DUP2 PUSH2 0x4185 JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4240 PUSH1 0x2D DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x424B DUP3 PUSH2 0x41E4 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x426F DUP2 PUSH2 0x4233 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x61756374696F6E2068617320656E646564000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42AC PUSH1 0x11 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x42B7 DUP3 PUSH2 0x4276 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42DB DUP2 PUSH2 0x429F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x63616E6E6F7420626964206F6E207768617420796F75206F776E000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4318 PUSH1 0x1A DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4323 DUP3 PUSH2 0x42E2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4347 DUP2 PUSH2 0x430B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4359 DUP3 PUSH2 0x34AC JUMP JUMPDEST SWAP2 POP PUSH2 0x4364 DUP4 PUSH2 0x34AC JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x437C JUMPI PUSH2 0x437B PUSH2 0x3E34 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x63616E6E6F74206269642062656C6F7720746865206C61746573742062696464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x696E672070726963650000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43DE PUSH1 0x29 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x43E9 DUP3 PUSH2 0x4382 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x440D DUP2 PUSH2 0x43D1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x444E DUP3 PUSH2 0x34AC JUMP JUMPDEST SWAP2 POP PUSH2 0x4459 DUP4 PUSH2 0x34AC JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x4469 JUMPI PUSH2 0x4468 PUSH2 0x4414 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4269642063726561746564207375636365737366756C6C790000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x44AA PUSH1 0x18 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x44B5 DUP3 PUSH2 0x4474 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x44D5 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x44E2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x44F3 DUP2 PUSH2 0x449D JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x41756374696F6E2063726561746564207375636365737366756C6C7900000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4532 PUSH1 0x1C DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x453D DUP3 PUSH2 0x44FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x455D PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x456A PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4577 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4584 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4591 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x45A2 DUP2 PUSH2 0x4525 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45E4 PUSH1 0x18 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x45EF DUP3 PUSH2 0x45AE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4613 DUP2 PUSH2 0x45D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4676 PUSH1 0x29 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4681 DUP3 PUSH2 0x461A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x46A5 DUP2 PUSH2 0x4669 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46C2 DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH2 0x46CC DUP2 DUP6 PUSH2 0x46AC JUMP JUMPDEST SWAP4 POP PUSH2 0x46DC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3746 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x46F4 DUP3 DUP6 PUSH2 0x46B7 JUMP JUMPDEST SWAP2 POP PUSH2 0x4700 DUP3 DUP5 PUSH2 0x46B7 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x696E636F727265637420616D6F756E7400000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4742 PUSH1 0x10 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x474D DUP3 PUSH2 0x470C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4771 DUP2 PUSH2 0x4735 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4793 PUSH1 0x0 DUP4 PUSH2 0x4778 JUMP JUMPDEST SWAP2 POP PUSH2 0x479E DUP3 PUSH2 0x4783 JUMP JUMPDEST PUSH1 0x0 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B4 DUP3 PUSH2 0x4786 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x7061796D656E74206661696C6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47F4 PUSH1 0xE DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x47FF DUP3 PUSH2 0x47BE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4823 DUP2 PUSH2 0x47E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x536F6C64204E4654207375636365737366756C6C790000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4860 PUSH1 0x15 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x486B DUP3 PUSH2 0x482A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x488B PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x4898 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x48A5 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x48B2 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x48BF PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3482 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x48D0 DUP2 PUSH2 0x4853 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4912 PUSH1 0x1F DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x491D DUP3 PUSH2 0x48DC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4941 DUP2 PUSH2 0x4905 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x49A4 PUSH1 0x25 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x49AF DUP3 PUSH2 0x4948 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x49D3 DUP2 PUSH2 0x4997 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4A36 PUSH1 0x24 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4A41 DUP3 PUSH2 0x49DA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4A65 DUP2 PUSH2 0x4A29 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722C2063616E6E6F74207472616E7366657220746F20616464726573 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7328302900000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4AC8 PUSH1 0x24 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4AD3 DUP3 PUSH2 0x4A6C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4AF7 DUP2 PUSH2 0x4ABB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4572726F722C206661696C656420746F2073656E642045746865720000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4B34 PUSH1 0x1B DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4B3F DUP3 PUSH2 0x4AFE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4B63 DUP2 PUSH2 0x4B27 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4BA0 PUSH1 0x19 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4BAB DUP3 PUSH2 0x4B6A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4BCF DUP2 PUSH2 0x4B93 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C32 PUSH1 0x32 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4C3D DUP3 PUSH2 0x4BD6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4C61 DUP2 PUSH2 0x4C25 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4C9E PUSH1 0x20 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4CA9 DUP3 PUSH2 0x4C68 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4CCD DUP2 PUSH2 0x4C91 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D0A PUSH1 0x1C DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4D15 DUP3 PUSH2 0x4CD4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4D39 DUP2 PUSH2 0x4CFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524337323155524953746F726167653A2055524920736574206F66206E6F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6578697374656E7420746F6B656E000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4D9C PUSH1 0x2E DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x4DA7 DUP3 PUSH2 0x4D40 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4DCB DUP2 PUSH2 0x4D8F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x4E34 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x4DF7 JUMP JUMPDEST PUSH2 0x4E3E DUP7 DUP4 PUSH2 0x4DF7 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4E7B PUSH2 0x4E76 PUSH2 0x4E71 DUP5 PUSH2 0x34AC JUMP JUMPDEST PUSH2 0x4E56 JUMP JUMPDEST PUSH2 0x34AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E95 DUP4 PUSH2 0x4E60 JUMP JUMPDEST PUSH2 0x4EA9 PUSH2 0x4EA1 DUP3 PUSH2 0x4E82 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x4E04 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x4EBE PUSH2 0x4EB1 JUMP JUMPDEST PUSH2 0x4EC9 DUP2 DUP5 DUP5 PUSH2 0x4E8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4EED JUMPI PUSH2 0x4EE2 PUSH1 0x0 DUP3 PUSH2 0x4EB6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x4ECF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x4F32 JUMPI PUSH2 0x4F03 DUP2 PUSH2 0x4DD2 JUMP JUMPDEST PUSH2 0x4F0C DUP5 PUSH2 0x4DE7 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x4F1B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x4F2F PUSH2 0x4F27 DUP6 PUSH2 0x4DE7 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x4ECE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F55 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4F37 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4F6E DUP4 DUP4 PUSH2 0x4F44 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4F87 DUP3 PUSH2 0x372A JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FA0 JUMPI PUSH2 0x4F9F PUSH2 0x3A5C JUMP JUMPDEST JUMPDEST PUSH2 0x4FAA DUP3 SLOAD PUSH2 0x3F09 JUMP JUMPDEST PUSH2 0x4FB5 DUP3 DUP3 DUP6 PUSH2 0x4EF1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4FE8 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x4FD6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4FE0 DUP6 DUP3 PUSH2 0x4F62 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5048 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4FF6 DUP7 PUSH2 0x4DD2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x501E JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4FF9 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x503B JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x5037 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4F44 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x4E46542063726561746564207375636365737366756C79000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5086 PUSH1 0x17 DUP4 PUSH2 0x3735 JUMP JUMPDEST SWAP2 POP PUSH2 0x5091 DUP3 PUSH2 0x5050 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x50B1 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x50BE PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x50CB PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x50D8 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST PUSH2 0x50E5 PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x3482 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x50F6 DUP2 PUSH2 0x5079 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5129 DUP3 PUSH2 0x5102 JUMP JUMPDEST PUSH2 0x5133 DUP2 DUP6 PUSH2 0x510D JUMP JUMPDEST SWAP4 POP PUSH2 0x5143 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3746 JUMP JUMPDEST PUSH2 0x514C DUP2 PUSH2 0x3770 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x516C PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x5179 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x37DC JUMP JUMPDEST PUSH2 0x5186 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x393C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x5198 DUP2 DUP5 PUSH2 0x511E JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x51B2 DUP2 PUSH2 0x341D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x51CE JUMPI PUSH2 0x51CD PUSH2 0x33E7 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x51DC DUP5 DUP3 DUP6 ADD PUSH2 0x51A3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xEF PUSH12 0x4479F9FE5A09BE60BACEA739 0xBA EQ 0xC4 0xC7 0xAF SDIV CALLDATASIZE 0x2C DUP10 DUP8 CALLER 0x2F 0x5C 0x21 0x2A SWAP4 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"321:10511:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:205:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9173:117:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9394:595;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2471:98:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3935:167;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3468:406;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10285:188:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;664:42;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5926:1038;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;605:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:296:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;909:59:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4974:149:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;975:48:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6972:801;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4870:959;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2190:219:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;729:39:17;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:204:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10091:115:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2633:102:4;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4169:153;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5189:276;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3639:493:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3025:430;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;806:608:7;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;859:43:17;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;4388:162:4;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7889:843:17;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8802:298;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;535:205:7;637:4;682:10;675:18;;660:33;;;:11;:33;;;;:73;;;;697:36;721:11;697:23;:36::i;:::-;660:73;653:80;;535:205;;;:::o;9173:117:17:-;9231:16;;:::i;:::-;9267:6;:15;9274:7;9267:15;;;;;;;;;;;9259:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9173:117;;;:::o;9394:595::-;9437:12;9458:19;9480:18;:8;:16;:18::i;:::-;9458:40;;9505:14;9537:6;9546:1;9537:10;;9532:134;9554:14;9549:1;:19;9532:134;;9609:10;9590:29;;:6;:9;9597:1;9590:9;;;;;;;;;;;:15;;;;;;;;;;;;:29;;;9586:73;;9636:11;;;;;:::i;:::-;;;;9586:73;9570:3;;;;;:::i;:::-;;;;9532:134;;;;9674:18;9705:9;9695:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;9674:41;;9734:1;9722:13;;9793:6;9802:1;9793:10;;9788:177;9810:14;9805:1;:19;9788:177;;9865:10;9846:29;;:6;:9;9853:1;9846:9;;;;;;;;;;;:15;;;;;;;;;;;;:29;;;9842:116;;9911:6;:9;9918:1;9911:9;;;;;;;;;;;9892:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;9898:9;9892:16;;;;;;;;:::i;:::-;;;;;;;:28;;;;9935:11;;;;;:::i;:::-;;;;9842:116;9826:3;;;;;:::i;:::-;;;;9788:177;;;;9980:5;9973:12;;;;;9394:595;:::o;2471:98:4:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;4071:15;:24;4087:7;4071:24;;;;;;;;;;;;;;;;;;;;;4064:31;;3935:167;;;:::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;3605:11;;:2;:11;;;3597:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;3702:5;3686:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3711:37;3728:5;3735:12;:10;:12::i;:::-;3711:16;:37::i;:::-;3686:62;3665:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;10285:188:17:-;10341:4;641:1;10378:34;;:8;:12;10387:2;10378:12;;;;;;;;;;;:19;;;;;;;;;;;;:34;;;:87;;;;;10450:15;10429:8;:12;10438:2;10429:12;;;;;;;;;;;:18;;;:36;10378:87;10358:107;;10285:188;;;:::o;664:42::-;705:1;664:42;:::o;5926:1038::-;2261:21:3;:19;:21::i;:::-;6018:24:17::1;6032:9;6018:13;:24::i;:::-;6017:25;6009:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;6081:23;6107:8;:19;6116:9;6107:19;;;;;;;;;;;6081:45;;6137:14;6154:13;:24;6168:9;6154:24;;;;;;;;;;;;;;;;;;;;;6137:41;;6226:7;:14;;;;;;;;;;;;6212:28;;:10;:28;;;:52;;;;6258:6;6244:20;;:10;:20;;;6212:52;6190:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;6369:1;6351:20;;:6;:20;;;6348:353;;6387:49;6405:4;6412:6;6420:7;:15;;;6387:9;:49::i;:::-;6453:14;6470:4;:15;6475:9;6470:15;;;;;;;;;;;:23;6486:6;6470:23;;;;;;;;;;;;;;;;6453:40;;6535:1;6509:4;:15;6514:9;6509:15;;;;;;;;;;;:23;6525:6;6509:23;;;;;;;;;;;;;;;:27;;;;6551:46;6573:7;:14;;;;;;;;;;;;6590:6;6551:13;:46::i;:::-;6373:238;6348:353;;;6632:57;6650:4;6657:7;:14;;;;;;;;;;;;6673:7;:15;;;6632:9;:57::i;:::-;6348:353;705:1;6713:7;:14;;;:33;;;;;;;;;;;;;;;;;;6849:6;6764:192;;6819:7;:14;;;;;;;;;;;;6764:192;;;6795:9;6871:4;:15;6876:9;6871:15;;;;;;;;;;;:23;6887:6;6871:23;;;;;;;;;;;;;;;;6764:192;;;;;;;:::i;:::-;;;;;;;;5998:966;;2303:20:3::0;:18;:20::i;:::-;5926:1038:17;:::o;605:37::-;641:1;605:37;:::o;4612:296:4:-;4771:41;4790:12;:10;:12::i;:::-;4804:7;4771:18;:41::i;:::-;4763:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;4873:28;4883:4;4889:2;4893:7;4873:9;:28::i;:::-;4612:296;;;:::o;909:59:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4974:149:4:-;5077:39;5094:4;5100:2;5104:7;5077:39;;;;;;;;;;;;:16;:39::i;:::-;4974:149;;;:::o;975:48:17:-;;;;;;;;;;;;;;;;;;;;;;:::o;6972:801::-;2261:21:3;:19;:21::i;:::-;7051:24:17::1;7065:9;7051:13;:24::i;:::-;7043:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;7108:23;7134:8;:19;7143:9;7134:19;;;;;;;;;;;7108:45;;7186:7;:14;;;;;;;;;;;;7172:28;;:10;:28;;::::0;7164:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;7244:14;7291:9;7261:4;:15;7266:9;7261:15;;;;;;;;;;;:27;7277:10;7261:27;;;;;;;;;;;;;;;;:39;;;;:::i;:::-;7244:56;;7329:7;:13;;;7319:6;:23;;7311:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;7432:9;7401:4;:15;7406:9;7401:15;;;;;;;;;;;:27;7417:10;7401:27;;;;;;;;;;;;;;;;:40;;;;;;;:::i;:::-;;;;;;;;7479:10;7452:13;:24;7466:9;7452:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;7502:17;7538:19;;7522:7;:13;;;:35;;;;:::i;:::-;7502:55;;7600:9;7584:7;:13;;;:25;;;;:::i;:::-;7568:7;:13;;:41;;;;7677:10;7627:138;;;7652:9;7703:6;7627:138;;;;;;;:::i;:::-;;;;;;;;7032:741;;;2303:20:3::0;:18;:20::i;:::-;6972:801:17;:::o;4870:959::-;4976:7;4996:22;5021:18;:8;:16;:18::i;:::-;4996:43;;5050:17;5070:14;5050:34;;5095:15;5113;5095:33;;5139:13;5165:17;5155:7;:27;;;;:::i;:::-;5139:43;;5217:287;;;;;;;;5256:10;5217:287;;;;;;5306:4;5217:287;;;;;;5336:7;5217:287;;;;5365:5;5217:287;;;;5395:5;5217:287;;;;5458:7;5217:287;;;;5487:5;5217:287;;;;641:1;5217:287;;;;;5195:8;:19;5204:9;5195:19;;;;;;;;;;;:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5517:45;5527:10;5547:4;5554:7;5517:9;:45::i;:::-;5634:10;5580:212;;;5609:9;5660:5;5681:7;5704;5727:5;5580:212;;;;;;;;;;:::i;:::-;;;;;;;;5812:9;5805:16;;;;;;4870:959;;;;;:::o;2190:219:4:-;2262:7;2281:13;2297:17;2306:7;2297:8;:17::i;:::-;2281:33;;2349:1;2332:19;;:5;:19;;;2324:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2397:5;2390:12;;;2190:219;;;:::o;729:39:17:-;;;;:::o;1929:204:4:-;2001:7;2045:1;2028:19;;:5;:19;;;2020:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2110:9;:16;2120:5;2110:16;;;;;;;;;;;;;;;;2103:23;;1929:204;;;:::o;10091:115:17:-;10151:7;10177:6;:15;10184:7;10177:15;;;;;;;;;;;:21;;;10170:28;;10091:115;;;:::o;2633:102:4:-;2689:13;2721:7;2714:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2633:102;:::o;4169:153::-;4263:52;4282:12;:10;:12::i;:::-;4296:8;4306;4263:18;:52::i;:::-;4169:153;;:::o;5189:276::-;5319:41;5338:12;:10;:12::i;:::-;5352:7;5319:18;:41::i;:::-;5311:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5420:38;5434:4;5440:2;5444:7;5453:4;5420:13;:38::i;:::-;5189:276;;;;:::o;3639:493:17:-;3749:7;3769:20;:8;:18;:20::i;:::-;3821:22;3846:18;:8;:16;:18::i;:::-;3821:43;;3898:32;3904:10;3915:14;3898:5;:32::i;:::-;3955:38;3968:14;3983:9;3955:12;:38::i;:::-;4032:60;4053:5;4059:14;4074:17;4032:20;:60::i;:::-;;4110:14;4103:21;;;3639:493;;;;;:::o;3025:430::-;3101:7;3121:20;:8;:18;:20::i;:::-;3173:22;3198:18;:8;:16;:18::i;:::-;3173:43;;3250:32;3256:10;3267:14;3250:5;:32::i;:::-;3307:38;3320:14;3335:9;3307:12;:38::i;:::-;3384:31;3394:14;3409:5;3384:9;:31::i;:::-;3433:14;3426:21;;;3025:430;;;;:::o;806:608:7:-;879:13;904:23;919:7;904:14;:23::i;:::-;938;964:10;:19;975:7;964:19;;;;;;;;;;;938:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;993:18;1014:10;:8;:10::i;:::-;993:31;;1119:1;1103:4;1097:18;:23;1093:70;;1143:9;1136:16;;;;;;1093:70;1291:1;1271:9;1265:23;:27;1261:106;;;1339:4;1345:9;1322:33;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1308:48;;;;;;1261:106;1384:23;1399:7;1384:14;:23::i;:::-;1377:30;;;;806:608;;;;:::o;859:43:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4388:162:4:-;4485:4;4508:18;:25;4527:5;4508:25;;;;;;;;;;;;;;;:35;4534:8;4508:35;;;;;;;;;;;;;;;;;;;;;;;;;4501:42;;4388:162;;;;:::o;7889:843:17:-;7951:14;7968:6;:15;7975:7;7968:15;;;;;;;;;;;:21;;;7951:38;;8000:14;8017:6;:15;8024:7;8017:15;;;;;;;;;;;:22;;;;;;;;;;;;8000:39;;8071:6;8058:9;:19;8050:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;8110:12;8135:6;8127:20;;8156:6;8127:40;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8109:58;;;8212:7;8204:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;8281:10;8249:6;:15;8256:7;8249:15;;;;;;;;;;;:21;;;:43;;;;;;;;;;;;;;;;;;8344:1;8303:6;:15;8310:7;8303:15;;;;;;;;;;;:22;;;:44;;;;;;;;;;;;;;;;;;8412:4;8389:6;:15;8396:7;8389:15;;;;;;;;;;;:20;;;:27;;;;;;;;;;;;;;;;;;8427:22;:10;:20;:22::i;:::-;8460:43;8478:4;8484:10;8495:7;8460:9;:43::i;:::-;8553:171;8578:7;8600:10;8633:1;8650:6;8671:4;8553:171;;;;;;;;;;:::i;:::-;;;;;;;;7940:792;;;7889:843;:::o;8802:298::-;8844:12;8869:19;8891:18;:8;:16;:18::i;:::-;8869:40;;8920:18;8951:14;8941:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;8920:46;;8982:6;8977:91;8998:5;:12;8994:1;:16;8977:91;;;9043:6;:13;9054:1;9050;:5;;;;:::i;:::-;9043:13;;;;;;;;;;;9032:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:5;9038:1;9032:8;;;;;;;;:::i;:::-;;;;;;;:24;;;;9012:3;;;;;:::i;:::-;;;;8977:91;;;;9087:5;9080:12;;;;8802:298;:::o;1570:300:4:-;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;827:112:11:-;892:7;918;:14;;;911:21;;827:112;;;:::o;13240:133:4:-;13321:16;13329:7;13321;:16::i;:::-;13313:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;13240:133;:::o;640:96:10:-;693:7;719:10;712:17;;640:96;:::o;12572:171:4:-;12673:2;12646:15;:24;12662:7;12646:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;12728:7;12724:2;12690:46;;12699:23;12714:7;12699:14;:23::i;:::-;12690:46;;;;;;;;;;;;12572:171;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;11257:1203:4:-;11381:4;11354:31;;:23;11369:7;11354:14;:23::i;:::-;:31;;;11346:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11459:1;11445:16;;:2;:16;;;11437:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;11513:42;11534:4;11540:2;11544:7;11553:1;11513:20;:42::i;:::-;11682:4;11655:31;;:23;11670:7;11655:14;:23::i;:::-;:31;;;11647:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;11797:15;:24;11813:7;11797:24;;;;;;;;;;;;11790:31;;;;;;;;;;;12284:1;12265:9;:15;12275:4;12265:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;12316:1;12299:9;:13;12309:2;12299:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;12356:2;12337:7;:16;12345:7;12337:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;12393:7;12389:2;12374:27;;12383:4;12374:27;;;;;;;;;;;;12412:41;12432:4;12438:2;12442:7;12451:1;12412:19;:41::i;:::-;11257:1203;;;:::o;10481:338:17:-;10574:1;10564:6;:11;10560:50;10592:7;10560:50;10642:1;10628:16;;:2;:16;;;10620:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;10699:17;10722:2;:7;;10737:6;10722:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10698:50;;;10767:12;10759:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;10549:270;10481:338;;;:::o;2629:209:3:-;1716:1;2809:7;:22;;;;2629:209::o;7404:261:4:-;7497:4;7513:13;7529:23;7544:7;7529:14;:23::i;:::-;7513:39;;7581:5;7570:16;;:7;:16;;;:52;;;;7590:32;7607:5;7614:7;7590:16;:32::i;:::-;7570:52;:87;;;;7650:7;7626:31;;:20;7638:7;7626:11;:20::i;:::-;:31;;;7570:87;7562:96;;;7404:261;;;;:::o;6702:115::-;6768:7;6794;:16;6802:7;6794:16;;;;;;;;;;;;;;;;;;;;;6787:23;;6702:115;;;:::o;12879:277::-;12999:8;12990:17;;:5;:17;;;12982:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;13085:8;13047:18;:25;13066:5;13047:25;;;;;;;;;;;;;;;:35;13073:8;13047:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13130:8;13108:41;;13123:5;13108:41;;;13140:8;13108:41;;;;;;:::i;:::-;;;;;;;;12879:277;;;:::o;6326:267::-;6438:28;6448:4;6454:2;6458:7;6438:9;:28::i;:::-;6484:47;6507:4;6513:2;6517:7;6526:4;6484:22;:47::i;:::-;6476:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6326:267;;;;:::o;945:123:11:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;8925:920:4:-;9018:1;9004:16;;:2;:16;;;8996:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;9076:16;9084:7;9076;:16::i;:::-;9075:17;9067:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9136:48;9165:1;9169:2;9173:7;9182:1;9136:20;:48::i;:::-;9280:16;9288:7;9280;:16::i;:::-;9279:17;9271:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;9688:1;9671:9;:13;9681:2;9671:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9729:2;9710:7;:16;9718:7;9710:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9772:7;9768:2;9747:33;;9764:1;9747:33;;;;;;;;;;;;9791:47;9819:1;9823:2;9827:7;9836:1;9791:19;:47::i;:::-;8925:920;;:::o;1599:253:7:-;1698:16;1706:7;1698;:16::i;:::-;1690:75;;;;;;;;;;;;:::i;:::-;;;;;;;;;1797:9;1775:10;:19;1786:7;1775:19;;;;;;;;;;;:31;;;;;;:::i;:::-;;1822:23;1837:7;1822:23;;;;;;:::i;:::-;;;;;;;;1599:253;;:::o;4140:579:17:-;4207:22;4232:18;:8;:16;:18::i;:::-;4207:43;;4282:123;;;;;;;;4312:4;4282:123;;;;;;4337:10;4282:123;;;;;;4359:5;4282:123;;;;4375:5;4282:123;;;;;;4391:7;4282:123;;;4257:6;:22;4264:14;4257:22;;;;;;;;;;;:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4418:43;4428:10;4447:4;4453:7;4418:9;:43::i;:::-;4533:176;4558:7;4588:4;4608:10;4633:5;4653;4533:176;;;;;;;;;;:::i;:::-;;;;;;;;4200:519;4140:579;;:::o;3319:92:4:-;3370:13;3395:9;;;;;;;;;;;;;;3319:92;:::o;2801:276::-;2874:13;2899:23;2914:7;2899:14;:23::i;:::-;2933:21;2957:10;:8;:10::i;:::-;2933:34;;3008:1;2990:7;2984:21;:25;:86;;;;;;;;;;;;;;;;;3036:7;3045:18;:7;:16;:18::i;:::-;3019:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2984:86;2977:93;;;2801:276;;;:::o;829:155:13:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;7120:126:4:-;7185:4;7237:1;7208:31;;:17;7217:7;7208:8;:17::i;:::-;:31;;;;7201:38;;7120:126;;;:::o;15472:116::-;;;;;:::o;16294:115::-;;;;;:::o;13925:831::-;14074:4;14094:15;:2;:13;;;:15::i;:::-;14090:660;;;14145:2;14129:36;;;14166:12;:10;:12::i;:::-;14180:4;14186:7;14195:4;14129:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;14125:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14384:1;14367:6;:13;:18;14363:321;;14409:60;;;;;;;;;;:::i;:::-;;;;;;;;14363:321;14636:6;14630:13;14621:6;14617:2;14613:15;14606:38;14125:573;14260:41;;;14250:51;;;:6;:51;;;;14243:58;;;;;14090:660;14735:4;14728:11;;13925:831;;;;;;;:::o;447:696:12:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;1412:320:9:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;10139:916:15:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:18:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:126::-;2246:7;2286:42;2279:5;2275:54;2264:65;;2209:126;;;:::o;2341:96::-;2378:7;2407:24;2425:5;2407:24;:::i;:::-;2396:35;;2341:96;;;:::o;2443:108::-;2520:24;2538:5;2520:24;:::i;:::-;2515:3;2508:37;2443:108;;:::o;2557:::-;2634:24;2652:5;2634:24;:::i;:::-;2629:3;2622:37;2557:108;;:::o;2671:99::-;2742:21;2757:5;2742:21;:::i;:::-;2737:3;2730:34;2671:99;;:::o;2822:1022::-;2961:4;2956:3;2952:14;3049:4;3042:5;3038:16;3032:23;3068:63;3125:4;3120:3;3116:14;3102:12;3068:63;:::i;:::-;2976:165;3225:4;3218:5;3214:16;3208:23;3244:63;3301:4;3296:3;3292:14;3278:12;3244:63;:::i;:::-;3151:166;3400:4;3393:5;3389:16;3383:23;3419:63;3476:4;3471:3;3467:14;3453:12;3419:63;:::i;:::-;3327:165;3574:4;3567:5;3563:16;3557:23;3593:57;3644:4;3639:3;3635:14;3621:12;3593:57;:::i;:::-;3502:158;3745:4;3738:5;3734:16;3728:23;3764:63;3821:4;3816:3;3812:14;3798:12;3764:63;:::i;:::-;3670:167;2930:914;2822:1022;;:::o;3850:307::-;3985:4;4023:3;4012:9;4008:19;4000:27;;4037:113;4147:1;4136:9;4132:17;4123:6;4037:113;:::i;:::-;3850:307;;;;:::o;4163:135::-;4251:6;4285:5;4279:12;4269:22;;4163:135;;;:::o;4304:205::-;4424:11;4458:6;4453:3;4446:19;4498:4;4493:3;4489:14;4474:29;;4304:205;;;;:::o;4515:153::-;4603:4;4626:3;4618:11;;4656:4;4651:3;4647:14;4639:22;;4515:153;;;:::o;4720:1012::-;4849:4;4844:3;4840:14;4937:4;4930:5;4926:16;4920:23;4956:63;5013:4;5008:3;5004:14;4990:12;4956:63;:::i;:::-;4864:165;5113:4;5106:5;5102:16;5096:23;5132:63;5189:4;5184:3;5180:14;5166:12;5132:63;:::i;:::-;5039:166;5288:4;5281:5;5277:16;5271:23;5307:63;5364:4;5359:3;5355:14;5341:12;5307:63;:::i;:::-;5215:165;5462:4;5455:5;5451:16;5445:23;5481:57;5532:4;5527:3;5523:14;5509:12;5481:57;:::i;:::-;5390:158;5633:4;5626:5;5622:16;5616:23;5652:63;5709:4;5704:3;5700:14;5686:12;5652:63;:::i;:::-;5558:167;4818:914;4720:1012;;:::o;5738:263::-;5849:10;5870:88;5954:3;5946:6;5870:88;:::i;:::-;5990:4;5985:3;5981:14;5967:28;;5738:263;;;;:::o;6007:134::-;6098:4;6130;6125:3;6121:14;6113:22;;6007:134;;;:::o;6197:900::-;6358:3;6387:75;6456:5;6387:75;:::i;:::-;6478:107;6578:6;6573:3;6478:107;:::i;:::-;6471:114;;6609:77;6680:5;6609:77;:::i;:::-;6709:7;6740:1;6725:347;6750:6;6747:1;6744:13;6725:347;;;6826:6;6820:13;6853:105;6954:3;6939:13;6853:105;:::i;:::-;6846:112;;6981:81;7055:6;6981:81;:::i;:::-;6971:91;;6785:287;6772:1;6769;6765:9;6760:14;;6725:347;;;6729:14;7088:3;7081:10;;6363:734;;;6197:900;;;;:::o;7103:457::-;7288:4;7326:2;7315:9;7311:18;7303:26;;7375:9;7369:4;7365:20;7361:1;7350:9;7346:17;7339:47;7403:150;7548:4;7539:6;7403:150;:::i;:::-;7395:158;;7103:457;;;;:::o;7566:99::-;7618:6;7652:5;7646:12;7636:22;;7566:99;;;:::o;7671:169::-;7755:11;7789:6;7784:3;7777:19;7829:4;7824:3;7820:14;7805:29;;7671:169;;;;:::o;7846:246::-;7927:1;7937:113;7951:6;7948:1;7945:13;7937:113;;;8036:1;8031:3;8027:11;8021:18;8017:1;8012:3;8008:11;8001:39;7973:2;7970:1;7966:10;7961:15;;7937:113;;;8084:1;8075:6;8070:3;8066:16;8059:27;7908:184;7846:246;;;:::o;8098:102::-;8139:6;8190:2;8186:7;8181:2;8174:5;8170:14;8166:28;8156:38;;8098:102;;;:::o;8206:377::-;8294:3;8322:39;8355:5;8322:39;:::i;:::-;8377:71;8441:6;8436:3;8377:71;:::i;:::-;8370:78;;8457:65;8515:6;8510:3;8503:4;8496:5;8492:16;8457:65;:::i;:::-;8547:29;8569:6;8547:29;:::i;:::-;8542:3;8538:39;8531:46;;8298:285;8206:377;;;;:::o;8589:313::-;8702:4;8740:2;8729:9;8725:18;8717:26;;8789:9;8783:4;8779:20;8775:1;8764:9;8760:17;8753:47;8817:78;8890:4;8881:6;8817:78;:::i;:::-;8809:86;;8589:313;;;;:::o;8908:118::-;8995:24;9013:5;8995:24;:::i;:::-;8990:3;8983:37;8908:118;;:::o;9032:222::-;9125:4;9163:2;9152:9;9148:18;9140:26;;9176:71;9244:1;9233:9;9229:17;9220:6;9176:71;:::i;:::-;9032:222;;;;:::o;9260:122::-;9333:24;9351:5;9333:24;:::i;:::-;9326:5;9323:35;9313:63;;9372:1;9369;9362:12;9313:63;9260:122;:::o;9388:139::-;9434:5;9472:6;9459:20;9450:29;;9488:33;9515:5;9488:33;:::i;:::-;9388:139;;;;:::o;9533:474::-;9601:6;9609;9658:2;9646:9;9637:7;9633:23;9629:32;9626:119;;;9664:79;;:::i;:::-;9626:119;9784:1;9809:53;9854:7;9845:6;9834:9;9830:22;9809:53;:::i;:::-;9799:63;;9755:117;9911:2;9937:53;9982:7;9973:6;9962:9;9958:22;9937:53;:::i;:::-;9927:63;;9882:118;9533:474;;;;;:::o;10013:86::-;10048:7;10088:4;10081:5;10077:16;10066:27;;10013:86;;;:::o;10105:112::-;10188:22;10204:5;10188:22;:::i;:::-;10183:3;10176:35;10105:112;;:::o;10223:214::-;10312:4;10350:2;10339:9;10335:18;10327:26;;10363:67;10427:1;10416:9;10412:17;10403:6;10363:67;:::i;:::-;10223:214;;;;:::o;10443:619::-;10520:6;10528;10536;10585:2;10573:9;10564:7;10560:23;10556:32;10553:119;;;10591:79;;:::i;:::-;10553:119;10711:1;10736:53;10781:7;10772:6;10761:9;10757:22;10736:53;:::i;:::-;10726:63;;10682:117;10838:2;10864:53;10909:7;10900:6;10889:9;10885:22;10864:53;:::i;:::-;10854:63;;10809:118;10966:2;10992:53;11037:7;11028:6;11017:9;11013:22;10992:53;:::i;:::-;10982:63;;10937:118;10443:619;;;;;:::o;11068:474::-;11136:6;11144;11193:2;11181:9;11172:7;11168:23;11164:32;11161:119;;;11199:79;;:::i;:::-;11161:119;11319:1;11344:53;11389:7;11380:6;11369:9;11365:22;11344:53;:::i;:::-;11334:63;;11290:117;11446:2;11472:53;11517:7;11508:6;11497:9;11493:22;11472:53;:::i;:::-;11462:63;;11417:118;11068:474;;;;;:::o;11548:118::-;11635:24;11653:5;11635:24;:::i;:::-;11630:3;11623:37;11548:118;;:::o;11672:222::-;11765:4;11803:2;11792:9;11788:18;11780:26;;11816:71;11884:1;11873:9;11869:17;11860:6;11816:71;:::i;:::-;11672:222;;;;:::o;11900:619::-;11977:6;11985;11993;12042:2;12030:9;12021:7;12017:23;12013:32;12010:119;;;12048:79;;:::i;:::-;12010:119;12168:1;12193:53;12238:7;12229:6;12218:9;12214:22;12193:53;:::i;:::-;12183:63;;12139:117;12295:2;12321:53;12366:7;12357:6;12346:9;12342:22;12321:53;:::i;:::-;12311:63;;12266:118;12423:2;12449:53;12494:7;12485:6;12474:9;12470:22;12449:53;:::i;:::-;12439:63;;12394:118;11900:619;;;;;:::o;12525:329::-;12584:6;12633:2;12621:9;12612:7;12608:23;12604:32;12601:119;;;12639:79;;:::i;:::-;12601:119;12759:1;12784:53;12829:7;12820:6;12809:9;12805:22;12784:53;:::i;:::-;12774:63;;12730:117;12525:329;;;;:::o;12860:116::-;12930:21;12945:5;12930:21;:::i;:::-;12923:5;12920:32;12910:60;;12966:1;12963;12956:12;12910:60;12860:116;:::o;12982:133::-;13025:5;13063:6;13050:20;13041:29;;13079:30;13103:5;13079:30;:::i;:::-;12982:133;;;;:::o;13121:468::-;13186:6;13194;13243:2;13231:9;13222:7;13218:23;13214:32;13211:119;;;13249:79;;:::i;:::-;13211:119;13369:1;13394:53;13439:7;13430:6;13419:9;13415:22;13394:53;:::i;:::-;13384:63;;13340:117;13496:2;13522:50;13564:7;13555:6;13544:9;13540:22;13522:50;:::i;:::-;13512:60;;13467:115;13121:468;;;;;:::o;13595:117::-;13704:1;13701;13694:12;13718:117;13827:1;13824;13817:12;13841:180;13889:77;13886:1;13879:88;13986:4;13983:1;13976:15;14010:4;14007:1;14000:15;14027:281;14110:27;14132:4;14110:27;:::i;:::-;14102:6;14098:40;14240:6;14228:10;14225:22;14204:18;14192:10;14189:34;14186:62;14183:88;;;14251:18;;:::i;:::-;14183:88;14291:10;14287:2;14280:22;14070:238;14027:281;;:::o;14314:129::-;14348:6;14375:20;;:::i;:::-;14365:30;;14404:33;14432:4;14424:6;14404:33;:::i;:::-;14314:129;;;:::o;14449:307::-;14510:4;14600:18;14592:6;14589:30;14586:56;;;14622:18;;:::i;:::-;14586:56;14660:29;14682:6;14660:29;:::i;:::-;14652:37;;14744:4;14738;14734:15;14726:23;;14449:307;;;:::o;14762:146::-;14859:6;14854:3;14849;14836:30;14900:1;14891:6;14886:3;14882:16;14875:27;14762:146;;;:::o;14914:423::-;14991:5;15016:65;15032:48;15073:6;15032:48;:::i;:::-;15016:65;:::i;:::-;15007:74;;15104:6;15097:5;15090:21;15142:4;15135:5;15131:16;15180:3;15171:6;15166:3;15162:16;15159:25;15156:112;;;15187:79;;:::i;:::-;15156:112;15277:54;15324:6;15319:3;15314;15277:54;:::i;:::-;14997:340;14914:423;;;;;:::o;15356:338::-;15411:5;15460:3;15453:4;15445:6;15441:17;15437:27;15427:122;;15468:79;;:::i;:::-;15427:122;15585:6;15572:20;15610:78;15684:3;15676:6;15669:4;15661:6;15657:17;15610:78;:::i;:::-;15601:87;;15417:277;15356:338;;;;:::o;15700:943::-;15795:6;15803;15811;15819;15868:3;15856:9;15847:7;15843:23;15839:33;15836:120;;;15875:79;;:::i;:::-;15836:120;15995:1;16020:53;16065:7;16056:6;16045:9;16041:22;16020:53;:::i;:::-;16010:63;;15966:117;16122:2;16148:53;16193:7;16184:6;16173:9;16169:22;16148:53;:::i;:::-;16138:63;;16093:118;16250:2;16276:53;16321:7;16312:6;16301:9;16297:22;16276:53;:::i;:::-;16266:63;;16221:118;16406:2;16395:9;16391:18;16378:32;16437:18;16429:6;16426:30;16423:117;;;16459:79;;:::i;:::-;16423:117;16564:62;16618:7;16609:6;16598:9;16594:22;16564:62;:::i;:::-;16554:72;;16349:287;15700:943;;;;;;;:::o;16649:308::-;16711:4;16801:18;16793:6;16790:30;16787:56;;;16823:18;;:::i;:::-;16787:56;16861:29;16883:6;16861:29;:::i;:::-;16853:37;;16945:4;16939;16935:15;16927:23;;16649:308;;;:::o;16963:425::-;17041:5;17066:66;17082:49;17124:6;17082:49;:::i;:::-;17066:66;:::i;:::-;17057:75;;17155:6;17148:5;17141:21;17193:4;17186:5;17182:16;17231:3;17222:6;17217:3;17213:16;17210:25;17207:112;;;17238:79;;:::i;:::-;17207:112;17328:54;17375:6;17370:3;17365;17328:54;:::i;:::-;17047:341;16963:425;;;;;:::o;17408:340::-;17464:5;17513:3;17506:4;17498:6;17494:17;17490:27;17480:122;;17521:79;;:::i;:::-;17480:122;17638:6;17625:20;17663:79;17738:3;17730:6;17723:4;17715:6;17711:17;17663:79;:::i;:::-;17654:88;;17470:278;17408:340;;;;:::o;17754:799::-;17841:6;17849;17857;17906:2;17894:9;17885:7;17881:23;17877:32;17874:119;;;17912:79;;:::i;:::-;17874:119;18060:1;18049:9;18045:17;18032:31;18090:18;18082:6;18079:30;18076:117;;;18112:79;;:::i;:::-;18076:117;18217:63;18272:7;18263:6;18252:9;18248:22;18217:63;:::i;:::-;18207:73;;18003:287;18329:2;18355:53;18400:7;18391:6;18380:9;18376:22;18355:53;:::i;:::-;18345:63;;18300:118;18457:2;18483:53;18528:7;18519:6;18508:9;18504:22;18483:53;:::i;:::-;18473:63;;18428:118;17754:799;;;;;:::o;18559:654::-;18637:6;18645;18694:2;18682:9;18673:7;18669:23;18665:32;18662:119;;;18700:79;;:::i;:::-;18662:119;18848:1;18837:9;18833:17;18820:31;18878:18;18870:6;18867:30;18864:117;;;18900:79;;:::i;:::-;18864:117;19005:63;19060:7;19051:6;19040:9;19036:22;19005:63;:::i;:::-;18995:73;;18791:287;19117:2;19143:53;19188:7;19179:6;19168:9;19164:22;19143:53;:::i;:::-;19133:63;;19088:118;18559:654;;;;;:::o;19219:989::-;19504:4;19542:3;19531:9;19527:19;19519:27;;19556:71;19624:1;19613:9;19609:17;19600:6;19556:71;:::i;:::-;19637:72;19705:2;19694:9;19690:18;19681:6;19637:72;:::i;:::-;19719;19787:2;19776:9;19772:18;19763:6;19719:72;:::i;:::-;19801;19869:2;19858:9;19854:18;19845:6;19801:72;:::i;:::-;19883:73;19951:3;19940:9;19936:19;19927:6;19883:73;:::i;:::-;19966;20034:3;20023:9;20019:19;20010:6;19966:73;:::i;:::-;20049;20117:3;20106:9;20102:19;20093:6;20049:73;:::i;:::-;20132:69;20196:3;20185:9;20181:19;20172:6;20132:69;:::i;:::-;19219:989;;;;;;;;;;;:::o;20214:474::-;20282:6;20290;20339:2;20327:9;20318:7;20314:23;20310:32;20307:119;;;20345:79;;:::i;:::-;20307:119;20465:1;20490:53;20535:7;20526:6;20515:9;20511:22;20490:53;:::i;:::-;20480:63;;20436:117;20592:2;20618:53;20663:7;20654:6;20643:9;20639:22;20618:53;:::i;:::-;20608:63;;20563:118;20214:474;;;;;:::o;20694:180::-;20742:77;20739:1;20732:88;20839:4;20836:1;20829:15;20863:4;20860:1;20853:15;20880:233;20919:3;20942:24;20960:5;20942:24;:::i;:::-;20933:33;;20988:66;20981:5;20978:77;20975:103;;21058:18;;:::i;:::-;20975:103;21105:1;21098:5;21094:13;21087:20;;20880:233;;;:::o;21119:180::-;21167:77;21164:1;21157:88;21264:4;21261:1;21254:15;21288:4;21285:1;21278:15;21305:180;21353:77;21350:1;21343:88;21450:4;21447:1;21440:15;21474:4;21471:1;21464:15;21491:320;21535:6;21572:1;21566:4;21562:12;21552:22;;21619:1;21613:4;21609:12;21640:18;21630:81;;21696:4;21688:6;21684:17;21674:27;;21630:81;21758:2;21750:6;21747:14;21727:18;21724:38;21721:84;;21777:18;;:::i;:::-;21721:84;21542:269;21491:320;;;:::o;21817:220::-;21957:34;21953:1;21945:6;21941:14;21934:58;22026:3;22021:2;22013:6;22009:15;22002:28;21817:220;:::o;22043:366::-;22185:3;22206:67;22270:2;22265:3;22206:67;:::i;:::-;22199:74;;22282:93;22371:3;22282:93;:::i;:::-;22400:2;22395:3;22391:12;22384:19;;22043:366;;;:::o;22415:419::-;22581:4;22619:2;22608:9;22604:18;22596:26;;22668:9;22662:4;22658:20;22654:1;22643:9;22639:17;22632:47;22696:131;22822:4;22696:131;:::i;:::-;22688:139;;22415:419;;;:::o;22840:248::-;22980:34;22976:1;22968:6;22964:14;22957:58;23049:31;23044:2;23036:6;23032:15;23025:56;22840:248;:::o;23094:366::-;23236:3;23257:67;23321:2;23316:3;23257:67;:::i;:::-;23250:74;;23333:93;23422:3;23333:93;:::i;:::-;23451:2;23446:3;23442:12;23435:19;;23094:366;;;:::o;23466:419::-;23632:4;23670:2;23659:9;23655:18;23647:26;;23719:9;23713:4;23709:20;23705:1;23694:9;23690:17;23683:47;23747:131;23873:4;23747:131;:::i;:::-;23739:139;;23466:419;;;:::o;23891:171::-;24031:23;24027:1;24019:6;24015:14;24008:47;23891:171;:::o;24068:366::-;24210:3;24231:67;24295:2;24290:3;24231:67;:::i;:::-;24224:74;;24307:93;24396:3;24307:93;:::i;:::-;24425:2;24420:3;24416:12;24409:19;;24068:366;;;:::o;24440:419::-;24606:4;24644:2;24633:9;24629:18;24621:26;;24693:9;24687:4;24683:20;24679:1;24668:9;24664:17;24657:47;24721:131;24847:4;24721:131;:::i;:::-;24713:139;;24440:419;;;:::o;24865:229::-;25005:34;25001:1;24993:6;24989:14;24982:58;25074:12;25069:2;25061:6;25057:15;25050:37;24865:229;:::o;25100:366::-;25242:3;25263:67;25327:2;25322:3;25263:67;:::i;:::-;25256:74;;25339:93;25428:3;25339:93;:::i;:::-;25457:2;25452:3;25448:12;25441:19;;25100:366;;;:::o;25472:419::-;25638:4;25676:2;25665:9;25661:18;25653:26;;25725:9;25719:4;25715:20;25711:1;25700:9;25696:17;25689:47;25753:131;25879:4;25753:131;:::i;:::-;25745:139;;25472:419;;;:::o;25897:180::-;26037:32;26033:1;26025:6;26021:14;26014:56;25897:180;:::o;26083:366::-;26225:3;26246:67;26310:2;26305:3;26246:67;:::i;:::-;26239:74;;26322:93;26411:3;26322:93;:::i;:::-;26440:2;26435:3;26431:12;26424:19;;26083:366;;;:::o;26455:639::-;26677:4;26715:2;26704:9;26700:18;26692:26;;26728:71;26796:1;26785:9;26781:17;26772:6;26728:71;:::i;:::-;26809:72;26877:2;26866:9;26862:18;26853:6;26809:72;:::i;:::-;26928:9;26922:4;26918:20;26913:2;26902:9;26898:18;26891:48;26956:131;27082:4;26956:131;:::i;:::-;26948:139;;26455:639;;;;;:::o;27100:232::-;27240:34;27236:1;27228:6;27224:14;27217:58;27309:15;27304:2;27296:6;27292:15;27285:40;27100:232;:::o;27338:366::-;27480:3;27501:67;27565:2;27560:3;27501:67;:::i;:::-;27494:74;;27577:93;27666:3;27577:93;:::i;:::-;27695:2;27690:3;27686:12;27679:19;;27338:366;;;:::o;27710:419::-;27876:4;27914:2;27903:9;27899:18;27891:26;;27963:9;27957:4;27953:20;27949:1;27938:9;27934:17;27927:47;27991:131;28117:4;27991:131;:::i;:::-;27983:139;;27710:419;;;:::o;28135:167::-;28275:19;28271:1;28263:6;28259:14;28252:43;28135:167;:::o;28308:366::-;28450:3;28471:67;28535:2;28530:3;28471:67;:::i;:::-;28464:74;;28547:93;28636:3;28547:93;:::i;:::-;28665:2;28660:3;28656:12;28649:19;;28308:366;;;:::o;28680:419::-;28846:4;28884:2;28873:9;28869:18;28861:26;;28933:9;28927:4;28923:20;28919:1;28908:9;28904:17;28897:47;28961:131;29087:4;28961:131;:::i;:::-;28953:139;;28680:419;;;:::o;29105:176::-;29245:28;29241:1;29233:6;29229:14;29222:52;29105:176;:::o;29287:366::-;29429:3;29450:67;29514:2;29509:3;29450:67;:::i;:::-;29443:74;;29526:93;29615:3;29526:93;:::i;:::-;29644:2;29639:3;29635:12;29628:19;;29287:366;;;:::o;29659:419::-;29825:4;29863:2;29852:9;29848:18;29840:26;;29912:9;29906:4;29902:20;29898:1;29887:9;29883:17;29876:47;29940:131;30066:4;29940:131;:::i;:::-;29932:139;;29659:419;;;:::o;30084:191::-;30124:3;30143:20;30161:1;30143:20;:::i;:::-;30138:25;;30177:20;30195:1;30177:20;:::i;:::-;30172:25;;30220:1;30217;30213:9;30206:16;;30241:3;30238:1;30235:10;30232:36;;;30248:18;;:::i;:::-;30232:36;30084:191;;;;:::o;30281:228::-;30421:34;30417:1;30409:6;30405:14;30398:58;30490:11;30485:2;30477:6;30473:15;30466:36;30281:228;:::o;30515:366::-;30657:3;30678:67;30742:2;30737:3;30678:67;:::i;:::-;30671:74;;30754:93;30843:3;30754:93;:::i;:::-;30872:2;30867:3;30863:12;30856:19;;30515:366;;;:::o;30887:419::-;31053:4;31091:2;31080:9;31076:18;31068:26;;31140:9;31134:4;31130:20;31126:1;31115:9;31111:17;31104:47;31168:131;31294:4;31168:131;:::i;:::-;31160:139;;30887:419;;;:::o;31312:180::-;31360:77;31357:1;31350:88;31457:4;31454:1;31447:15;31481:4;31478:1;31471:15;31498:185;31538:1;31555:20;31573:1;31555:20;:::i;:::-;31550:25;;31589:20;31607:1;31589:20;:::i;:::-;31584:25;;31628:1;31618:35;;31633:18;;:::i;:::-;31618:35;31675:1;31672;31668:9;31663:14;;31498:185;;;;:::o;31689:174::-;31829:26;31825:1;31817:6;31813:14;31806:50;31689:174;:::o;31869:366::-;32011:3;32032:67;32096:2;32091:3;32032:67;:::i;:::-;32025:74;;32108:93;32197:3;32108:93;:::i;:::-;32226:2;32221:3;32217:12;32210:19;;31869:366;;;:::o;32241:639::-;32463:4;32501:2;32490:9;32486:18;32478:26;;32514:71;32582:1;32571:9;32567:17;32558:6;32514:71;:::i;:::-;32595:72;32663:2;32652:9;32648:18;32639:6;32595:72;:::i;:::-;32714:9;32708:4;32704:20;32699:2;32688:9;32684:18;32677:48;32742:131;32868:4;32742:131;:::i;:::-;32734:139;;32241:639;;;;;:::o;32886:178::-;33026:30;33022:1;33014:6;33010:14;33003:54;32886:178;:::o;33070:366::-;33212:3;33233:67;33297:2;33292:3;33233:67;:::i;:::-;33226:74;;33309:93;33398:3;33309:93;:::i;:::-;33427:2;33422:3;33418:12;33411:19;;33070:366;;;:::o;33442:972::-;33748:4;33786:3;33775:9;33771:19;33763:27;;33800:71;33868:1;33857:9;33853:17;33844:6;33800:71;:::i;:::-;33881:72;33949:2;33938:9;33934:18;33925:6;33881:72;:::i;:::-;33963;34031:2;34020:9;34016:18;34007:6;33963:72;:::i;:::-;34045;34113:2;34102:9;34098:18;34089:6;34045:72;:::i;:::-;34127:73;34195:3;34184:9;34180:19;34171:6;34127:73;:::i;:::-;34248:9;34242:4;34238:20;34232:3;34221:9;34217:19;34210:49;34276:131;34402:4;34276:131;:::i;:::-;34268:139;;33442:972;;;;;;;;:::o;34420:174::-;34560:26;34556:1;34548:6;34544:14;34537:50;34420:174;:::o;34600:366::-;34742:3;34763:67;34827:2;34822:3;34763:67;:::i;:::-;34756:74;;34839:93;34928:3;34839:93;:::i;:::-;34957:2;34952:3;34948:12;34941:19;;34600:366;;;:::o;34972:419::-;35138:4;35176:2;35165:9;35161:18;35153:26;;35225:9;35219:4;35215:20;35211:1;35200:9;35196:17;35189:47;35253:131;35379:4;35253:131;:::i;:::-;35245:139;;34972:419;;;:::o;35397:228::-;35537:34;35533:1;35525:6;35521:14;35514:58;35606:11;35601:2;35593:6;35589:15;35582:36;35397:228;:::o;35631:366::-;35773:3;35794:67;35858:2;35853:3;35794:67;:::i;:::-;35787:74;;35870:93;35959:3;35870:93;:::i;:::-;35988:2;35983:3;35979:12;35972:19;;35631:366;;;:::o;36003:419::-;36169:4;36207:2;36196:9;36192:18;36184:26;;36256:9;36250:4;36246:20;36242:1;36231:9;36227:17;36220:47;36284:131;36410:4;36284:131;:::i;:::-;36276:139;;36003:419;;;:::o;36428:148::-;36530:11;36567:3;36552:18;;36428:148;;;;:::o;36582:390::-;36688:3;36716:39;36749:5;36716:39;:::i;:::-;36771:89;36853:6;36848:3;36771:89;:::i;:::-;36764:96;;36869:65;36927:6;36922:3;36915:4;36908:5;36904:16;36869:65;:::i;:::-;36959:6;36954:3;36950:16;36943:23;;36692:280;36582:390;;;;:::o;36978:435::-;37158:3;37180:95;37271:3;37262:6;37180:95;:::i;:::-;37173:102;;37292:95;37383:3;37374:6;37292:95;:::i;:::-;37285:102;;37404:3;37397:10;;36978:435;;;;;:::o;37419:166::-;37559:18;37555:1;37547:6;37543:14;37536:42;37419:166;:::o;37591:366::-;37733:3;37754:67;37818:2;37813:3;37754:67;:::i;:::-;37747:74;;37830:93;37919:3;37830:93;:::i;:::-;37948:2;37943:3;37939:12;37932:19;;37591:366;;;:::o;37963:419::-;38129:4;38167:2;38156:9;38152:18;38144:26;;38216:9;38210:4;38206:20;38202:1;38191:9;38187:17;38180:47;38244:131;38370:4;38244:131;:::i;:::-;38236:139;;37963:419;;;:::o;38388:147::-;38489:11;38526:3;38511:18;;38388:147;;;;:::o;38541:114::-;;:::o;38661:398::-;38820:3;38841:83;38922:1;38917:3;38841:83;:::i;:::-;38834:90;;38933:93;39022:3;38933:93;:::i;:::-;39051:1;39046:3;39042:11;39035:18;;38661:398;;;:::o;39065:379::-;39249:3;39271:147;39414:3;39271:147;:::i;:::-;39264:154;;39435:3;39428:10;;39065:379;;;:::o;39450:164::-;39590:16;39586:1;39578:6;39574:14;39567:40;39450:164;:::o;39620:366::-;39762:3;39783:67;39847:2;39842:3;39783:67;:::i;:::-;39776:74;;39859:93;39948:3;39859:93;:::i;:::-;39977:2;39972:3;39968:12;39961:19;;39620:366;;;:::o;39992:419::-;40158:4;40196:2;40185:9;40181:18;40173:26;;40245:9;40239:4;40235:20;40231:1;40220:9;40216:17;40209:47;40273:131;40399:4;40273:131;:::i;:::-;40265:139;;39992:419;;;:::o;40417:171::-;40557:23;40553:1;40545:6;40541:14;40534:47;40417:171;:::o;40594:366::-;40736:3;40757:67;40821:2;40816:3;40757:67;:::i;:::-;40750:74;;40833:93;40922:3;40833:93;:::i;:::-;40951:2;40946:3;40942:12;40935:19;;40594:366;;;:::o;40966:960::-;41266:4;41304:3;41293:9;41289:19;41281:27;;41318:71;41386:1;41375:9;41371:17;41362:6;41318:71;:::i;:::-;41399:72;41467:2;41456:9;41452:18;41443:6;41399:72;:::i;:::-;41481;41549:2;41538:9;41534:18;41525:6;41481:72;:::i;:::-;41563;41631:2;41620:9;41616:18;41607:6;41563:72;:::i;:::-;41645:67;41707:3;41696:9;41692:19;41683:6;41645:67;:::i;:::-;41760:9;41754:4;41750:20;41744:3;41733:9;41729:19;41722:49;41788:131;41914:4;41788:131;:::i;:::-;41780:139;;40966:960;;;;;;;;:::o;41932:181::-;42072:33;42068:1;42060:6;42056:14;42049:57;41932:181;:::o;42119:366::-;42261:3;42282:67;42346:2;42341:3;42282:67;:::i;:::-;42275:74;;42358:93;42447:3;42358:93;:::i;:::-;42476:2;42471:3;42467:12;42460:19;;42119:366;;;:::o;42491:419::-;42657:4;42695:2;42684:9;42680:18;42672:26;;42744:9;42738:4;42734:20;42730:1;42719:9;42715:17;42708:47;42772:131;42898:4;42772:131;:::i;:::-;42764:139;;42491:419;;;:::o;42916:224::-;43056:34;43052:1;43044:6;43040:14;43033:58;43125:7;43120:2;43112:6;43108:15;43101:32;42916:224;:::o;43146:366::-;43288:3;43309:67;43373:2;43368:3;43309:67;:::i;:::-;43302:74;;43385:93;43474:3;43385:93;:::i;:::-;43503:2;43498:3;43494:12;43487:19;;43146:366;;;:::o;43518:419::-;43684:4;43722:2;43711:9;43707:18;43699:26;;43771:9;43765:4;43761:20;43757:1;43746:9;43742:17;43735:47;43799:131;43925:4;43799:131;:::i;:::-;43791:139;;43518:419;;;:::o;43943:223::-;44083:34;44079:1;44071:6;44067:14;44060:58;44152:6;44147:2;44139:6;44135:15;44128:31;43943:223;:::o;44172:366::-;44314:3;44335:67;44399:2;44394:3;44335:67;:::i;:::-;44328:74;;44411:93;44500:3;44411:93;:::i;:::-;44529:2;44524:3;44520:12;44513:19;;44172:366;;;:::o;44544:419::-;44710:4;44748:2;44737:9;44733:18;44725:26;;44797:9;44791:4;44787:20;44783:1;44772:9;44768:17;44761:47;44825:131;44951:4;44825:131;:::i;:::-;44817:139;;44544:419;;;:::o;44969:223::-;45109:34;45105:1;45097:6;45093:14;45086:58;45178:6;45173:2;45165:6;45161:15;45154:31;44969:223;:::o;45198:366::-;45340:3;45361:67;45425:2;45420:3;45361:67;:::i;:::-;45354:74;;45437:93;45526:3;45437:93;:::i;:::-;45555:2;45550:3;45546:12;45539:19;;45198:366;;;:::o;45570:419::-;45736:4;45774:2;45763:9;45759:18;45751:26;;45823:9;45817:4;45813:20;45809:1;45798:9;45794:17;45787:47;45851:131;45977:4;45851:131;:::i;:::-;45843:139;;45570:419;;;:::o;45995:177::-;46135:29;46131:1;46123:6;46119:14;46112:53;45995:177;:::o;46178:366::-;46320:3;46341:67;46405:2;46400:3;46341:67;:::i;:::-;46334:74;;46417:93;46506:3;46417:93;:::i;:::-;46535:2;46530:3;46526:12;46519:19;;46178:366;;;:::o;46550:419::-;46716:4;46754:2;46743:9;46739:18;46731:26;;46803:9;46797:4;46793:20;46789:1;46778:9;46774:17;46767:47;46831:131;46957:4;46831:131;:::i;:::-;46823:139;;46550:419;;;:::o;46975:175::-;47115:27;47111:1;47103:6;47099:14;47092:51;46975:175;:::o;47156:366::-;47298:3;47319:67;47383:2;47378:3;47319:67;:::i;:::-;47312:74;;47395:93;47484:3;47395:93;:::i;:::-;47513:2;47508:3;47504:12;47497:19;;47156:366;;;:::o;47528:419::-;47694:4;47732:2;47721:9;47717:18;47709:26;;47781:9;47775:4;47771:20;47767:1;47756:9;47752:17;47745:47;47809:131;47935:4;47809:131;:::i;:::-;47801:139;;47528:419;;;:::o;47953:237::-;48093:34;48089:1;48081:6;48077:14;48070:58;48162:20;48157:2;48149:6;48145:15;48138:45;47953:237;:::o;48196:366::-;48338:3;48359:67;48423:2;48418:3;48359:67;:::i;:::-;48352:74;;48435:93;48524:3;48435:93;:::i;:::-;48553:2;48548:3;48544:12;48537:19;;48196:366;;;:::o;48568:419::-;48734:4;48772:2;48761:9;48757:18;48749:26;;48821:9;48815:4;48811:20;48807:1;48796:9;48792:17;48785:47;48849:131;48975:4;48849:131;:::i;:::-;48841:139;;48568:419;;;:::o;48993:182::-;49133:34;49129:1;49121:6;49117:14;49110:58;48993:182;:::o;49181:366::-;49323:3;49344:67;49408:2;49403:3;49344:67;:::i;:::-;49337:74;;49420:93;49509:3;49420:93;:::i;:::-;49538:2;49533:3;49529:12;49522:19;;49181:366;;;:::o;49553:419::-;49719:4;49757:2;49746:9;49742:18;49734:26;;49806:9;49800:4;49796:20;49792:1;49781:9;49777:17;49770:47;49834:131;49960:4;49834:131;:::i;:::-;49826:139;;49553:419;;;:::o;49978:178::-;50118:30;50114:1;50106:6;50102:14;50095:54;49978:178;:::o;50162:366::-;50304:3;50325:67;50389:2;50384:3;50325:67;:::i;:::-;50318:74;;50401:93;50490:3;50401:93;:::i;:::-;50519:2;50514:3;50510:12;50503:19;;50162:366;;;:::o;50534:419::-;50700:4;50738:2;50727:9;50723:18;50715:26;;50787:9;50781:4;50777:20;50773:1;50762:9;50758:17;50751:47;50815:131;50941:4;50815:131;:::i;:::-;50807:139;;50534:419;;;:::o;50959:233::-;51099:34;51095:1;51087:6;51083:14;51076:58;51168:16;51163:2;51155:6;51151:15;51144:41;50959:233;:::o;51198:366::-;51340:3;51361:67;51425:2;51420:3;51361:67;:::i;:::-;51354:74;;51437:93;51526:3;51437:93;:::i;:::-;51555:2;51550:3;51546:12;51539:19;;51198:366;;;:::o;51570:419::-;51736:4;51774:2;51763:9;51759:18;51751:26;;51823:9;51817:4;51813:20;51809:1;51798:9;51794:17;51787:47;51851:131;51977:4;51851:131;:::i;:::-;51843:139;;51570:419;;;:::o;51995:141::-;52044:4;52067:3;52059:11;;52090:3;52087:1;52080:14;52124:4;52121:1;52111:18;52103:26;;51995:141;;;:::o;52142:93::-;52179:6;52226:2;52221;52214:5;52210:14;52206:23;52196:33;;52142:93;;;:::o;52241:107::-;52285:8;52335:5;52329:4;52325:16;52304:37;;52241:107;;;;:::o;52354:393::-;52423:6;52473:1;52461:10;52457:18;52496:97;52526:66;52515:9;52496:97;:::i;:::-;52614:39;52644:8;52633:9;52614:39;:::i;:::-;52602:51;;52686:4;52682:9;52675:5;52671:21;52662:30;;52735:4;52725:8;52721:19;52714:5;52711:30;52701:40;;52430:317;;52354:393;;;;;:::o;52753:60::-;52781:3;52802:5;52795:12;;52753:60;;;:::o;52819:142::-;52869:9;52902:53;52920:34;52929:24;52947:5;52929:24;:::i;:::-;52920:34;:::i;:::-;52902:53;:::i;:::-;52889:66;;52819:142;;;:::o;52967:75::-;53010:3;53031:5;53024:12;;52967:75;;;:::o;53048:269::-;53158:39;53189:7;53158:39;:::i;:::-;53219:91;53268:41;53292:16;53268:41;:::i;:::-;53260:6;53253:4;53247:11;53219:91;:::i;:::-;53213:4;53206:105;53124:193;53048:269;;;:::o;53323:73::-;53368:3;53323:73;:::o;53402:189::-;53479:32;;:::i;:::-;53520:65;53578:6;53570;53564:4;53520:65;:::i;:::-;53455:136;53402:189;;:::o;53597:186::-;53657:120;53674:3;53667:5;53664:14;53657:120;;;53728:39;53765:1;53758:5;53728:39;:::i;:::-;53701:1;53694:5;53690:13;53681:22;;53657:120;;;53597:186;;:::o;53789:543::-;53890:2;53885:3;53882:11;53879:446;;;53924:38;53956:5;53924:38;:::i;:::-;54008:29;54026:10;54008:29;:::i;:::-;53998:8;53994:44;54191:2;54179:10;54176:18;54173:49;;;54212:8;54197:23;;54173:49;54235:80;54291:22;54309:3;54291:22;:::i;:::-;54281:8;54277:37;54264:11;54235:80;:::i;:::-;53894:431;;53879:446;53789:543;;;:::o;54338:117::-;54392:8;54442:5;54436:4;54432:16;54411:37;;54338:117;;;;:::o;54461:169::-;54505:6;54538:51;54586:1;54582:6;54574:5;54571:1;54567:13;54538:51;:::i;:::-;54534:56;54619:4;54613;54609:15;54599:25;;54512:118;54461:169;;;;:::o;54635:295::-;54711:4;54857:29;54882:3;54876:4;54857:29;:::i;:::-;54849:37;;54919:3;54916:1;54912:11;54906:4;54903:21;54895:29;;54635:295;;;;:::o;54935:1395::-;55052:37;55085:3;55052:37;:::i;:::-;55154:18;55146:6;55143:30;55140:56;;;55176:18;;:::i;:::-;55140:56;55220:38;55252:4;55246:11;55220:38;:::i;:::-;55305:67;55365:6;55357;55351:4;55305:67;:::i;:::-;55399:1;55423:4;55410:17;;55455:2;55447:6;55444:14;55472:1;55467:618;;;;56129:1;56146:6;56143:77;;;56195:9;56190:3;56186:19;56180:26;56171:35;;56143:77;56246:67;56306:6;56299:5;56246:67;:::i;:::-;56240:4;56233:81;56102:222;55437:887;;55467:618;55519:4;55515:9;55507:6;55503:22;55553:37;55585:4;55553:37;:::i;:::-;55612:1;55626:208;55640:7;55637:1;55634:14;55626:208;;;55719:9;55714:3;55710:19;55704:26;55696:6;55689:42;55770:1;55762:6;55758:14;55748:24;;55817:2;55806:9;55802:18;55789:31;;55663:4;55660:1;55656:12;55651:17;;55626:208;;;55862:6;55853:7;55850:19;55847:179;;;55920:9;55915:3;55911:19;55905:26;55963:48;56005:4;55997:6;55993:17;55982:9;55963:48;:::i;:::-;55955:6;55948:64;55870:156;55847:179;56072:1;56068;56060:6;56056:14;56052:22;56046:4;56039:36;55474:611;;;55437:887;;55027:1303;;;54935:1395;;:::o;56336:173::-;56476:25;56472:1;56464:6;56460:14;56453:49;56336:173;:::o;56515:366::-;56657:3;56678:67;56742:2;56737:3;56678:67;:::i;:::-;56671:74;;56754:93;56843:3;56754:93;:::i;:::-;56872:2;56867:3;56863:12;56856:19;;56515:366;;;:::o;56887:960::-;57187:4;57225:3;57214:9;57210:19;57202:27;;57239:71;57307:1;57296:9;57292:17;57283:6;57239:71;:::i;:::-;57320:72;57388:2;57377:9;57373:18;57364:6;57320:72;:::i;:::-;57402;57470:2;57459:9;57455:18;57446:6;57402:72;:::i;:::-;57484;57552:2;57541:9;57537:18;57528:6;57484:72;:::i;:::-;57566:67;57628:3;57617:9;57613:19;57604:6;57566:67;:::i;:::-;57681:9;57675:4;57671:20;57665:3;57654:9;57650:19;57643:49;57709:131;57835:4;57709:131;:::i;:::-;57701:139;;56887:960;;;;;;;;:::o;57853:98::-;57904:6;57938:5;57932:12;57922:22;;57853:98;;;:::o;57957:168::-;58040:11;58074:6;58069:3;58062:19;58114:4;58109:3;58105:14;58090:29;;57957:168;;;;:::o;58131:373::-;58217:3;58245:38;58277:5;58245:38;:::i;:::-;58299:70;58362:6;58357:3;58299:70;:::i;:::-;58292:77;;58378:65;58436:6;58431:3;58424:4;58417:5;58413:16;58378:65;:::i;:::-;58468:29;58490:6;58468:29;:::i;:::-;58463:3;58459:39;58452:46;;58221:283;58131:373;;;;:::o;58510:640::-;58705:4;58743:3;58732:9;58728:19;58720:27;;58757:71;58825:1;58814:9;58810:17;58801:6;58757:71;:::i;:::-;58838:72;58906:2;58895:9;58891:18;58882:6;58838:72;:::i;:::-;58920;58988:2;58977:9;58973:18;58964:6;58920:72;:::i;:::-;59039:9;59033:4;59029:20;59024:2;59013:9;59009:18;59002:48;59067:76;59138:4;59129:6;59067:76;:::i;:::-;59059:84;;58510:640;;;;;;;:::o;59156:141::-;59212:5;59243:6;59237:13;59228:22;;59259:32;59285:5;59259:32;:::i;:::-;59156:141;;;;:::o;59303:349::-;59372:6;59421:2;59409:9;59400:7;59396:23;59392:32;59389:119;;;59427:79;;:::i;:::-;59389:119;59547:1;59572:63;59627:7;59618:6;59607:9;59603:22;59572:63;:::i;:::-;59562:73;;59518:127;59303:349;;;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"4203800","executionCost":"infinite","totalCost":"infinite"},"external":{"COMPLETED_STATUS()":"381","OPEN_STATUS()":"425","allNfts()":"infinite","approve(address,uint256)":"infinite","balanceOf(address)":"2921","bid(uint256)":"infinite","bids(uint256,address)":"infinite","completeAuction(uint256)":"infinite","createAuctionListing(uint256,uint256,uint256)":"infinite","getApproved(uint256)":"5300","getNftPrice(uint256)":"infinite","highestBidder(uint256)":"2928","isApprovedForAll(address,address)":"infinite","isAuctionOpen(uint256)":"5172","listings(uint256)":"infinite","minAuctionIncrement()":"2519","mintAuctionToken(string,uint256,uint256)":"infinite","mintToken(string,uint256)":"infinite","name()":"infinite","ownerOf(uint256)":"3067","safeTransferFrom(address,address,uint256)":"infinite","safeTransferFrom(address,address,uint256,bytes)":"infinite","sellNFT(uint256)":"infinite","setApprovalForAll(address,bool)":"infinite","singleNFT(uint256)":"infinite","supportsInterface(bytes4)":"915","symbol()":"infinite","tokenURI(uint256)":"infinite","transferFrom(address,address,uint256)":"infinite","userNfts()":"infinite"},"internal":{"_transferFund(address payable,uint256)":"infinite","createNFT(uint256,uint256)":"infinite"}},"methodIdentifiers":{"COMPLETED_STATUS()":"15bfa612","OPEN_STATUS()":"236d4725","allNfts()":"f2b8aa6f","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","bid(uint256)":"454a2ab3","bids(uint256,address)":"3f1ffcec","completeAuction(uint256)":"21b62886","createAuctionListing(uint256,uint256,uint256)":"4c22f381","getApproved(uint256)":"081812fc","getNftPrice(uint256)":"7bf0989a","highestBidder(uint256)":"451df52e","isApprovedForAll(address,address)":"e985e9c5","isAuctionOpen(uint256)":"0ad48628","listings(uint256)":"de74e57b","minAuctionIncrement()":"708d4d35","mintAuctionToken(string,uint256,uint256)":"bbb52fff","mintToken(string,uint256)":"c046372c","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","sellNFT(uint256)":"ee9cdfb3","setApprovalForAll(address,bool)":"a22cb465","singleNFT(uint256)":"043a2df4","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","userNfts()":"051d2b6b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"AuctionCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"endAt\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"AuctionCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bidder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"bid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"BidCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NFT_Action\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"COMPLETED_STATUS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPEN_STATUS\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct RSKNFT.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"listingId\",\"type\":\"uint256\"}],\"name\":\"completeAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationInSeconds\",\"type\":\"uint256\"}],\"name\":\"createAuctionListing\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getNftPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"isAuctionOpen\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"listings\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"netPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"endAt\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAuctionIncrement\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"durationInSeconds\",\"type\":\"uint256\"}],\"name\":\"mintAuctionToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_tokenURI\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"mintToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"sellNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"singleNFT\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct RSKNFT.NFT\",\"name\":\"props\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"userNfts\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"seller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"internalType\":\"struct RSKNFT.NFT[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"AuctionCompleted(uint256,address,address,uint256,string)\":{\"details\":\"Auction completed event\",\"params\":{\"listingId\":\", @param seller ,  @param bidder, @param bid, @param message\"}},\"AuctionCreated(uint256,address,uint256,uint256,uint256,uint256,string)\":{\"details\":\"Auction creation events\",\"params\":{\"listingId\":\", @param seller, @param price, @param tokenId, @param startAt, @param endAt, @param message\"}},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"BidCreated(uint256,address,uint256,string)\":{\"details\":\"bidding event\",\"params\":{\"listingId\":\", @param bidder, @param bid, @param message\"}},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"NFT_Action(uint256,address,address,uint256,bool,string)\":{\"details\":\"handled all events related to nfts in the contract\",\"params\":{\"tokenId\":\", @param owner, @param seller, @param price, @param sold\"}},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"allNfts()\":{\"returns\":{\"_0\":\"props\"}},\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"completeAuction(uint256)\":{\"details\":\"Nft auction completion functionality\",\"params\":{\"listingId\":\", listingId\"}},\"createAuctionListing(uint256,uint256,uint256)\":{\"details\":\"create auction listing\",\"params\":{\"price\":\", @param tokenId, @param durationInSeconds\"},\"returns\":{\"_0\":\"listingId\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"getNftPrice(uint256)\":{\"params\":{\"tokenId\":\",tokenId\"},\"returns\":{\"_0\":\"uint256\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"isAuctionOpen(uint256)\":{\"details\":\"check if auction is open\",\"params\":{\"id\":\", auction id\"}},\"mintAuctionToken(string,uint256,uint256)\":{\"details\":\"mint token , set tokenURI and return currentTokenId\",\"params\":{\"_tokenURI\":\", a tokenURI obtained from IPFS\"},\"returns\":{\"_0\":\"currentTokenId, current token id\"}},\"mintToken(string,uint256)\":{\"details\":\"mint token , set tokenURI and return currentTokenId\",\"params\":{\"_tokenURI\":\", a tokenURI obtained from IPFS\"},\"returns\":{\"_0\":\"currentTokenId, current token id\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"sellNFT(uint256)\":{\"details\":\"NFT sales functionality and process payment to seller\",\"params\":{\"tokenId\":\",  NFT token id\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"singleNFT(uint256)\":{\"returns\":{\"props\":\"props\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"userNfts()\":{\"returns\":{\"_0\":\"props\"}}},\"version\":1},\"userdoc\":{\"events\":{\"NFT_Action(uint256,address,address,uint256,bool,string)\":{\"notice\":\"NFT event action\"}},\"kind\":\"user\",\"methods\":{\"allNfts()\":{\"notice\":\"All nfts retrieval,\"},\"getNftPrice(uint256)\":{\"notice\":\"retrieve nft price\"},\"singleNFT(uint256)\":{\"notice\":\"retrieval of single nft\"},\"userNfts()\":{\"notice\":\"retrieval of all purchased nfts that belong to a user\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/RSKNFT.sol\":\"RSKNFT\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/introspection/IERC165.sol\\\";\\n\",\"keccak256\":\"0xd04b0f06e0666f29cf7cccc82894de541e19bb30a765b107b1e40bb7fe5f7d7a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (interfaces/IERC4906.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\nimport \\\"./IERC721.sol\\\";\\n\\n/// @title EIP-721 Metadata Update Extension\\ninterface IERC4906 is IERC165, IERC721 {\\n    /// @dev This event emits when the metadata of a token is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFT.\\n    event MetadataUpdate(uint256 _tokenId);\\n\\n    /// @dev This event emits when the metadata of a range of tokens is changed.\\n    /// So that the third-party platforms such as NFT market could\\n    /// timely update the images and related attributes of the NFTs.\\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\\n}\\n\",\"keccak256\":\"0x2a9dadb806be80dd451821f1f1190eb9aa6f6edae85b185db29d60767cc0c5f4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (interfaces/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../token/ERC721/IERC721.sol\\\";\\n\",\"keccak256\":\"0xaf297d12d8d4a57fe01a70f0ef38908f208e3faedc577056d0b728fa2f3ccf0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor() {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and making it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        _nonReentrantBefore();\\n        _;\\n        _nonReentrantAfter();\\n    }\\n\\n    function _nonReentrantBefore() private {\\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n    }\\n\\n    function _nonReentrantAfter() private {\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Returns true if the reentrancy guard is currently set to \\\"entered\\\", which indicates there is a\\n     * `nonReentrant` function in the call stack.\\n     */\\n    function _reentrancyGuardEntered() internal view returns (bool) {\\n        return _status == _ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: address zero is not a valid owner\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _ownerOf(tokenId);\\n        require(owner != address(0), \\\"ERC721: invalid token ID\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overridden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not token owner or approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        _requireMinted(tokenId);\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        _setApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: caller is not token owner or approved\\\");\\n        _safeTransfer(from, to, tokenId, data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\\n     */\\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\\n        return _owners[tokenId];\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _ownerOf(tokenId) != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\\n\\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        unchecked {\\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\\n            // Given that tokens are minted one by one, it is impossible in practice that\\n            // this ever happens. Might change if we allow batch minting.\\n            // The ERC fails to describe this case.\\n            _balances[to] += 1;\\n        }\\n\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n\\n        _afterTokenTransfer(address(0), to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\\n\\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\\n        owner = ERC721.ownerOf(tokenId);\\n\\n        // Clear approvals\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // Cannot overflow, as that would require more tokens to be burned/transferred\\n            // out than the owner initially received through minting and transferring in.\\n            _balances[owner] -= 1;\\n        }\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n\\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId, 1);\\n\\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer from incorrect owner\\\");\\n\\n        // Clear approvals from the previous owner\\n        delete _tokenApprovals[tokenId];\\n\\n        unchecked {\\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\\n            // `from`'s balance is the number of token held, which is at least one before the current\\n            // transfer.\\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\\n            // all 2**256 token ids to be minted, which in practice is impossible.\\n            _balances[from] -= 1;\\n            _balances[to] += 1;\\n        }\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n\\n        _afterTokenTransfer(from, to, tokenId, 1);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `operator` to operate on all of `owner` tokens\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\\n        require(owner != operator, \\\"ERC721: approve to caller\\\");\\n        _operatorApprovals[owner][operator] = approved;\\n        emit ApprovalForAll(owner, operator, approved);\\n    }\\n\\n    /**\\n     * @dev Reverts if the `tokenId` has not been minted yet.\\n     */\\n    function _requireMinted(uint256 tokenId) internal view virtual {\\n        require(_exists(tokenId), \\\"ERC721: invalid token ID\\\");\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    /// @solidity memory-safe-assembly\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\\n     * - When `from` is zero, the tokens will be minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\\n     * - When `from` is zero, the tokens were minted for `to`.\\n     * - When `to` is zero, ``from``'s tokens were burned.\\n     * - `from` and `to` are never both zero.\\n     * - `batchSize` is non-zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\\n\\n    /**\\n     * @dev Unsafe write access to the balances, used by extensions that \\\"mint\\\" tokens using an {ownerOf} override.\\n     *\\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\\n     * that `ownerOf(tokenId)` is `a`.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\\n        _balances[account] += amount;\\n    }\\n}\\n\",\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool approved) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/extensions/ERC721URIStorage.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../ERC721.sol\\\";\\nimport \\\"../../../interfaces/IERC4906.sol\\\";\\n\\n/**\\n * @dev ERC721 token with storage based token URI management.\\n */\\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\\n    using Strings for uint256;\\n\\n    // Optional mapping for token URIs\\n    mapping(uint256 => string) private _tokenURIs;\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\\n        return interfaceId == bytes4(0x49064906) || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        _requireMinted(tokenId);\\n\\n        string memory _tokenURI = _tokenURIs[tokenId];\\n        string memory base = _baseURI();\\n\\n        // If there is no base URI, return the token URI.\\n        if (bytes(base).length == 0) {\\n            return _tokenURI;\\n        }\\n        // If both are set, concatenate the baseURI and tokenURI (via abi.encodePacked).\\n        if (bytes(_tokenURI).length > 0) {\\n            return string(abi.encodePacked(base, _tokenURI));\\n        }\\n\\n        return super.tokenURI(tokenId);\\n    }\\n\\n    /**\\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\\n     *\\n     * Emits {MetadataUpdate}.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\\n        require(_exists(tokenId), \\\"ERC721URIStorage: URI set of nonexistent token\\\");\\n        _tokenURIs[tokenId] = _tokenURI;\\n\\n        emit MetadataUpdate(tokenId);\\n    }\\n\\n    /**\\n     * @dev See {ERC721-_burn}. This override additionally checks to see if a\\n     * token-specific URI was set for the token, and if so, it deletes the token URI from\\n     * the storage mapping.\\n     */\\n    function _burn(uint256 tokenId) internal virtual override {\\n        super._burn(tokenId);\\n\\n        if (bytes(_tokenURIs[tokenId]).length != 0) {\\n            delete _tokenURIs[tokenId];\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x7942989e3525aec1672469e4c65fb33fbd19c785c9cadbcb70fcbe1fe8bfdd37\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Counters.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title Counters\\n * @author Matt Condon (@shrugs)\\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\\n *\\n * Include with `using Counters for Counters.Counter;`\\n */\\nlibrary Counters {\\n    struct Counter {\\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\\n        uint256 _value; // default: 0\\n    }\\n\\n    function current(Counter storage counter) internal view returns (uint256) {\\n        return counter._value;\\n    }\\n\\n    function increment(Counter storage counter) internal {\\n        unchecked {\\n            counter._value += 1;\\n        }\\n    }\\n\\n    function decrement(Counter storage counter) internal {\\n        uint256 value = counter._value;\\n        require(value > 0, \\\"Counter: decrement overflow\\\");\\n        unchecked {\\n            counter._value = value - 1;\\n        }\\n    }\\n\\n    function reset(Counter storage counter) internal {\\n        counter._value = 0;\\n    }\\n}\\n\",\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./math/Math.sol\\\";\\nimport \\\"./math/SignedMath.sol\\\";\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _SYMBOLS = \\\"0123456789abcdef\\\";\\n    uint8 private constant _ADDRESS_LENGTH = 20;\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            uint256 length = Math.log10(value) + 1;\\n            string memory buffer = new string(length);\\n            uint256 ptr;\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                ptr := add(buffer, add(32, length))\\n            }\\n            while (true) {\\n                ptr--;\\n                /// @solidity memory-safe-assembly\\n                assembly {\\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\\n                }\\n                value /= 10;\\n                if (value == 0) break;\\n            }\\n            return buffer;\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(int256 value) internal pure returns (string memory) {\\n        return string(abi.encodePacked(value < 0 ? \\\"-\\\" : \\\"\\\", toString(SignedMath.abs(value))));\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        unchecked {\\n            return toHexString(value, Math.log256(value) + 1);\\n        }\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(address addr) internal pure returns (string memory) {\\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\\n    }\\n\\n    /**\\n     * @dev Returns true if the two strings are equal.\\n     */\\n    function equal(string memory a, string memory b) internal pure returns (bool) {\\n        return keccak256(bytes(a)) == keccak256(bytes(b));\\n    }\\n}\\n\",\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard math utilities missing in the Solidity language.\\n */\\nlibrary Math {\\n    enum Rounding {\\n        Down, // Toward negative infinity\\n        Up, // Toward infinity\\n        Zero // Toward zero\\n    }\\n\\n    /**\\n     * @dev Returns the largest of two numbers.\\n     */\\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two numbers.\\n     */\\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two numbers. The result is rounded towards\\n     * zero.\\n     */\\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b) / 2 can overflow.\\n        return (a & b) + (a ^ b) / 2;\\n    }\\n\\n    /**\\n     * @dev Returns the ceiling of the division of two numbers.\\n     *\\n     * This differs from standard division with `/` in that it rounds up instead\\n     * of rounding down.\\n     */\\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // (a + b - 1) / b can overflow on addition, so we distribute.\\n        return a == 0 ? 0 : (a - 1) / b + 1;\\n    }\\n\\n    /**\\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\\n     * with further edits by Uniswap Labs also under MIT license.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\\n        unchecked {\\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\\n            // variables such that product = prod1 * 2^256 + prod0.\\n            uint256 prod0; // Least significant 256 bits of the product\\n            uint256 prod1; // Most significant 256 bits of the product\\n            assembly {\\n                let mm := mulmod(x, y, not(0))\\n                prod0 := mul(x, y)\\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\\n            }\\n\\n            // Handle non-overflow cases, 256 by 256 division.\\n            if (prod1 == 0) {\\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\\n                // The surrounding unchecked block does not change this fact.\\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\\n                return prod0 / denominator;\\n            }\\n\\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\\n            require(denominator > prod1, \\\"Math: mulDiv overflow\\\");\\n\\n            ///////////////////////////////////////////////\\n            // 512 by 256 division.\\n            ///////////////////////////////////////////////\\n\\n            // Make division exact by subtracting the remainder from [prod1 prod0].\\n            uint256 remainder;\\n            assembly {\\n                // Compute remainder using mulmod.\\n                remainder := mulmod(x, y, denominator)\\n\\n                // Subtract 256 bit number from 512 bit number.\\n                prod1 := sub(prod1, gt(remainder, prod0))\\n                prod0 := sub(prod0, remainder)\\n            }\\n\\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\\n            // See https://cs.stackexchange.com/q/138556/92363.\\n\\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\\n            uint256 twos = denominator & (~denominator + 1);\\n            assembly {\\n                // Divide denominator by twos.\\n                denominator := div(denominator, twos)\\n\\n                // Divide [prod1 prod0] by twos.\\n                prod0 := div(prod0, twos)\\n\\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\\n                twos := add(div(sub(0, twos), twos), 1)\\n            }\\n\\n            // Shift in bits from prod1 into prod0.\\n            prod0 |= prod1 * twos;\\n\\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\\n            // four bits. That is, denominator * inv = 1 mod 2^4.\\n            uint256 inverse = (3 * denominator) ^ 2;\\n\\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\\n            // in modular arithmetic, doubling the correct bits in each step.\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\\n\\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\\n            // is no longer required.\\n            result = prod0 * inverse;\\n            return result;\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\\n     */\\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\\n        uint256 result = mulDiv(x, y, denominator);\\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\\n            result += 1;\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\\n     *\\n     * Inspired by Henry S. Warren, Jr.'s \\\"Hacker's Delight\\\" (Chapter 11).\\n     */\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\\n        //\\n        // We know that the \\\"msb\\\" (most significant bit) of our target number `a` is a power of 2 such that we have\\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\\n        //\\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\\n        // \\u2192 `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\\n        // \\u2192 `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\\n        //\\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\\n        uint256 result = 1 << (log2(a) >> 1);\\n\\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\\n        // into the expected uint128 result.\\n        unchecked {\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            result = (result + a / result) >> 1;\\n            return min(result, a / result);\\n        }\\n    }\\n\\n    /**\\n     * @notice Calculates sqrt(a), following the selected rounding direction.\\n     */\\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = sqrt(a);\\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 128;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 64;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 32;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 16;\\n            }\\n            if (value >> 8 > 0) {\\n                value >>= 8;\\n                result += 8;\\n            }\\n            if (value >> 4 > 0) {\\n                value >>= 4;\\n                result += 4;\\n            }\\n            if (value >> 2 > 0) {\\n                value >>= 2;\\n                result += 2;\\n            }\\n            if (value >> 1 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log2(value);\\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >= 10 ** 64) {\\n                value /= 10 ** 64;\\n                result += 64;\\n            }\\n            if (value >= 10 ** 32) {\\n                value /= 10 ** 32;\\n                result += 32;\\n            }\\n            if (value >= 10 ** 16) {\\n                value /= 10 ** 16;\\n                result += 16;\\n            }\\n            if (value >= 10 ** 8) {\\n                value /= 10 ** 8;\\n                result += 8;\\n            }\\n            if (value >= 10 ** 4) {\\n                value /= 10 ** 4;\\n                result += 4;\\n            }\\n            if (value >= 10 ** 2) {\\n                value /= 10 ** 2;\\n                result += 2;\\n            }\\n            if (value >= 10 ** 1) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log10(value);\\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\\n        }\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, rounded down, of a positive value.\\n     * Returns 0 if given 0.\\n     *\\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\\n     */\\n    function log256(uint256 value) internal pure returns (uint256) {\\n        uint256 result = 0;\\n        unchecked {\\n            if (value >> 128 > 0) {\\n                value >>= 128;\\n                result += 16;\\n            }\\n            if (value >> 64 > 0) {\\n                value >>= 64;\\n                result += 8;\\n            }\\n            if (value >> 32 > 0) {\\n                value >>= 32;\\n                result += 4;\\n            }\\n            if (value >> 16 > 0) {\\n                value >>= 16;\\n                result += 2;\\n            }\\n            if (value >> 8 > 0) {\\n                result += 1;\\n            }\\n        }\\n        return result;\\n    }\\n\\n    /**\\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\\n     * Returns 0 if given 0.\\n     */\\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\\n        unchecked {\\n            uint256 result = log256(value);\\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Standard signed math utilities missing in the Solidity language.\\n */\\nlibrary SignedMath {\\n    /**\\n     * @dev Returns the largest of two signed numbers.\\n     */\\n    function max(int256 a, int256 b) internal pure returns (int256) {\\n        return a > b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the smallest of two signed numbers.\\n     */\\n    function min(int256 a, int256 b) internal pure returns (int256) {\\n        return a < b ? a : b;\\n    }\\n\\n    /**\\n     * @dev Returns the average of two signed numbers without overflow.\\n     * The result is rounded towards zero.\\n     */\\n    function average(int256 a, int256 b) internal pure returns (int256) {\\n        // Formula from the book \\\"Hacker's Delight\\\"\\n        int256 x = (a & b) + ((a ^ b) >> 1);\\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\\n    }\\n\\n    /**\\n     * @dev Returns the absolute unsigned value of a signed value.\\n     */\\n    function abs(int256 n) internal pure returns (uint256) {\\n        unchecked {\\n            // must be unchecked in order to support `n = type(int256).min`\\n            return uint256(n >= 0 ? n : -n);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\"},\"contracts/RSKNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity 0.8.19;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/Counters.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\r\\nimport '@openzeppelin/contracts/security/ReentrancyGuard.sol';\\r\\n\\r\\n\\r\\ncontract RSKNFT is ERC721URIStorage , ReentrancyGuard {\\r\\n\\r\\n     /// @notice implement the Counter libarary for counting tokenId\\r\\n    using Counters for Counters.Counter;\\r\\n    Counters.Counter private _tokenId; // tokenId\\r\\n    Counters.Counter  private _soldItems; // total items\\r\\n    uint8 public constant OPEN_STATUS = 1; // open status\\r\\n    uint8 public constant COMPLETED_STATUS = 2; // close status\\r\\n    uint256 public minAuctionIncrement = 10; // 10 percent\\r\\n    address payable owner;\\r\\n\\r\\n\\r\\n    mapping (uint256 => NFT) NFT_ID;\\r\\n    mapping(uint256 => Listing) public listings;\\r\\n    mapping(uint256 => mapping(address => uint256)) public bids;\\r\\n    mapping(uint256 => address) public highestBidder;\\r\\n\\r\\n    // nft struct\\r\\n     struct NFT {\\r\\n        address owner;\\r\\n        address seller;\\r\\n        uint256 price;\\r\\n        bool sold;\\r\\n        uint256 tokenId;\\r\\n    }\\r\\n\\r\\n    struct Listing {\\r\\n        address seller;\\r\\n        address owner;\\r\\n        uint256 tokenId;\\r\\n        uint256 price; // display price\\r\\n        uint256 netPrice; // actual price\\r\\n        uint256 startAt;\\r\\n        uint256 endAt; \\r\\n        uint8 status;\\r\\n    }\\r\\n\\r\\n      /// @notice NFT event action\\r\\n      /// @dev handled all events related to nfts in the contract\\r\\n      /// @param tokenId, @param owner, @param seller, @param price, @param sold\\r\\n    event NFT_Action(\\r\\n        uint256 tokenId,\\r\\n        address owner,\\r\\n        address seller,\\r\\n        uint256 price,\\r\\n        bool sold,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    /// @dev Auction creation events\\r\\n    /// @param listingId, @param seller, @param price, @param tokenId, @param startAt, @param endAt, @param message\\r\\n    event AuctionCreated(\\r\\n        uint256 listingId, \\r\\n        address indexed seller, \\r\\n        uint256 price, \\r\\n        uint256 tokenId, \\r\\n        uint256 startAt, \\r\\n        uint256 endAt,\\r\\n        string message    \\r\\n    );\\r\\n\\r\\n    /// @dev Auction completed event\\r\\n    /// @param listingId, @param seller ,  @param bidder, @param bid, @param message\\r\\n    event AuctionCompleted(\\r\\n        uint256 listingId,\\r\\n        address indexed seller, \\r\\n        address indexed bidder, \\r\\n        uint256 bid,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n    /// @dev bidding event\\r\\n    /// @param listingId, @param bidder, @param bid, @param message\\r\\n    event BidCreated(\\r\\n        uint256 listingId, \\r\\n        address indexed bidder, \\r\\n        uint256 bid,\\r\\n        string message\\r\\n    );\\r\\n\\r\\n\\r\\n     constructor() ERC721(\\\"CeloNFT\\\", \\\"ASG\\\"){\\r\\n        owner = payable(msg.sender);\\r\\n    }\\r\\n\\r\\n      /// @dev mint token , set tokenURI and return currentTokenId\\r\\n     /// @param _tokenURI, a tokenURI obtained from IPFS\\r\\n     /// @return currentTokenId, current token id\\r\\n    function mintToken(string memory _tokenURI, uint256 price) external returns(uint256) {\\r\\n        _tokenId.increment(); // increment tokenId\\r\\n        uint256 currentTokenId = _tokenId.current(); // get current tokenId\\r\\n        _mint(msg.sender,currentTokenId); // mint token\\r\\n        _setTokenURI(currentTokenId,_tokenURI); // set token uri from IPFS\\r\\n         createNFT(currentTokenId,price);\\r\\n        return currentTokenId;\\r\\n    }\\r\\n\\r\\n     /// @dev mint token , set tokenURI and return currentTokenId\\r\\n     /// @param _tokenURI, a tokenURI obtained from IPFS\\r\\n     /// @return currentTokenId, current token id\\r\\n    function mintAuctionToken(string memory _tokenURI, uint256 price, uint256 durationInSeconds) external returns(uint256) {\\r\\n        _tokenId.increment(); // increment tokenId\\r\\n        uint256 currentTokenId = _tokenId.current(); // get current tokenId\\r\\n        _mint(msg.sender,currentTokenId); // mint token\\r\\n        _setTokenURI(currentTokenId,_tokenURI); // set token uri from IPFS\\r\\n         createAuctionListing(price,currentTokenId,durationInSeconds);\\r\\n        return currentTokenId;\\r\\n    }\\r\\n\\r\\n    function createNFT(uint256 tokenId, uint256 price) internal {\\r\\n    uint256 currentTokenId = _tokenId.current();\\r\\n    NFT_ID[currentTokenId] = NFT(\\r\\n        payable(address(this)),\\r\\n        payable(msg.sender),\\r\\n        price,\\r\\n        false,\\r\\n        tokenId\\r\\n    );\\r\\n\\r\\n        _transfer(msg.sender,address(this),tokenId); // transfer ownership of nft to the marketplace owner\\r\\n\\r\\n        emit NFT_Action(\\r\\n            tokenId,\\r\\n            address(this),\\r\\n            msg.sender,\\r\\n            price,\\r\\n            false,\\r\\n            \\\"NFT created successfuly\\\"\\r\\n        );\\r\\n\\r\\n    }\\r\\n\\r\\n\\r\\n        /// @dev create auction listing\\r\\n        /// @param price, @param tokenId, @param durationInSeconds\\r\\n        /// @return listingId\\r\\n     function createAuctionListing (uint256 price, uint256 tokenId, uint256 durationInSeconds) public returns (uint256) {\\r\\n        uint256 currentTokenId = _tokenId.current();\\r\\n        uint256 listingId = currentTokenId;\\r\\n        uint256 startAt = block.timestamp;\\r\\n        uint256 endAt = startAt + durationInSeconds;\\r\\n\\r\\n        listings[listingId] = Listing({\\r\\n            seller: payable(msg.sender),\\r\\n            owner : payable(address(this)),\\r\\n            tokenId: tokenId,\\r\\n            price: price,\\r\\n            netPrice: price,\\r\\n            status: OPEN_STATUS,\\r\\n            startAt: startAt,\\r\\n            endAt: endAt\\r\\n        });\\r\\n\\r\\n        _transfer(msg.sender, address(this), tokenId);\\r\\n\\r\\n        emit AuctionCreated(\\r\\n            listingId, \\r\\n            msg.sender, \\r\\n            price, \\r\\n            tokenId, \\r\\n            startAt, \\r\\n            endAt,\\r\\n            \\\"Auction created successfully\\\"\\r\\n            );\\r\\n\\r\\n        return listingId;\\r\\n    }\\r\\n\\r\\n    /// @dev Nft auction completion functionality\\r\\n    /// @param listingId , listingId\\r\\n    function completeAuction(uint256 listingId) public payable nonReentrant {\\r\\n        require(!isAuctionOpen(listingId), 'auction is still open');\\r\\n\\r\\n        Listing storage listing = listings[listingId];\\r\\n        address winner = highestBidder[listingId]; \\r\\n        require(\\r\\n            msg.sender == listing.seller || msg.sender == winner, \\r\\n            'only seller or winner can complete auction'\\r\\n        );\\r\\n\\r\\n        if(winner != address(0)) {\\r\\n           _transfer(address(this), winner, listing.tokenId);\\r\\n\\r\\n            uint256 amount = bids[listingId][winner]; \\r\\n            bids[listingId][winner] = 0;\\r\\n            _transferFund(payable(listing.seller), amount);\\r\\n\\r\\n        } else {\\r\\n            _transfer(address(this), listing.seller, listing.tokenId);\\r\\n        }\\r\\n\\r\\n        listing.status = COMPLETED_STATUS;\\r\\n\\r\\n        emit AuctionCompleted(\\r\\n            listingId,\\r\\n            listing.seller, \\r\\n            winner, \\r\\n            bids[listingId][winner],\\r\\n            \\\"Auction completed successfully\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n    function bid(uint256 listingId) public payable nonReentrant {\\r\\n        require(isAuctionOpen(listingId), 'auction has ended');\\r\\n        Listing storage listing = listings[listingId];\\r\\n        require(msg.sender != listing.seller, \\\"cannot bid on what you own\\\");\\r\\n\\r\\n        uint256 newBid = bids[listingId][msg.sender] + msg.value;\\r\\n        require(newBid >= listing.price, \\\"cannot bid below the latest bidding price\\\");\\r\\n\\r\\n        bids[listingId][msg.sender] += msg.value;\\r\\n        highestBidder[listingId] = msg.sender;\\r\\n\\r\\n        uint256 incentive = listing.price / minAuctionIncrement;\\r\\n        listing.price = listing.price + incentive;\\r\\n\\r\\n        emit BidCreated(\\r\\n            listingId, \\r\\n            msg.sender, \\r\\n            newBid,\\r\\n            \\\"Bid created successfully\\\"\\r\\n            );\\r\\n    }\\r\\n\\r\\n     /// @dev NFT sales functionality and process payment to seller\\r\\n    /// @param tokenId,  NFT token id\\r\\n    function sellNFT(uint256 tokenId) external payable {\\r\\n        uint256 _price = NFT_ID[tokenId].price;\\r\\n        address seller = NFT_ID[tokenId].seller;\\r\\n        require(msg.value == _price, \\\"incorrect amount\\\");\\r\\n        (bool success,) = payable(seller).call{value : _price}(\\\"\\\"); // make payment to seller\\r\\n        require(success, \\\"payment failed\\\");\\r\\n        NFT_ID[tokenId].owner = payable(msg.sender);\\r\\n        NFT_ID[tokenId].seller = payable(address(0)); // set seller to empty address\\r\\n        NFT_ID[tokenId].sold = true;\\r\\n        _soldItems.increment();\\r\\n        _transfer(address(this),msg.sender,tokenId); // transfer ownership to sender\\r\\n\\r\\n        emit NFT_Action(\\r\\n            tokenId,\\r\\n            msg.sender,\\r\\n            address(0),\\r\\n            _price,\\r\\n            true,\\r\\n            \\\"Sold NFT successfully\\\"\\r\\n        );\\r\\n    }\\r\\n\\r\\n      /// @notice All nfts retrieval,\\r\\n    /// @return props\\r\\n    function allNfts() external view returns (NFT[] memory) {\\r\\n        uint currentTokenId = _tokenId.current();\\r\\n        NFT[] memory items = new NFT[](currentTokenId);\\r\\n        for (uint i = 0; i < items.length; i++) {\\r\\n            items[i] = NFT_ID[i + 1];\\r\\n        }\\r\\n\\r\\n        return items;\\r\\n    }\\r\\n\\r\\n     /// @notice retrieval of single nft\\r\\n    /// @return props\\r\\n    function singleNFT(uint256 tokenId) external view returns(NFT memory props){\\r\\n        props = NFT_ID[tokenId];\\r\\n    }\\r\\n\\r\\n      /// @notice retrieval of all purchased nfts that belong to a user\\r\\n    /// @return props\\r\\n    function userNfts() external view returns (NFT[] memory) {\\r\\n    uint currentTokenId = _tokenId.current();\\r\\n    uint itemCount = 0;\\r\\n\\r\\n    for (uint i = 1; i <= currentTokenId; i++) {\\r\\n        if (NFT_ID[i].owner == msg.sender) {\\r\\n            itemCount++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    NFT[] memory items = new NFT[](itemCount);\\r\\n    itemCount = 0;\\r\\n\\r\\n    // Populate the array with user's NFTs\\r\\n    for (uint i = 1; i <= currentTokenId; i++) {\\r\\n        if (NFT_ID[i].owner == msg.sender) {\\r\\n            items[itemCount] = NFT_ID[i];\\r\\n            itemCount++;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    return items;\\r\\n}\\r\\n\\r\\n    /// @notice retrieve nft price\\r\\n    /// @param tokenId ,tokenId\\r\\n    /// @return uint256\\r\\n    function getNftPrice(uint256 tokenId) external view returns(uint256){\\r\\n        return NFT_ID[tokenId].price;\\r\\n    }\\r\\n\\r\\n    /// @dev check if auction is open\\r\\n    /// @param id , auction id\\r\\n    function isAuctionOpen(uint256 id) public view returns (bool) {\\r\\n        return\\r\\n            listings[id].status == OPEN_STATUS &&\\r\\n            listings[id].endAt > block.timestamp;\\r\\n    }\\r\\n\\r\\n    function _transferFund(address payable to, uint256 amount) internal {\\r\\n        if (amount == 0) {\\r\\n            return;\\r\\n        }\\r\\n        require(to != address(0), 'Error, cannot transfer to address(0)');\\r\\n\\r\\n        (bool transferSent, ) = to.call{value: amount}(\\\"\\\");\\r\\n        require(transferSent, \\\"Error, failed to send Ether\\\");\\r\\n    }\\r\\n\\r\\n\\r\\n    \\r\\n}\",\"keccak256\":\"0xe51cec1af6d6117acb0261d8752379d385848d6cca126d5fdcb4607969d150bf\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":118,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":120,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":124,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_owners","offset":0,"slot":"2","type":"t_mapping(t_uint256,t_address)"},{"astId":128,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_balances","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":132,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_tokenApprovals","offset":0,"slot":"4","type":"t_mapping(t_uint256,t_address)"},{"astId":138,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_operatorApprovals","offset":0,"slot":"5","type":"t_mapping(t_address,t_mapping(t_address,t_bool))"},{"astId":1169,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_tokenURIs","offset":0,"slot":"6","type":"t_mapping(t_uint256,t_string_storage)"},{"astId":38,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_status","offset":0,"slot":"7","type":"t_uint256"},{"astId":3015,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_tokenId","offset":0,"slot":"8","type":"t_struct(Counter)1694_storage"},{"astId":3018,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_soldItems","offset":0,"slot":"9","type":"t_struct(Counter)1694_storage"},{"astId":3027,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"minAuctionIncrement","offset":0,"slot":"10","type":"t_uint256"},{"astId":3029,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"owner","offset":0,"slot":"11","type":"t_address_payable"},{"astId":3034,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"NFT_ID","offset":0,"slot":"12","type":"t_mapping(t_uint256,t_struct(NFT)3060_storage)"},{"astId":3039,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"listings","offset":0,"slot":"13","type":"t_mapping(t_uint256,t_struct(Listing)3077_storage)"},{"astId":3045,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"bids","offset":0,"slot":"14","type":"t_mapping(t_uint256,t_mapping(t_address,t_uint256))"},{"astId":3049,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"highestBidder","offset":0,"slot":"15","type":"t_mapping(t_uint256,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_address_payable":{"encoding":"inplace","label":"address payable","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_bool))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => bool))","numberOfBytes":"32","value":"t_mapping(t_address,t_bool)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_mapping(t_uint256,t_address)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => address)","numberOfBytes":"32","value":"t_address"},"t_mapping(t_uint256,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_uint256,t_string_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => string)","numberOfBytes":"32","value":"t_string_storage"},"t_mapping(t_uint256,t_struct(Listing)3077_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct RSKNFT.Listing)","numberOfBytes":"32","value":"t_struct(Listing)3077_storage"},"t_mapping(t_uint256,t_struct(NFT)3060_storage)":{"encoding":"mapping","key":"t_uint256","label":"mapping(uint256 => struct RSKNFT.NFT)","numberOfBytes":"32","value":"t_struct(NFT)3060_storage"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_struct(Counter)1694_storage":{"encoding":"inplace","label":"struct Counters.Counter","members":[{"astId":1693,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"_value","offset":0,"slot":"0","type":"t_uint256"}],"numberOfBytes":"32"},"t_struct(Listing)3077_storage":{"encoding":"inplace","label":"struct RSKNFT.Listing","members":[{"astId":3062,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"seller","offset":0,"slot":"0","type":"t_address"},{"astId":3064,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"owner","offset":0,"slot":"1","type":"t_address"},{"astId":3066,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"tokenId","offset":0,"slot":"2","type":"t_uint256"},{"astId":3068,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"price","offset":0,"slot":"3","type":"t_uint256"},{"astId":3070,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"netPrice","offset":0,"slot":"4","type":"t_uint256"},{"astId":3072,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"startAt","offset":0,"slot":"5","type":"t_uint256"},{"astId":3074,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"endAt","offset":0,"slot":"6","type":"t_uint256"},{"astId":3076,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"status","offset":0,"slot":"7","type":"t_uint8"}],"numberOfBytes":"256"},"t_struct(NFT)3060_storage":{"encoding":"inplace","label":"struct RSKNFT.NFT","members":[{"astId":3051,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":3053,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"seller","offset":0,"slot":"1","type":"t_address"},{"astId":3055,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"price","offset":0,"slot":"2","type":"t_uint256"},{"astId":3057,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"sold","offset":0,"slot":"3","type":"t_bool"},{"astId":3059,"contract":"contracts/RSKNFT.sol:RSKNFT","label":"tokenId","offset":0,"slot":"4","type":"t_uint256"}],"numberOfBytes":"160"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"events":{"NFT_Action(uint256,address,address,uint256,bool,string)":{"notice":"NFT event action"}},"kind":"user","methods":{"allNfts()":{"notice":"All nfts retrieval,"},"getNftPrice(uint256)":{"notice":"retrieve nft price"},"singleNFT(uint256)":{"notice":"retrieval of single nft"},"userNfts()":{"notice":"retrieval of all purchased nfts that belong to a user"}},"version":1}}}}}}